{"ast":null,"code":"import _regeneratorRuntime from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\n\nvar TypeSolidWasteClient =\n/*#__PURE__*/\nfunction () {\n  function TypeSolidWasteClient(url) {\n    _classCallCheck(this, TypeSolidWasteClient);\n\n    this.url = url;\n    this.request = axios.create({\n      baseURL: url,\n      timeout: 30000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  _createClass(TypeSolidWasteClient, [{\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(typeSolidWaste) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.request.post('/', JSON.stringify(typeSolidWaste));\n\n              case 2:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function save(_x) {\n        return _save.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getAll\",\n    value: function () {\n      var _getAll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.request.get('/');\n\n              case 2:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getAll() {\n        return _getAll.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.request.delete(\"?id=\".concat(id));\n\n              case 2:\n                response = _context3.sent;\n                return _context3.abrupt(\"return\", response);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function remove(_x2) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n  }]);\n\n  return TypeSolidWasteClient;\n}();\n\nexport { TypeSolidWasteClient as default };","map":{"version":3,"sources":["/home/leo/Documents/github/tcc/front/not-found/front/src/api/TypeSolidWasteClient.js"],"names":["axios","TypeSolidWasteClient","url","request","create","baseURL","timeout","headers","typeSolidWaste","post","JSON","stringify","response","get","id","delete"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,oB;;;AAEjB,gCAAYC,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAeH,KAAK,CAACI,MAAN,CAAa;AACxBC,MAAAA,OAAO,EAAEH,GADe;AAExBI,MAAAA,OAAO,EAAE,KAFe;AAGxBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHe,KAAb,CAAf;AAOH;;;;;;;gDAGUC,c;;;;;;;uBACgB,KAAKL,OAAL,CAAaM,IAAb,CAAkB,GAAlB,EAAuBC,IAAI,CAACC,SAAL,CAAeH,cAAf,CAAvB,C;;;AAAjBI,gBAAAA,Q;iDACCA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIgB,KAAKT,OAAL,CAAaU,GAAb,CAAiB,GAAjB,C;;;AAAjBD,gBAAAA,Q;kDACCA,Q;;;;;;;;;;;;;;;;;;;iDAGEE,E;;;;;;;uBACc,KAAKX,OAAL,CAAaY,MAAb,eAA2BD,EAA3B,E;;;AAAjBF,gBAAAA,Q;kDACCA,Q;;;;;;;;;;;;;;;;;;;SA1BMX,oB","sourcesContent":["import axios from 'axios';\n\nexport default class TypeSolidWasteClient {\n\n    constructor(url) {\n        this.url = url;\n        this.request = axios.create({\n            baseURL: url,\n            timeout: 30000,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n\n    async save(typeSolidWaste) {\n        const response = await this.request.post('/', JSON.stringify(typeSolidWaste));\n        return response;\n    }\n\n    async getAll() {\n        const response = await this.request.get('/');\n        return response;\n    }\n\n    async remove(id) {\n        const response = await this.request.delete(`?id=${id}`);\n        return response;\n    }\n}"]},"metadata":{},"sourceType":"module"}