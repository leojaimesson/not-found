{"ast":null,"code":"import _regeneratorRuntime from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/leo/Documents/github/tcc/front/not-found/front/src/pages/ReportPage.js\";\nimport React, { Component } from 'react';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport vfsFonts from 'pdfmake/build/vfs_fonts';\nimport { Table, Row, Col, Button, Form, Select, DatePicker } from 'antd';\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataClient from '../api/DataClient';\nimport DataList from '../helpers/DataList';\nimport DataDoc from '../helpers/DataDoc';\nimport CollectionReport from '../docs/templates/CollectionReport';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\n\nvar ReportPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReportPage, _Component);\n\n  function ReportPage(props) {\n    var _this;\n\n    _classCallCheck(this, ReportPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReportPage).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(err, values) {\n          var type, endDate, startDate, start, end, response, result, result2, total;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (err) {\n                    _context.next = 18;\n                    break;\n                  }\n\n                  type = values.type, endDate = values.endDate, startDate = values.startDate;\n\n                  if (!(endDate && startDate)) {\n                    _context.next = 18;\n                    break;\n                  }\n\n                  start = new Date(startDate);\n                  start.setHours(0);\n                  start.setMinutes(0);\n                  start.setSeconds(0);\n                  end = new Date(endDate);\n                  end.setHours(23);\n                  end.setMinutes(59);\n                  end.setSeconds(59);\n                  _context.next = 13;\n                  return _this.dataClient.getWastesByPeriodFull(start, end, type);\n\n                case 13:\n                  response = _context.sent;\n                  result = response.data.map(function (value) {\n                    return DataList.toSolidWasteCollectedData(value.data);\n                  }).reduce(function (acc, current) {\n                    return _toConsumableArray(acc).concat(_toConsumableArray(current));\n                  });\n                  result2 = result.map(function (value) {\n                    return DataDoc.toSolidWasteCollectedData(value);\n                  });\n                  total = result2.reduce(function (acc, current) {\n                    return acc + current[1];\n                  }, 0);\n\n                  _this.setState({\n                    dataTables: result,\n                    dataDoc: {\n                      datas: result2,\n                      total: total,\n                      startDate: startDate.format('DD/MM/YYYY'),\n                      endDate: endDate.format('DD/MM/YYYY')\n                    },\n                    total: total\n                  });\n\n                case 18:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.handleChangeTable = function (pagination, filters, sorter) {\n      _this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    };\n\n    _this.render = function () {\n      var getFieldDecorator = _this.props.form.getFieldDecorator;\n      var columns = [{\n        title: '',\n        dataIndex: 'color',\n        key: 'color',\n        width: 20,\n        render: function render(color) {\n          return React.createElement(\"div\", {\n            style: {\n              width: '10px',\n              height: '10px',\n              background: color\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          });\n        }\n      }, {\n        title: 'Data',\n        dataIndex: 'collectionDate',\n        key: 'collectionDate',\n        width: 150,\n        sorter: function sorter(a, b) {\n          var firstSplit = a.collectionDate.split('/');\n          var secondSplit = b.collectionDate.split('/');\n          var first = new Date(parseInt(firstSplit[2]), parseInt(firstSplit[1]) - 1, parseInt(firstSplit[0]));\n          var second = new Date(parseInt(secondSplit[2]), parseInt(secondSplit[1]) - 1, parseInt(secondSplit[0]));\n          return first - second;\n        },\n        sortOrder: _this.state.sortedInfo.columnKey === 'collectionDate' && _this.state.sortedInfo.order\n      }, {\n        title: 'Total coletado',\n        dataIndex: 'quantityCollected',\n        key: 'quantityCollected',\n        width: 200,\n        render: function render(text, record) {\n          return \"\".concat(text, \" Kg\");\n        },\n        sorter: function sorter(a, b) {\n          return a.quantityCollected - b.quantityCollected;\n        },\n        sortOrder: _this.state.sortedInfo.columnKey === 'quantityCollected' && _this.state.sortedInfo.order\n      }, {\n        title: 'Tipo',\n        dataIndex: 'typeWasted',\n        key: 'typeWasted'\n      }];\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 24\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 24\n          }\n        }\n      };\n      return React.createElement(React.Fragment, null, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"space-between\",\n        align: \"middle\",\n        gutter: 24,\n        style: {\n          background: 'white',\n          margin: '0px',\n          padding: '10px 0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: {\n          span: 24\n        },\n        lg: {\n          span: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Form, {\n        layout: \"inline\",\n        onSubmit: _this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"space-between\",\n        align: \"middle\",\n        gutter: 24,\n        style: {\n          background: 'white',\n          margin: '0px',\n          padding: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: {\n          span: 24\n        },\n        lg: {\n          span: 4\n        },\n        style: {\n          padding: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), getFieldDecorator('type', {\n        rules: [{\n          required: false\n        }],\n        initialValue: ''\n      })(React.createElement(Select, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Todos\"), _this.state.typesSolidWaste.map(function (value) {\n        return React.createElement(Option, {\n          value: value._id,\n          key: value._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, value.name);\n      }))))), React.createElement(Col, {\n        xs: {\n          span: 24\n        },\n        lg: {\n          span: 10\n        },\n        style: {\n          padding: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"space-between\",\n        align: \"middle\",\n        gutter: 24,\n        style: {\n          background: 'white',\n          margin: '0px',\n          padding: '10px 0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: {\n          span: 24\n        },\n        lg: {\n          span: 9\n        },\n        style: {\n          padding: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), getFieldDecorator('startDate', {\n        rules: [{\n          required: false\n        }]\n      })(React.createElement(DatePicker, {\n        style: {\n          width: '100%'\n        },\n        placeholder: \"Inicio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        xs: {\n          span: 24\n        },\n        lg: {\n          span: 9\n        },\n        style: {\n          padding: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), getFieldDecorator('endDate', {\n        rules: [{\n          required: false\n        }]\n      })(React.createElement(DatePicker, {\n        style: {\n          width: '100%'\n        },\n        placeholder: \"fim\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        xs: {\n          span: 24\n        },\n        lg: {\n          span: 2\n        },\n        style: {\n          padding: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: '100%'\n        },\n        icon: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }))))))))), _this.state.dataTables.length > 0 && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          padding: '10px',\n          background: 'white',\n          margin: '16px 0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"space-between\",\n        align: \"middle\",\n        gutter: 24,\n        style: {\n          background: 'white',\n          margin: '0px',\n          padding: '10px 0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: {\n          span: 24\n        },\n        lg: {\n          span: 4\n        },\n        style: {\n          padding: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Total Coletado \", _this.state.total, \" Kg\")), React.createElement(Col, {\n        xs: {\n          span: 24\n        },\n        lg: {\n          span: 3\n        },\n        style: {\n          padding: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Button, {\n        ype: \"primary\",\n        htmlType: \"button\",\n        style: {\n          width: '100%'\n        },\n        icon: \"file-pdf\",\n        onClick: function onClick() {\n          var vfs = vfsFonts.pdfMake.vfs;\n          pdfMake.vfs = vfs;\n          pdfMake.createPdf(CollectionReport(_this.state.dataDoc)).download('report.pdf');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"PDF\")))), React.createElement(Table, {\n        columns: columns,\n        onChange: _this.handleChangeTable,\n        bordered: true,\n        dataSource: _this.state.dataTables,\n        scroll: window.innerWidth <= 600 ? {\n          x: 700\n        } : undefined,\n        style: {\n          background: \"white\",\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })));\n    };\n\n    _this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n    _this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n    _this.state = {\n      typesSolidWaste: [],\n      dataTypesSolidWaste: [],\n      dataTables: [],\n      total: 0,\n      dataDoc: {},\n      filteredInfo: {},\n      sortedInfo: {}\n    };\n    return _this;\n  }\n\n  _createClass(ReportPage, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.typeSolidWasteClient.getAll();\n\n              case 2:\n                response = _context2.sent;\n                this.setState({\n                  typesSolidWaste: response.data,\n                  dataTypesSolidWaste: response ? DataList.toTypesSolidWasteData(response.data) : []\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      };\n    }()\n  }]);\n\n  return ReportPage;\n}(Component);\n\nexport default Form.create()(ReportPage);","map":{"version":3,"sources":["/home/leo/Documents/github/tcc/front/not-found/front/src/pages/ReportPage.js"],"names":["React","Component","pdfMake","vfsFonts","Table","Row","Col","Button","Form","Select","DatePicker","TypeSolidWasteClient","DataClient","DataList","DataDoc","CollectionReport","FormItem","Item","Option","ReportPage","props","handleSubmit","e","preventDefault","form","validateFields","err","values","type","endDate","startDate","start","Date","setHours","setMinutes","setSeconds","end","dataClient","getWastesByPeriodFull","response","result","data","map","value","toSolidWasteCollectedData","reduce","acc","current","result2","total","setState","dataTables","dataDoc","datas","format","handleChangeTable","pagination","filters","sorter","filteredInfo","sortedInfo","render","getFieldDecorator","columns","title","dataIndex","key","width","color","height","background","a","b","firstSplit","collectionDate","split","secondSplit","first","parseInt","second","sortOrder","state","columnKey","order","text","record","quantityCollected","formItemLayout","labelCol","xs","span","sm","wrapperCol","margin","padding","rules","required","initialValue","typesSolidWaste","_id","name","length","vfs","createPdf","download","window","innerWidth","x","undefined","marginBottom","typeSolidWasteClient","dataTypesSolidWaste","getAll","toTypesSolidWasteData","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport vfsFonts from 'pdfmake/build/vfs_fonts';\n\nimport { Table, Row, Col, Button, Form, Select, DatePicker } from 'antd';\n\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataClient from '../api/DataClient';\n\nimport DataList from '../helpers/DataList';\n\nimport DataDoc from '../helpers/DataDoc';\n\nimport CollectionReport from '../docs/templates/CollectionReport';\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\nclass ReportPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n        this.state = {\n            typesSolidWaste: [],\n            dataTypesSolidWaste: [],\n            dataTables: [],\n            total: 0,\n            dataDoc: {},\n            filteredInfo: {},\n            sortedInfo: {}\n        };\n    }\n\n    async componentWillMount() {\n        const response = await this.typeSolidWasteClient.getAll();\n        this.setState({\n            typesSolidWaste: response.data,\n            dataTypesSolidWaste: response ? DataList.toTypesSolidWasteData(response.data) : [],\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                const {\n                    type,\n                    endDate,\n                    startDate,\n                } = values;\n\n                if (endDate && startDate) {\n                    const start = new Date(startDate);\n                    start.setHours(0)\n                    start.setMinutes(0);\n                    start.setSeconds(0);\n\n                    const end = new Date(endDate);\n                    end.setHours(23)\n                    end.setMinutes(59);\n                    end.setSeconds(59);\n\n                    const response = await this.dataClient.getWastesByPeriodFull(start, end, type);\n\n                    const result = response.data.map((value) => DataList.toSolidWasteCollectedData(value.data)).reduce((acc, current) => [...acc, ...current]);\n\n                    const result2 = result.map((value) => {\n                        return DataDoc.toSolidWasteCollectedData(value);\n                    });\n\n                    const total = result2.reduce((acc, current) => acc + current[1], 0);\n\n                    this.setState({\n                        dataTables: result,\n                        dataDoc: {\n                            datas: result2,\n                            total: total,\n                            startDate: startDate.format('DD/MM/YYYY'),\n                            endDate: endDate.format('DD/MM/YYYY'),\n                        },\n                        total: total,\n                    });\n                }\n            }\n        });\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            }, {\n            title: 'Data',\n            dataIndex: 'collectionDate',\n            key: 'collectionDate',\n            width: 150,\n            sorter: (a, b) => {\n                const firstSplit = a.collectionDate.split('/');\n                const secondSplit = b.collectionDate.split('/');\n\n                const first = new Date(parseInt(firstSplit[2]), parseInt(firstSplit[1]) - 1, parseInt(firstSplit[0]));\n                const second = new Date(parseInt(secondSplit[2]), parseInt(secondSplit[1]) - 1, parseInt(secondSplit[0]));\n\n                return first - second;\n            },\n            sortOrder: this.state.sortedInfo.columnKey === 'collectionDate' && this.state.sortedInfo.order,\n        }, {\n            title: 'Total coletado',\n            dataIndex: 'quantityCollected',\n            key: 'quantityCollected',\n            width: 200,\n            render: (text, record) => (\n                `${text} Kg`\n            ),\n            sorter: (a, b) => a.quantityCollected - b.quantityCollected,\n            sortOrder: this.state.sortedInfo.columnKey === 'quantityCollected' && this.state.sortedInfo.order,\n        }, {\n            title: 'Tipo',\n            dataIndex: 'typeWasted',\n            key: 'typeWasted'\n        }];\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n        };\n\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                    <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '0px' }}>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n\n                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                        {getFieldDecorator('type', {\n                                            rules: [{ required: false }],\n                                            initialValue: ''\n                                        })(\n                                            <Select style={{ width: '100%' }}>\n                                                <Option value=\"\">Todos</Option>\n                                                {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                            </Select>\n                                        )}\n                                    </FormItem>\n                                </Col>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 10 }} style={{ padding: '0px' }}>\n                                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 9 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('startDate', {\n                                                    rules: [{\n                                                        required: false,\n                                                    }]\n                                                })(\n                                                    <DatePicker style={{ width: '100%' }} placeholder=\"Inicio\" />\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 9 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('endDate', {\n                                                    rules: [{\n                                                        required: false,\n                                                    }],\n                                                })(\n                                                    <DatePicker style={{ width: '100%' }} placeholder=\"fim\" />\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 2 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                <Button\n                                                    type=\"primary\"\n                                                    htmlType=\"submit\"\n                                                    style={{ width: '100%' }}\n                                                    icon=\"search\"\n                                                >\n                                                </Button>\n                                            </FormItem>\n                                        </Col>\n                                    </Row>\n\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n                {this.state.dataTables.length > 0 &&\n                    <div>\n                        <div style={{\n                            padding: '10px',\n                            background: 'white',\n                            margin: '16px 0px'\n                        }}>\n                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                    <h3 style={{ margin: '0px' }}>Total Coletado {this.state.total} Kg</h3>\n                                </Col>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 3 }} style={{ padding: '0px' }}>\n                                    <Button ype=\"primary\"\n                                        htmlType=\"button\"\n                                        style={{ width: '100%' }}\n                                        icon=\"file-pdf\"\n                                        onClick={() => {\n                                            const { vfs } = vfsFonts.pdfMake;\n                                            pdfMake.vfs = vfs;\n                                            pdfMake.createPdf(CollectionReport(this.state.dataDoc)).download('report.pdf')\n                                        }}>PDF</Button>\n                                </Col>\n                            </Row>\n                        </div>\n                        <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.dataTables} scroll={window.innerWidth <= 600 ? { x: 700 } : undefined} style={{ background: \"white\", marginBottom: '20px' }} />\n                    </div>\n                }\n\n            </>\n        );\n    }\n}\n\nexport default Form.create()(ReportPage);"]},"metadata":{},"sourceType":"module"}