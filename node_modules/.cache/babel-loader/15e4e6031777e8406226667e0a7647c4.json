{"ast":null,"code":"import _regeneratorRuntime from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/leo/Documents/github/tcc/front/not-found/front/src/pages/TypesSolidWastePage.js\";\nimport React from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Input, Checkbox, Tag } from 'antd';\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataList from '../helpers/DataList';\nvar FormItem = Form.Item;\n\nvar TypesSolidWastePage =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TypesSolidWastePage, _React$PureComponent);\n\n  function TypesSolidWastePage(props) {\n    var _this;\n\n    _classCallCheck(this, TypesSolidWastePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TypesSolidWastePage).call(this, props));\n\n    _this.showModal = function () {\n      _this.setState({\n        modalVisible: true\n      });\n    };\n\n    _this.handleOk = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(err, values) {\n          var typeSolidWaste, response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (err) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  console.log(values);\n                  typeSolidWaste = {\n                    name: values.name.toUpperCase(),\n                    description: values.description,\n                    recyclable: _this.state.isRecyclable,\n                    reutilable: _this.state.isReutilable,\n                    color: values.color\n                  };\n                  _context.next = 5;\n                  return _this.typeSolidWasteClient.save(typeSolidWaste);\n\n                case 5:\n                  response = _context.sent;\n\n                  _this.setState({\n                    typesSolidWaste: [{\n                      color: response.data.color,\n                      key: response.data._id,\n                      name: response.data.name,\n                      description: response.data.description,\n                      tags: DataList.toTags(response.data)\n                    }].concat(_toConsumableArray(_this.state.typesSolidWaste)),\n                    modalVisible: false,\n                    isRecyclable: false,\n                    isReutilable: false\n                  });\n\n                  _this.props.form.resetFields();\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.handleCancel = function (e) {\n      _this.setState({\n        modalVisible: false,\n        isRecyclable: false,\n        isReutilable: false\n      });\n    };\n\n    _this.handleChangeCheckRecyclable = function (e) {\n      _this.setState({\n        isRecyclable: e.target.checked\n      });\n    };\n\n    _this.handleChangeCheckReutilable = function (e) {\n      _this.setState({\n        isReutilable: e.target.checked\n      });\n    };\n\n    _this.handleChangeTable = function (pagination, filters, sorter) {\n      _this.setState({\n        filteredInfo: filters\n      });\n    };\n\n    _this.render = function () {\n      var getFieldDecorator = _this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 7\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 15\n          }\n        }\n      };\n      var formTailLayout = {\n        labelCol: {\n          span: 4\n        },\n        wrapperCol: {\n          xs: {\n            span: 12,\n            offset: 0\n          },\n          sm: {\n            span: 12,\n            offset: 7\n          }\n        }\n      };\n      var columns = [{\n        title: '',\n        dataIndex: 'color',\n        key: 'color',\n        width: 20,\n        render: function render(color) {\n          return React.createElement(\"div\", {\n            style: {\n              width: '10px',\n              height: '10px',\n              background: color\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          });\n        }\n      }, {\n        title: 'Nome',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: 'Descrição',\n        dataIndex: 'description',\n        key: 'description'\n      }, {\n        title: '',\n        key: 'tags',\n        dataIndex: 'tags',\n        render: function render(tags) {\n          function tagT(t) {\n            if (t === 'recyclable') {\n              return 'Reciclável';\n            } else if (t === 'reutilable') {\n              return 'Reutilizável';\n            } else {\n              return '';\n            }\n          }\n\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, tags.map(function (tag) {\n            return React.createElement(Tag, {\n              color: \"blue\",\n              key: tag,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169\n              },\n              __self: this\n            }, tagT(tag));\n          }));\n        },\n        filters: _this.state.filters,\n        filteredValue: _this.state.filteredInfo.tags || null,\n        onFilter: function onFilter(value, record) {\n          return record.tags.includes(value);\n        }\n      }, {\n        title: 'Ação',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(Button, {\n            type: \"danger\",\n            icon: \"delete\",\n            onClick: _this.modalExcluir.bind(_assertThisInitialized(_assertThisInitialized(_this)), text.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          });\n        }\n      }];\n      return React.createElement(React.Fragment, null, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"space-between\",\n        align: \"middle\",\n        style: {\n          marginBottom: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        shape: \"circle\",\n        icon: \"plus\",\n        size: \"large\",\n        style: {\n          height: '50px',\n          width: '50px',\n          position: 'fixed',\n          bottom: '50px',\n          right: '10px',\n          zIndex: \"999\"\n        },\n        onClick: _this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        title: \"Cadastrar no tipo de res\\xEDduo\",\n        visible: _this.state.modalVisible,\n        okText: \"Cadastrar\",\n        onOk: _this.handleOk,\n        onCancel: _this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Nome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), getFieldDecorator('name', {\n        rules: [{\n          required: true,\n          message: 'Por favor digite o nome do tipo de resíduo'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Descri\\xE7\\xE3o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), getFieldDecorator('description', {\n        rules: [{\n          required: true,\n          message: 'Por favor digite a descrição do tipo de resíduo'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Cor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), getFieldDecorator('color', {\n        rules: [{\n          required: true,\n          message: 'Por favor selecione uma cor para este tipo de resíduo'\n        }]\n      })(React.createElement(Input, {\n        type: \"color\",\n        onChange: function onChange(e) {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formTailLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        checked: _this.state.isRecyclable,\n        onClick: _this.handleChangeCheckRecyclable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Recicl\\xE1vel\"), React.createElement(Checkbox, {\n        checked: _this.state.isReutilable,\n        onClick: _this.handleChangeCheckReutilable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Reutiliz\\xE1vel\")))), React.createElement(Table, {\n        columns: columns,\n        onChange: _this.handleChangeTable,\n        bordered: true,\n        dataSource: _this.state.typesSolidWaste,\n        scroll: window.innerWidth <= 600 ? {\n          x: 900\n        } : undefined,\n        style: {\n          background: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }));\n    };\n\n    _this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n    _this.state = {\n      modalVisible: false,\n      visibleModalExcluir: false,\n      isRecyclable: false,\n      isReutilable: false,\n      typesSolidWaste: [],\n      filters: [],\n      filteredInfo: {}\n    };\n    return _this;\n  }\n\n  _createClass(TypesSolidWastePage, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.typeSolidWasteClient.getAll();\n\n              case 2:\n                response = _context2.sent;\n                this.setState({\n                  typesSolidWaste: response ? DataList.toTypesSolidWasteData(response.data).reverse() : []\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"modalExcluir\",\n    value: function modalExcluir(idTypeSolidWaste) {\n      var _this2 = this;\n\n      Modal.error({\n        title: 'Deseja realmente excluir este tipo de residuo?',\n        cancelText: 'Cancelar',\n        okCancel: true,\n        okText: 'Excluir',\n        onOk: function () {\n          var _onOk = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee3() {\n            var response;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return _this2.typeSolidWasteClient.remove(idTypeSolidWaste);\n\n                  case 2:\n                    response = _context3.sent;\n\n                    _this2.setState({\n                      typesSolidWaste: _this2.state.typesSolidWaste.filter(function (typeSolidWast) {\n                        return typeSolidWast.key !== response.data._id;\n                      })\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, this);\n          }));\n\n          return function onOk() {\n            return _onOk.apply(this, arguments);\n          };\n        }()\n      });\n    }\n  }]);\n\n  return TypesSolidWastePage;\n}(React.PureComponent);\n\nexport default Form.create()(TypesSolidWastePage);","map":{"version":3,"sources":["/home/leo/Documents/github/tcc/front/not-found/front/src/pages/TypesSolidWastePage.js"],"names":["React","Table","Modal","Row","Col","Button","Form","Input","Checkbox","Tag","TypeSolidWasteClient","DataList","FormItem","Item","TypesSolidWastePage","props","showModal","setState","modalVisible","handleOk","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","typeSolidWaste","name","toUpperCase","description","recyclable","state","isRecyclable","reutilable","isReutilable","color","typeSolidWasteClient","save","response","typesSolidWaste","data","key","_id","tags","toTags","resetFields","handleCancel","handleChangeCheckRecyclable","target","checked","handleChangeCheckReutilable","handleChangeTable","pagination","filters","sorter","filteredInfo","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","formTailLayout","offset","columns","title","dataIndex","width","height","background","tagT","t","map","tag","filteredValue","onFilter","value","record","includes","text","modalExcluir","bind","marginBottom","position","bottom","right","zIndex","rules","required","message","window","innerWidth","x","undefined","visibleModalExcluir","getAll","toTypesSolidWasteData","reverse","idTypeSolidWaste","error","cancelText","okCancel","okText","onOk","remove","filter","typeSolidWast","PureComponent","create"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,MAAjC,EAAyCC,IAAzC,EAA+CC,KAA/C,EAAsDC,QAAtD,EAAgEC,GAAhE,QAA2E,MAA3E;AAEA,OAAOC,oBAAP,MAAiC,6BAAjC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,IAAMC,QAAQ,GAAGN,IAAI,CAACO,IAAtB;;IAGMC,mB;;;;;AAEF,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6FAAMA,KAAN;;AADe,UAoCnBC,SApCmB,GAoCP,YAAM;AACd,YAAKC,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAE;AADJ,OAAd;AAGH,KAxCkB;;AAAA,UA0CnBC,QA1CmB,GA0CR,UAACC,CAAD,EAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKN,KAAL,CAAWO,IAAX,CAAgBC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAwC,iBAAOC,GAAP,EAAYC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAC/BD,GAD+B;AAAA;AAAA;AAAA;;AAEhCE,kBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACMG,kBAAAA,cAH0B,GAGT;AACnBC,oBAAAA,IAAI,EAAEJ,MAAM,CAACI,IAAP,CAAYC,WAAZ,EADa;AAEnBC,oBAAAA,WAAW,EAAEN,MAAM,CAACM,WAFD;AAGnBC,oBAAAA,UAAU,EAAE,MAAKC,KAAL,CAAWC,YAHJ;AAInBC,oBAAAA,UAAU,EAAE,MAAKF,KAAL,CAAWG,YAJJ;AAKnBC,oBAAAA,KAAK,EAAEZ,MAAM,CAACY;AALK,mBAHS;AAAA;AAAA,yBAUT,MAAKC,oBAAL,CAA0BC,IAA1B,CAA+BX,cAA/B,CAVS;;AAAA;AAU1BY,kBAAAA,QAV0B;;AAWhC,wBAAKvB,QAAL,CAAc;AACVwB,oBAAAA,eAAe,GAAG;AACdJ,sBAAAA,KAAK,EAAEG,QAAQ,CAACE,IAAT,CAAcL,KADP;AAEdM,sBAAAA,GAAG,EAAEH,QAAQ,CAACE,IAAT,CAAcE,GAFL;AAEUf,sBAAAA,IAAI,EAAEW,QAAQ,CAACE,IAAT,CAAcb,IAF9B;AAEoCE,sBAAAA,WAAW,EAAES,QAAQ,CAACE,IAAT,CAAcX,WAF/D;AAE4Ec,sBAAAA,IAAI,EAAElC,QAAQ,CAACmC,MAAT,CAAgBN,QAAQ,CAACE,IAAzB;AAFlF,qBAAH,4BAGT,MAAKT,KAAL,CAAWQ,eAHF,EADL;AAKVvB,oBAAAA,YAAY,EAAE,KALJ;AAMVgB,oBAAAA,YAAY,EAAE,KANJ;AAOVE,oBAAAA,YAAY,EAAE;AAPJ,mBAAd;;AASA,wBAAKrB,KAAL,CAAWO,IAAX,CAAgByB,WAAhB;;AApBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxC;;AAAA;AAAA;AAAA;AAAA;AAwBH,KApEkB;;AAAA,UAsEnBC,YAtEmB,GAsEJ,UAAC5B,CAAD,EAAO;AAClB,YAAKH,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAE,KADJ;AAEVgB,QAAAA,YAAY,EAAE,KAFJ;AAGVE,QAAAA,YAAY,EAAE;AAHJ,OAAd;AAKH,KA5EkB;;AAAA,UA8EnBa,2BA9EmB,GA8EW,UAAC7B,CAAD,EAAO;AACjC,YAAKH,QAAL,CAAc;AACViB,QAAAA,YAAY,EAAEd,CAAC,CAAC8B,MAAF,CAASC;AADb,OAAd;AAGH,KAlFkB;;AAAA,UAoFnBC,2BApFmB,GAoFW,UAAChC,CAAD,EAAO;AACjC,YAAKH,QAAL,CAAc;AACVmB,QAAAA,YAAY,EAAEhB,CAAC,CAAC8B,MAAF,CAASC;AADb,OAAd;AAGH,KAxFkB;;AAAA,UA0FnBE,iBA1FmB,GA0FC,UAACC,UAAD,EAAaC,OAAb,EAAsBC,MAAtB,EAAiC;AACjD,YAAKvC,QAAL,CAAc;AACVwC,QAAAA,YAAY,EAAEF;AADJ,OAAd;AAGH,KA9FkB;;AAAA,UAgGnBG,MAhGmB,GAgGV,YAAM;AAAA,UAEHC,iBAFG,GAEmB,MAAK5C,KAAL,CAAWO,IAF9B,CAEHqC,iBAFG;AAGX,UAAMC,cAAc,GAAG;AACnBC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADE;AAENC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFE,SADS;AAKnBE,QAAAA,UAAU,EAAE;AACRH,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADI;AAERC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFI;AALO,OAAvB;AAWA,UAAMG,cAAc,GAAG;AACnBL,QAAAA,QAAQ,EAAE;AAAEE,UAAAA,IAAI,EAAE;AAAR,SADS;AAEnBE,QAAAA,UAAU,EAAE;AACRH,UAAAA,EAAE,EAAE;AACAC,YAAAA,IAAI,EAAE,EADN;AACUI,YAAAA,MAAM,EAAE;AADlB,WADI;AAIRH,UAAAA,EAAE,EAAE;AACAD,YAAAA,IAAI,EAAE,EADN;AACUI,YAAAA,MAAM,EAAE;AADlB;AAJI;AAFO,OAAvB;AAYA,UAAMC,OAAO,GAAG,CACZ;AACIC,QAAAA,KAAK,EAAE,EADX;AAEIC,QAAAA,SAAS,EAAE,OAFf;AAGI3B,QAAAA,GAAG,EAAE,OAHT;AAII4B,QAAAA,KAAK,EAAE,EAJX;AAKIb,QAAAA,MAAM,EAAE,gBAAArB,KAAK;AAAA,iBACT;AAAK,YAAA,KAAK,EAAE;AAAEkC,cAAAA,KAAK,EAAE,MAAT;AAAiBC,cAAAA,MAAM,EAAE,MAAzB;AAAiCC,cAAAA,UAAU,EAAEpC;AAA7C,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS;AAAA;AALjB,OADY,EAUZ;AACIgC,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,SAAS,EAAE,MAFf;AAGI3B,QAAAA,GAAG,EAAE;AAHT,OAVY,EAcT;AACC0B,QAAAA,KAAK,EAAE,WADR;AAECC,QAAAA,SAAS,EAAE,aAFZ;AAGC3B,QAAAA,GAAG,EAAE;AAHN,OAdS,EAmBT;AACC0B,QAAAA,KAAK,EAAE,EADR;AAEC1B,QAAAA,GAAG,EAAE,MAFN;AAGC2B,QAAAA,SAAS,EAAE,MAHZ;AAICZ,QAAAA,MAAM,EAAE,gBAAAb,IAAI,EAAI;AACZ,mBAAS6B,IAAT,CAAcC,CAAd,EAAiB;AACb,gBAAIA,CAAC,KAAK,YAAV,EAAwB;AACpB,qBAAO,YAAP;AACH,aAFD,MAEO,IAAIA,CAAC,KAAK,YAAV,EAAwB;AAC3B,qBAAO,cAAP;AACH,aAFM,MAEA;AACH,qBAAO,EAAP;AACH;AACJ;;AACD,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK9B,IAAI,CAAC+B,GAAL,CAAS,UAAAC,GAAG;AAAA,mBAAI,oBAAC,GAAD;AAAK,cAAA,KAAK,EAAC,MAAX;AAAkB,cAAA,GAAG,EAAEA,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA6BH,IAAI,CAACG,GAAD,CAAjC,CAAJ;AAAA,WAAZ,CADL,CADJ;AAKH,SAnBF;AAoBCtB,QAAAA,OAAO,EAAE,MAAKtB,KAAL,CAAWsB,OApBrB;AAqBCuB,QAAAA,aAAa,EAAE,MAAK7C,KAAL,CAAWwB,YAAX,CAAwBZ,IAAxB,IAAgC,IArBhD;AAsBCkC,QAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQC,MAAR,EAAmB;AACzB,iBAAOA,MAAM,CAACpC,IAAP,CAAYqC,QAAZ,CAAqBF,KAArB,CAAP;AACH;AAxBF,OAnBS,EA4CT;AACCX,QAAAA,KAAK,EAAE,MADR;AAEC1B,QAAAA,GAAG,EAAE,QAFN;AAGCe,QAAAA,MAAM,EAAE,gBAACyB,IAAD,EAAOF,MAAP;AAAA,iBACJ,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,IAAI,EAAC,QAA3B;AAAoC,YAAA,OAAO,EAAE,MAAKG,YAAL,CAAkBC,IAAlB,wDAA6BF,IAAI,CAACxC,GAAlC,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI;AAAA;AAHT,OA5CS,CAAhB;AAoDA,aACI,0CACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,MAAV;AAAiB,QAAA,OAAO,EAAC,eAAzB;AAAyC,QAAA,KAAK,EAAC,QAA/C;AAAwD,QAAA,KAAK,EAAE;AAAE2C,UAAAA,YAAY,EAAE;AAAhB,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAC,QAA7B;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,OAAvD;AAA+D,QAAA,KAAK,EAAE;AAAEd,UAAAA,MAAM,EAAE,MAAV;AAAkBD,UAAAA,KAAK,EAAE,MAAzB;AAAiCgB,UAAAA,QAAQ,EAAE,OAA3C;AAAoDC,UAAAA,MAAM,EAAE,MAA5D;AAAoEC,UAAAA,KAAK,EAAE,MAA3E;AAAmFC,UAAAA,MAAM,EAAE;AAA3F,SAAtE;AAA0K,QAAA,OAAO,EAAE,MAAK1E,SAAxL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,CADJ,CADJ,EAII,oBAAC,KAAD;AACI,QAAA,KAAK,EAAC,iCADV;AAEI,QAAA,OAAO,EAAE,MAAKiB,KAAL,CAAWf,YAFxB;AAGI,QAAA,MAAM,EAAE,WAHZ;AAII,QAAA,IAAI,EAAE,MAAKC,QAJf;AAKI,QAAA,QAAQ,EAAE,MAAK6B,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD,oBAAcY,cAAd;AAA8B,QAAA,KAAK,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACKD,iBAAiB,CAAC,MAAD,EAAS;AACvBgC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,QAAQ,EAAE,IADN;AACYC,UAAAA,OAAO,EAAE;AADrB,SAAD;AADgB,OAAT,CAAjB,CAKG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CADL,CADJ,EAWI,oBAAC,QAAD,oBAAcjC,cAAd;AAA8B,QAAA,KAAK,EAAC,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACKD,iBAAiB,CAAC,aAAD,EAAgB;AAC9BgC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,QAAQ,EAAE,IADN;AACYC,UAAAA,OAAO,EAAE;AADrB,SAAD;AADuB,OAAhB,CAAjB,CAKG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CADL,CAXJ,EAqBI,oBAAC,QAAD,oBAAcjC,cAAd;AAA8B,QAAA,KAAK,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACKD,iBAAiB,CAAC,OAAD,EAAU;AACxBgC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,QAAQ,EAAE,IADN;AACYC,UAAAA,OAAO,EAAE;AADrB,SAAD;AADiB,OAAV,CAAjB,CAKG,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,QAAQ,EAAE,kBAACzE,CAAD,EAAO,CAAG,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CADL,CArBJ,EA+BI,oBAAC,QAAD,oBAAc8C,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACI,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,MAAKjC,KAAL,CAAWC,YAA9B;AAA4C,QAAA,OAAO,EAAE,MAAKe,2BAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAII,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,MAAKhB,KAAL,CAAWG,YAA9B;AAA4C,QAAA,OAAO,EAAE,MAAKgB,2BAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ,CA/BJ,CAPJ,CAJJ,EAoDI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAEgB,OAAhB;AAAyB,QAAA,QAAQ,EAAE,MAAKf,iBAAxC;AAA2D,QAAA,QAAQ,MAAnE;AAAoE,QAAA,UAAU,EAAE,MAAKpB,KAAL,CAAWQ,eAA3F;AAA4G,QAAA,MAAM,EAAEqD,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B;AAAEC,UAAAA,CAAC,EAAE;AAAL,SAA3B,GAAwCC,SAA5J;AAAuK,QAAA,KAAK,EAAE;AAAExB,UAAAA,UAAU,EAAE;AAAd,SAA9K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApDJ,CADJ;AAwDH,KAtOkB;;AAEf,UAAKnC,oBAAL,GAA4B,IAAI5B,oBAAJ,CAAyB,iDAAzB,CAA5B;AACA,UAAKuB,KAAL,GAAa;AACTf,MAAAA,YAAY,EAAE,KADL;AAETgF,MAAAA,mBAAmB,EAAE,KAFZ;AAGThE,MAAAA,YAAY,EAAE,KAHL;AAITE,MAAAA,YAAY,EAAE,KAJL;AAKTK,MAAAA,eAAe,EAAE,EALR;AAMTc,MAAAA,OAAO,EAAE,EANA;AAOTE,MAAAA,YAAY,EAAE;AAPL,KAAb;AAHe;AAYlB;;;;;;;;;;;;;;uBAG0B,KAAKnB,oBAAL,CAA0B6D,MAA1B,E;;;AAAjB3D,gBAAAA,Q;AACN,qBAAKvB,QAAL,CAAc;AACVwB,kBAAAA,eAAe,EAAED,QAAQ,GAAG7B,QAAQ,CAACyF,qBAAT,CAA+B5D,QAAQ,CAACE,IAAxC,EAA8C2D,OAA9C,EAAH,GAA6D;AAD5E,iBAAd;;;;;;;;;;;;;;;;iCAKSC,gB,EAAkB;AAAA;;AAC3BpG,MAAAA,KAAK,CAACqG,KAAN,CAAY;AACRlC,QAAAA,KAAK,EAAE,gDADC;AAERmC,QAAAA,UAAU,EAAE,UAFJ;AAGRC,QAAAA,QAAQ,EAAE,IAHF;AAIRC,QAAAA,MAAM,EAAE,SAJA;AAKRC,QAAAA,IAAI;AAAA;AAAA;AAAA,mCAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqB,MAAI,CAACrE,oBAAL,CAA0BsE,MAA1B,CAAiCN,gBAAjC,CADrB;;AAAA;AACI9D,oBAAAA,QADJ;;AAEF,oBAAA,MAAI,CAACvB,QAAL,CAAc;AACVwB,sBAAAA,eAAe,EAAE,MAAI,CAACR,KAAL,CAAWQ,eAAX,CAA2BoE,MAA3B,CAAkC,UAACC,aAAD;AAAA,+BAAmBA,aAAa,CAACnE,GAAd,KAAsBH,QAAQ,CAACE,IAAT,CAAcE,GAAvD;AAAA,uBAAlC;AADP,qBAAd;;AAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;AAAA;AALI,OAAZ;AAYH;;;;EApC6B5C,KAAK,CAAC+G,a;;AA2OxC,eAAezG,IAAI,CAAC0G,MAAL,GAAclG,mBAAd,CAAf","sourcesContent":["import React from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Input, Checkbox, Tag } from 'antd';\n\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataList from '../helpers/DataList';\n\nconst FormItem = Form.Item;\n\n\nclass TypesSolidWastePage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            modalVisible: false,\n            visibleModalExcluir: false,\n            isRecyclable: false,\n            isReutilable: false,\n            typesSolidWaste: [],\n            filters: [],\n            filteredInfo: {},\n        };\n    }\n\n    async componentWillMount() {\n        const response = await this.typeSolidWasteClient.getAll();\n        this.setState({\n            typesSolidWaste: response ? DataList.toTypesSolidWasteData(response.data).reverse() : [],\n        });\n    }\n\n    modalExcluir(idTypeSolidWaste) {\n        Modal.error({\n            title: 'Deseja realmente excluir este tipo de residuo?',\n            cancelText: 'Cancelar',\n            okCancel: true,\n            okText: 'Excluir',\n            onOk: async () => {\n                const response = await this.typeSolidWasteClient.remove(idTypeSolidWaste);\n                this.setState({\n                    typesSolidWaste: this.state.typesSolidWaste.filter((typeSolidWast) => typeSolidWast.key !== response.data._id)\n                })\n            }\n        });\n    }\n\n    showModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n            if (!err) {\n                console.log(values)\n                const typeSolidWaste = {\n                    name: values.name.toUpperCase(),\n                    description: values.description,\n                    recyclable: this.state.isRecyclable,\n                    reutilable: this.state.isReutilable,\n                    color: values.color\n                };\n                const response = await this.typeSolidWasteClient.save(typeSolidWaste);\n                this.setState({\n                    typesSolidWaste: [{\n                        color: response.data.color,\n                        key: response.data._id, name: response.data.name, description: response.data.description, tags: DataList.toTags(response.data)\n                    }, ...this.state.typesSolidWaste],\n                    modalVisible: false,\n                    isRecyclable: false,\n                    isReutilable: false,\n                });\n                this.props.form.resetFields();\n            }\n\n        });\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            modalVisible: false,\n            isRecyclable: false,\n            isReutilable: false,\n        });\n    }\n\n    handleChangeCheckRecyclable = (e) => {\n        this.setState({\n            isRecyclable: e.target.checked,\n        });\n    }\n\n    handleChangeCheckReutilable = (e) => {\n        this.setState({\n            isReutilable: e.target.checked,\n        });\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 7 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 15 },\n            },\n        };\n\n        const formTailLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: {\n                xs: {\n                    span: 12, offset: 0\n                },\n                sm: {\n                    span: 12, offset: 7\n                }\n            }\n        }\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            },\n            {\n                title: 'Nome',\n                dataIndex: 'name',\n                key: 'name',\n            }, {\n                title: 'Descrição',\n                dataIndex: 'description',\n                key: 'description',\n\n            }, {\n                title: '',\n                key: 'tags',\n                dataIndex: 'tags',\n                render: tags => {\n                    function tagT(t) {\n                        if (t === 'recyclable') {\n                            return 'Reciclável';\n                        } else if (t === 'reutilable') {\n                            return 'Reutilizável';\n                        } else {\n                            return '';\n                        }\n                    }\n                    return (\n                        <span>\n                            {tags.map(tag => <Tag color=\"blue\" key={tag}>{tagT(tag)}</Tag>)}\n                        </span>\n                    )\n                },\n                filters: this.state.filters,\n                filteredValue: this.state.filteredInfo.tags || null,\n                onFilter: (value, record) => {\n                    return record.tags.includes(value)\n                },\n            }, {\n                title: 'Ação',\n                key: 'action',\n                render: (text, record) => (\n                    <Button type='danger' icon=\"delete\" onClick={this.modalExcluir.bind(this, text.key)}></Button>\n                ),\n            }];\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ marginBottom: \"20px\" }}>\n                    <Col><Button type=\"primary\" shape=\"circle\" icon=\"plus\" size=\"large\" style={{ height: '50px', width: '50px', position: 'fixed', bottom: '50px', right: '10px', zIndex: \"999\" }} onClick={this.showModal}></Button></Col>\n                </Row>\n                <Modal\n                    title=\"Cadastrar no tipo de resíduo\"\n                    visible={this.state.modalVisible}\n                    okText={\"Cadastrar\"}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form>\n                        <FormItem {...formItemLayout} label=\"Nome\">\n                            {getFieldDecorator('name', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite o nome do tipo de resíduo',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Descrição\">\n                            {getFieldDecorator('description', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite a descrição do tipo de resíduo',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Cor\">\n                            {getFieldDecorator('color', {\n                                rules: [{\n                                    required: true, message: 'Por favor selecione uma cor para este tipo de resíduo',\n                                }],\n                            })(\n                                <Input type='color' onChange={(e) => { }} />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formTailLayout}>\n                            <Checkbox checked={this.state.isRecyclable} onClick={this.handleChangeCheckRecyclable}>\n                                Reciclável\n                            </Checkbox>\n                            <Checkbox checked={this.state.isReutilable} onClick={this.handleChangeCheckReutilable}>\n                                Reutilizável\n                            </Checkbox>\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.typesSolidWaste} scroll={window.innerWidth <= 600 ? { x: 900 } : undefined} style={{ background: \"white\" }} />\n            </>\n        );\n    }\n}\n\nexport default Form.create()(TypesSolidWastePage);"]},"metadata":{},"sourceType":"module"}