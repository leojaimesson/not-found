{"ast":null,"code":"import _toConsumableArray from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/leo/Documents/github/tcc/front/not-found/front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/leo/Documents/github/tcc/front/not-found/front/src/pages/SolidWasteCollectedPage.js\";\nimport React, { Component } from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Select, DatePicker, InputNumber } from 'antd';\nimport moment from 'moment';\nimport SolidWasteCollectedClient from '../api/TypeSolidWasteClient';\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataList from '../helpers/DataList';\nimport DataFilters from '../helpers/DataFilters';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\n\nvar SolidWasteCollectedPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SolidWasteCollectedPage, _Component);\n\n  function SolidWasteCollectedPage(props) {\n    var _this;\n\n    _classCallCheck(this, SolidWasteCollectedPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SolidWasteCollectedPage).call(this, props));\n\n    _this.modalExcluir = function (idSolidWasteCollected) {\n      Modal.error({\n        title: 'Deseja realmente excluir esta coleta?',\n        cancelText: 'Cancelar',\n        okCancel: true,\n        okText: 'Excluir',\n        onOk: function () {\n          var _onOk = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            var response;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _this.solidWasteCollectedClient.remove(idSolidWasteCollected);\n\n                  case 2:\n                    response = _context.sent;\n\n                    _this.setState({\n                      solidsWasteCollected: _this.state.solidsWasteCollected.filter(function (solidWasteCollected) {\n                        return solidWasteCollected.key !== response.data._id;\n                      })\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          return function onOk() {\n            return _onOk.apply(this, arguments);\n          };\n        }()\n      });\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        modalVisible: true\n      });\n    };\n\n    _this.handleOk = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(err, values) {\n          var solidWasteCollected, response;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  console.log(values);\n\n                  if (err) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  solidWasteCollected = {\n                    typeWasted: values.typeWasted,\n                    quantityCollected: values.quantityCollected - 0,\n                    collectionDate: values.collectionDate ? values.collectionDate : null\n                  };\n                  _context2.next = 5;\n                  return _this.solidWasteCollectedClient.save(solidWasteCollected);\n\n                case 5:\n                  response = _context2.sent;\n\n                  _this.setState({\n                    solidsWasteCollected: [{\n                      key: response.data._id,\n                      typeWasted: response.data.typeWasted.name,\n                      color: response.data.typeWasted.color,\n                      collectionDate: moment(new Date(response.data.collectionDate)).format('DD/MM/YYYY'),\n                      quantityCollected: response.data.quantityCollected\n                    }].concat(_toConsumableArray(_this.state.solidsWasteCollected)),\n                    modalVisible: false\n                  });\n\n                  _this.props.form.resetFields();\n\n                case 8:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.handleCancel = function (e) {\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.handleChangeSelect = function (value) {\n      _this.setState({\n        typeSelected: value\n      });\n    };\n\n    _this.handleChangeDate = function (date, dateString) {\n      _this.setState({\n        collectionDate: dateString\n      });\n    };\n\n    _this.handleChangeTable = function (pagination, filters, sorter) {\n      _this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    };\n\n    _this.render = function () {\n      var getFieldDecorator = _this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 7\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 15\n          }\n        }\n      };\n      var columns = [{\n        title: '',\n        dataIndex: 'color',\n        key: 'color',\n        width: 20,\n        render: function render(color) {\n          return React.createElement(\"div\", {\n            style: {\n              width: '10px',\n              height: '10px',\n              background: color\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          });\n        }\n      }, {\n        title: 'Data',\n        dataIndex: 'collectionDate',\n        key: 'collectionDate',\n        width: 150,\n        sorter: function sorter(a, b) {\n          var firstSplit = a.collectionDate.split('/');\n          var secondSplit = b.collectionDate.split('/');\n          var first = new Date(parseInt(firstSplit[2]), parseInt(firstSplit[1]) - 1, parseInt(firstSplit[0]));\n          var second = new Date(parseInt(secondSplit[2]), parseInt(secondSplit[1]) - 1, parseInt(secondSplit[0]));\n          return first - second;\n        },\n        sortOrder: _this.state.sortedInfo.columnKey === 'collectionDate' && _this.state.sortedInfo.order\n      }, {\n        title: 'Total coletado',\n        dataIndex: 'quantityCollected',\n        key: 'quantityCollected',\n        width: 200,\n        render: function render(text, record) {\n          return \"\".concat(text, \" Kg\");\n        },\n        sorter: function sorter(a, b) {\n          return a.quantityCollected - b.quantityCollected;\n        },\n        sortOrder: _this.state.sortedInfo.columnKey === 'quantityCollected' && _this.state.sortedInfo.order\n      }, {\n        title: 'Tipo',\n        dataIndex: 'typeWasted',\n        key: 'typeWasted',\n        filters: _this.state.filters,\n        filteredValue: _this.state.filteredInfo.typeWasted || null,\n        onFilter: function onFilter(value, record) {\n          return record.typeWasted.includes(value);\n        }\n      }, {\n        title: 'Ação',\n        key: 'acti  on',\n        render: function render(text, record) {\n          return React.createElement(Button, {\n            type: \"danger\",\n            icon: \"delete\",\n            onClick: _this.modalExcluir.bind(_assertThisInitialized(_assertThisInitialized(_this)), text.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          });\n        }\n      }];\n      return React.createElement(React.Fragment, null, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"space-between\",\n        align: \"middle\",\n        style: {\n          marginBottom: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        shape: \"circle\",\n        icon: \"plus\",\n        size: \"large\",\n        style: {\n          height: '50px',\n          width: '50px',\n          position: 'fixed',\n          bottom: '50px',\n          right: '10px',\n          zIndex: \"999\"\n        },\n        onClick: _this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        title: \"Cadastrar Coleta\",\n        visible: _this.state.modalVisible,\n        okText: \"Cadastrar\",\n        cancelText: \"Cancelar\",\n        onOk: _this.handleOk,\n        onCancel: _this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Tipo de Res\\xEDduo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), getFieldDecorator('typeWasted', {\n        rules: [{\n          required: true,\n          message: 'Por favor selecione o tipo de resíduo coletado'\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Selecione o tipo de res\\xEDduo\",\n        onChange: _this.handleChangeSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, _this.state.typesSolidWaste.map(function (value) {\n        return React.createElement(Option, {\n          value: value._id,\n          key: value._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, value.name);\n      })))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Quantidade em Kg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), getFieldDecorator('quantityCollected', {\n        rules: [{\n          required: true,\n          message: 'Por favor informe a quantidade coletada'\n        }]\n      })(React.createElement(InputNumber, {\n        min: 0,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), getFieldDecorator('collectionDate', {\n        rules: [{\n          required: false\n        }],\n        initialValue: moment(new Date())\n      })(React.createElement(DatePicker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }))))), React.createElement(Table, {\n        columns: columns,\n        onChange: _this.handleChangeTable,\n        bordered: true,\n        dataSource: _this.state.solidsWasteCollected,\n        scroll: window.innerWidth <= 600 ? {\n          x: 1000\n        } : undefined,\n        style: {\n          background: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }));\n    };\n\n    _this.solidWasteCollectedClient = new SolidWasteCollectedClient('https://betatcc.herokuapp.com/solid-waste-collected');\n    _this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n    _this.state = {\n      modalVisible: false,\n      visibleModalExcluir: false,\n      isRecyclable: false,\n      isReutilable: false,\n      solidsWasteCollected: [],\n      typesSolidWaste: [],\n      filters: [],\n      filteredInfo: {},\n      sortedInfo: {}\n    };\n    return _this;\n  }\n\n  _createClass(SolidWasteCollectedPage, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var responseCollected, responseType;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.solidWasteCollectedClient.getAll();\n\n              case 2:\n                responseCollected = _context3.sent;\n                _context3.next = 5;\n                return this.typeSolidWasteClient.getAll();\n\n              case 5:\n                responseType = _context3.sent;\n                this.setState({\n                  solidsWasteCollected: DataList.toSolidWasteCollectedData(responseCollected.data).reverse(),\n                  typesSolidWaste: responseType.data,\n                  filters: DataFilters.toTypesSolidWasteFiltersData(responseType.data)\n                });\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      };\n    }()\n  }]);\n\n  return SolidWasteCollectedPage;\n}(Component);\n\nexport default Form.create()(SolidWasteCollectedPage);","map":{"version":3,"sources":["/home/leo/Documents/github/tcc/front/not-found/front/src/pages/SolidWasteCollectedPage.js"],"names":["React","Component","Table","Modal","Row","Col","Button","Form","Select","DatePicker","InputNumber","moment","SolidWasteCollectedClient","TypeSolidWasteClient","DataList","DataFilters","FormItem","Item","Option","SolidWasteCollectedPage","props","modalExcluir","idSolidWasteCollected","error","title","cancelText","okCancel","okText","onOk","solidWasteCollectedClient","remove","response","setState","solidsWasteCollected","state","filter","solidWasteCollected","key","data","_id","showModal","modalVisible","handleOk","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","typeWasted","quantityCollected","collectionDate","save","name","color","Date","format","resetFields","handleCancel","handleChangeSelect","value","typeSelected","handleChangeDate","date","dateString","handleChangeTable","pagination","filters","sorter","filteredInfo","sortedInfo","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","columns","dataIndex","width","height","background","a","b","firstSplit","split","secondSplit","first","parseInt","second","sortOrder","columnKey","order","text","record","filteredValue","onFilter","includes","bind","marginBottom","position","bottom","right","zIndex","rules","required","message","typesSolidWaste","map","initialValue","window","innerWidth","x","undefined","typeSolidWasteClient","visibleModalExcluir","isRecyclable","isReutilable","getAll","responseCollected","responseType","toSolidWasteCollectedData","reverse","toTypesSolidWasteFiltersData","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Select, DatePicker, InputNumber } from 'antd';\n\nimport moment from 'moment';\n\nimport SolidWasteCollectedClient from '../api/TypeSolidWasteClient';\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataList from '../helpers/DataList';\nimport DataFilters from '../helpers/DataFilters';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass SolidWasteCollectedPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.solidWasteCollectedClient = new SolidWasteCollectedClient('https://betatcc.herokuapp.com/solid-waste-collected');\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            modalVisible: false,\n            visibleModalExcluir: false,\n            isRecyclable: false,\n            isReutilable: false,\n            solidsWasteCollected: [],\n            typesSolidWaste: [],\n            filters: [],\n            filteredInfo: {},\n            sortedInfo: {}\n        };\n    }\n\n    async componentWillMount() {\n        const responseCollected = await this.solidWasteCollectedClient.getAll();\n        const responseType = await this.typeSolidWasteClient.getAll();\n\n        this.setState({\n            solidsWasteCollected: DataList.toSolidWasteCollectedData(responseCollected.data).reverse(),\n            typesSolidWaste: responseType.data,\n            filters: DataFilters.toTypesSolidWasteFiltersData(responseType.data)\n        });\n    }\n\n    modalExcluir = (idSolidWasteCollected) => {\n        Modal.error({\n            title: 'Deseja realmente excluir esta coleta?',\n            cancelText: 'Cancelar',\n            okCancel: true,\n            okText: 'Excluir',\n            onOk: async () => {\n                const response = await this.solidWasteCollectedClient.remove(idSolidWasteCollected);\n                this.setState({\n                    solidsWasteCollected: this.state.solidsWasteCollected.filter((solidWasteCollected) => solidWasteCollected.key !== response.data._id)\n                })\n            }\n        });\n    }\n\n    showModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n            console.log(values);\n            if (!err) {\n                const solidWasteCollected = {\n                    typeWasted: values.typeWasted,\n                    quantityCollected: values.quantityCollected - 0,\n                    collectionDate: values.collectionDate ? values.collectionDate : null,\n                };\n                const response = await this.solidWasteCollectedClient.save(solidWasteCollected);\n                this.setState({\n                    solidsWasteCollected: [{\n                        key: response.data._id,\n                        typeWasted: response.data.typeWasted.name,\n                        color: response.data.typeWasted.color,\n                        collectionDate: moment(new Date(response.data.collectionDate)).format('DD/MM/YYYY'),\n                        quantityCollected: response.data.quantityCollected\n                    }, ...this.state.solidsWasteCollected],\n                    modalVisible: false,\n                })\n                this.props.form.resetFields();\n            }\n        });\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            modalVisible: false,\n        });\n    }\n\n    handleChangeSelect = (value) => {\n        this.setState({\n            typeSelected: value,\n        });\n    }\n\n    handleChangeDate = (date, dateString) => {\n        this.setState({\n            collectionDate: dateString,\n        })\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 7 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 15 },\n            },\n        };\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            }, {\n                title: 'Data',\n                dataIndex: 'collectionDate',\n                key: 'collectionDate',\n                width: 150,\n                sorter: (a, b) => {\n                    const firstSplit = a.collectionDate.split('/');\n                    const secondSplit = b.collectionDate.split('/');\n\n                    const first = new Date(parseInt(firstSplit[2]), parseInt(firstSplit[1]) - 1, parseInt(firstSplit[0]));\n                    const second = new Date(parseInt(secondSplit[2]), parseInt(secondSplit[1]) - 1, parseInt(secondSplit[0]));\n\n                    return first - second;\n                },\n                sortOrder: this.state.sortedInfo.columnKey === 'collectionDate' && this.state.sortedInfo.order,\n            }, {\n                title: 'Total coletado',\n                dataIndex: 'quantityCollected',\n                key: 'quantityCollected',\n                width: 200,\n                render: (text, record) => (\n                    `${text} Kg`\n                ),\n                sorter: (a, b) => a.quantityCollected - b.quantityCollected,\n                sortOrder: this.state.sortedInfo.columnKey === 'quantityCollected' && this.state.sortedInfo.order,\n            }, {\n                title: 'Tipo',\n                dataIndex: 'typeWasted',\n                key: 'typeWasted',\n                filters: this.state.filters,\n                filteredValue: this.state.filteredInfo.typeWasted || null,\n                onFilter: (value, record) => record.typeWasted.includes(value),\n            }, {\n                title: 'Ação',\n                key: 'acti  on',\n                render: (text, record) => (\n                    <Button type='danger' icon=\"delete\" onClick={this.modalExcluir.bind(this, text.key)}></Button>\n                ),\n            }];\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ marginBottom: \"20px\" }}>\n                    <Col><Button type=\"primary\" shape=\"circle\" icon=\"plus\" size=\"large\" style={{ height: '50px', width: '50px', position: 'fixed', bottom: '50px', right: '10px', zIndex: \"999\" }} onClick={this.showModal}></Button></Col>\n                </Row>\n                <Modal\n                    title=\"Cadastrar Coleta\"\n                    visible={this.state.modalVisible}\n                    okText={\"Cadastrar\"}\n                    cancelText={\"Cancelar\"}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form>\n                        <FormItem {...formItemLayout} label=\"Tipo de Resíduo\">\n                            {getFieldDecorator('typeWasted', {\n                                rules: [{\n                                    required: true, message: 'Por favor selecione o tipo de resíduo coletado',\n                                }],\n                            })(\n                                <Select placeholder=\"Selecione o tipo de resíduo\" onChange={this.handleChangeSelect}>\n                                    {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                </Select>\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Quantidade em Kg\">\n                            {getFieldDecorator('quantityCollected', {\n                                rules: [{\n                                    required: true, message: 'Por favor informe a quantidade coletada',\n                                }],\n                            })(\n                                <InputNumber min={0} style={{width: '100%'}}/>,\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Data\">\n                            {getFieldDecorator('collectionDate', {\n                                rules: [{\n                                    required: false,\n                                }],\n                                initialValue: moment(new Date())\n                            })(\n                                <DatePicker />\n                            )}\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.solidsWasteCollected} scroll={window.innerWidth <= 600 ? { x: 1000 } : undefined} style={{ background: \"white\" }} />\n            </>\n        );\n    }\n}\n\nexport default Form.create()(SolidWasteCollectedPage);"]},"metadata":{},"sourceType":"module"}