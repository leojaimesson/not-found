{"version":3,"sources":["pages/BasePage.js","components/board/Board.js","api/DataClient.js","pages/GeneralPage.js","api/TypeSolidWasteClient.js","helpers/DataList.js","pages/TypesSolidWastePage.js","helpers/DataFilters.js","pages/SolidWasteCollectedPage.js","pages/AnalyzeCollectedWastesPage.js","helpers/DataDoc.js","docs/templates/CollectionReport.js","pages/ReportPage.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Content","Sider","Footer","BasePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDrawer","setState","visible","onClose","render","react_default","a","createElement","layout","style","height","overflow","drawer","title","fontWeight","fontSize","color","placement","state","padding","menu","breakpoint","collapsedWidth","width","onBreakpoint","broken","onCollapse","collapsed","type","background","className","row","justify","align","col","icon","onClick","margin","titlePage","boxSizing","content","textAlign","bottom","React","PureComponent","Board","children","Component","SolidWasteCollectedClient","url","request","axios","create","baseURL","timeout","headers","Content-Type","period","interval","get","concat","response","startDate","endDate","FormItem","Form","Item","Option","Select","GeneralPage","handleSubmit","e","preventDefault","form","validateFields","_ref","asyncToGenerator","regenerator_default","mark","_callee","err","values","responseFiltered","totalKg","barDatas","barKeys","barColors","legend","pieData","wrap","_context","prev","next","dataClient","getAllWasteByPeriod","sent","data","filter","value","reduce","acc","current","map","obj","name","parseFloat","toFixed","id","label","datas","colors","keys","stop","_x","_x2","apply","arguments","DataClient","timeLine","console","log","start","Date","end","getWastesByPeriodFull","toConsumableArray","collectionDate","setHours","setMinutes","setSeconds","responseTimeLine","rs","forEach","quantityCollected","day","moment","format","rs2","key","getFieldDecorator","heightBoard","window","innerHeight","Fragment","gutter","xs","span","lg","es_form","onSubmit","float","rules","required","message","initialValue","input_number","min","es_select","es_button","htmlType","Board_Board","divider","orientation","bar","top","right","left","axisBottom","indexBy","labelTextColor","labelSkipWidth","labelSkipHeight","animate","motionStiffness","motionDamping","display","alignItems","marginRight","marginLeft","pie","innerRadius","padAngle","cornerRadius","radialLabelsLinkColor","radialLabelsLinkStrokeWidth","radialLabelsTextColor","slicesLabelsTextColor","calendar","from","to","emptyColor","yearSpacing","monthBorderColor","monthLegendOffset","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemDirection","TypeSolidWasteClient","typeSolidWaste","post","JSON","stringify","delete","toTags","tags","recyclable","push","reutilable","DataList","toUsersListData","users","user","_id","firstName","email","toTypesSolidWasteData","typesSolidWaste","description","toSolidWasteCollectedData","solidWasteCollected","typeWasted","TypesSolidWastePage","showModal","modalVisible","handleOk","validateFieldsAndScroll","toUpperCase","isRecyclable","isReutilable","typeSolidWasteClient","save","resetFields","handleCancel","handleChangeCheckRecyclable","target","checked","handleChangeCheckReutilable","handleChangeTable","pagination","filters","sorter","filteredInfo","formItemLayout","labelCol","sm","wrapperCol","columns","dataIndex","tag","es_tag","t","filteredValue","onFilter","record","includes","text","modalExcluir","bind","assertThisInitialized","marginBottom","shape","size","position","zIndex","modal","okText","onOk","onCancel","TypesSolidWastePage_FormItem","assign","input","onChange","offset","es_checkbox","table","bordered","dataSource","scroll","innerWidth","x","undefined","visibleModalExcluir","getAll","reverse","idTypeSolidWaste","_this2","Modal","error","cancelText","okCancel","_onOk","_callee3","_context3","remove","typeSolidWast","DataFilters","types","SolidWasteCollectedPage","idSolidWasteCollected","solidWasteCollectedClient","solidsWasteCollected","_callee2","_context2","handleChangeSelect","typeSelected","handleChangeDate","date","dateString","sortedInfo","b","firstSplit","split","secondSplit","parseInt","sortOrder","columnKey","order","SolidWasteCollectedPage_FormItem","placeholder","SolidWasteCollectedPage_Option","date_picker","responseCollected","responseType","AnalyzeCollectedWastesPage","dates","streamKeys","streamColors","_response","_responseFiltered","_totalKg","res","_rs","_rs2","_response2","_x3","_dates","_responseFiltered2","_rs3","_rs4","_streamKeys","_streamColors","_response3","_responseFiltered3","_totalKg2","_legend","_barDatas","_barKeys","_barColors","_pieData","_responseTimeLine","_rs5","_rs6","layoutAll","streamDatas","getWastesByPeriod","getAllWasteByPeriodFull","t0","t1","t2","AnalyzeCollectedWastesPage_FormItem","AnalyzeCollectedWastesPage_Option","justifyContent","stream","offsetType","dotSize","dotBorderWidth","dotBorderColor","tooltipFormat","index","marginTop","DataDoc","result","CollectionReport","total","bold","widths","body","styles","header","ReportPage","result2","dataTables","dataDoc","ReportPage_FormItem","ReportPage_Option","length","ype","vfs","vfsFonts","pdfMake","createPdf","download","dataTypesSolidWaste","Routes","BrowserRouter","BasePage_BasePage","mode","Link","Route","exact","path","component","App","Routes_Routes","Boolean","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27e5ba89.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Layout, Icon, Drawer, Row, Col } from 'antd';\n\nconst { Header, Content, Sider, Footer } = Layout;\n\nexport default class BasePage extends React.PureComponent {\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            placement: 'left',\n        };\n    }\n\n    render = () => (\n        <Layout style={{ height: '100%', overflow: 'auto' }}>\n            <Drawer\n                title={<span style={{\n                    fontWeight: 'bolder',\n                    fontSize: '1.5em',\n                    color: '#618833'\n                }}>SolidWM</span>}\n                placement={this.state.placement}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                style={{ padding: \"24px 0px\" }}\n            >\n                {this.props.menu}\n            </Drawer>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                width={250}\n                onBreakpoint={(broken) => { }}\n                onCollapse={(collapsed, type) => { }}\n                style={{ background: '#fff' }}\n            >\n                <div className=\"logo\">SolidWM</div>\n                {this.props.menu}\n            </Sider>\n            <Layout>\n                <Header style={{ background: '#8bc34a', padding: \"0px 14px\" }}>\n                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ height: '100%' }}>\n                        <Col className=\"hide\"><Icon className=\"trigger\" type=\"menu-fold\" onClick={this.showDrawer} /></Col>\n                        <Col><h2 style={{margin: '0px'}}>{this.props.titlePage}</h2></Col>\n                        <Col><Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ height: '100%' }}>\n                            {/* <span style={{ margin: '0px 2px 0px 8px' }}>Sair</span> */}\n                        </Row>\n                        </Col>\n                    </Row>\n                </Header>\n                <Content style={{ padding: '20px 14px 45px 14px', boxSizing: 'border-box', height: '100%', overflow: 'auto' }}>\n                    {this.props.content}\n                </Content>\n                <Footer style={{ textAlign: 'center', bottom: '0px', width: '100%', background: '#618833', padding: '10px ' }}>\n                    SolidWM ©2018 Created by Leo Jaimesson\n                </Footer>\n            </Layout>\n        </Layout>\n    );\n}\n\nBasePage.propTypes = {\n    menu: PropTypes.node,\n    content: PropTypes.node\n}","import React, { Component } from 'react';\n\nimport './Board.css';\n\nexport default class Board extends Component {\n\n    render() {\n        return (\n            <div className=\"board\" style={{height: this.props.height, width: this.props.width }}>\n                {this.props.children}\n            </div>\n        );\n    }\n}","import axios from 'axios';\n\nexport default class SolidWasteCollectedClient {\n\n    constructor(url) {\n        this.url = url;\n        this.request = axios.create({\n            baseURL: url,\n            timeout: 30000,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    async getAllWasteByPeriod(period, interval, type) {\n        const response = await this.request.get(`/all-wastes?period=${period}&interval=${interval}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getAllWasteByPeriodFull(period, interval, type) {\n        const response = await this.request.get(`/all-wastes-full?period=${period}&interval=${interval}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getWastesByPeriod(startDate, endDate, type) {\n        const response = await this.request.get(`/roda?startDate=${startDate}&endDate=${endDate}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getWastesByPeriodFull(startDate, endDate, type) {\n        const response = await this.request.get(`/roda-full?startDate=${startDate}&endDate=${endDate}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getWasteByPeriod(period, interval, type) {\n        const response = await this.request.get(`/wastes?period=${period}&interval=${interval}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n}","import React from 'react';\n\nimport { Row, Col, Button, Form, Select, InputNumber, Divider } from 'antd';\n\nimport moment from 'moment';\n\nimport Board from '../components/board/Board';\n\nimport { ResponsiveBar } from '@nivo/bar';\n\nimport { ResponsivePie } from '@nivo/pie';\n\nimport { ResponsiveCalendar } from '@nivo/calendar';\n\nimport DataClient from '../api/DataClient';\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\n\n\nclass GeneralPage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n        this.state = {\n            datas: [],\n            colors: [],\n            keys: [],\n            pieData: [],\n            totalKg: 0,\n            timeLine: [],\n            legend: [],\n        }\n    }\n\n    async componentWillMount() {\n        const response = await this.dataClient.getAllWasteByPeriod('WEEK', 1);\n\n        console.log(response);\n\n        const responseFiltered = response.data.filter((value) => value.data > 0);\n\n        const start = new Date(2018, 0, 1, 0, 0, 0);\n        const end = new Date(2018, 11, 31, 11, 59, 59);\n\n        const responseTimeLine = (await this.dataClient.getWastesByPeriodFull(start, end)).data.reduce((acc, current) => [...acc, ...current.data], []).map((value) => {\n            value.collectionDate = new Date(value.collectionDate);\n            value.collectionDate.setHours(0);\n            value.collectionDate.setMinutes(0);\n            value.collectionDate.setSeconds(0);\n            return value;\n        });\n\n        const rs = {};\n\n        responseTimeLine.forEach(value => {\n            if (!rs[value.collectionDate]) {\n                rs[value.collectionDate] = {\n                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                    value: value.quantityCollected\n                }\n            } else {\n                rs[value.collectionDate].value += value.quantityCollected;\n            }\n        });\n\n        const rs2 = Object.keys(rs).map(function (key) {\n            return rs[key];\n        });\n\n        const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n        const barDatas = responseFiltered.map(value => {\n            const obj = {};\n            obj[value.name] = parseFloat(value.data.toFixed(2));\n            obj['residuos'] = value.name;\n            return obj;\n        });\n        const barKeys = responseFiltered.map(value => value.name);\n        const barColors = responseFiltered.map(value => value.color);\n\n        const pieData = responseFiltered.map(value => {\n            const obj = {};\n            obj.id = value.name;\n            obj.label = value.name;\n            obj.value = parseFloat(((value.data / totalKg) * 100).toFixed(2));\n            return obj;\n        });\n\n        const legend = responseFiltered.map(value => ({ name: value.name, color: value.color }));\n\n        this.setState({\n            datas: barDatas || [],\n            colors: barColors,\n            keys: barKeys,\n            pieData: pieData,\n            totalKg: totalKg,\n            timeLine: rs2,\n            legend: legend,\n        });\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                const response = await this.dataClient.getAllWasteByPeriod(values.period, values.interval);\n                const responseFiltered = response.data.filter((value) => value.data > 0);\n\n\n                const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n                const barDatas = responseFiltered.map(value => {\n                    const obj = {};\n                    obj[value.name] = parseFloat(value.data.toFixed(2));\n                    obj['residuos'] = value.name;\n                    return obj;\n                });\n                const barKeys = responseFiltered.map(value => value.name);\n                const barColors = responseFiltered.map(value => value.color);\n                const legend = responseFiltered.map(value => ({ name: value.name, color: value.color }));\n\n                const pieData = responseFiltered.map(value => {\n                    const obj = {};\n                    obj.id = value.name;\n                    obj.label = value.name;\n                    obj.value = ((value.data / totalKg) * 100).toFixed(2);\n                    return obj;\n                });\n\n                this.setState({\n                    datas: barDatas || [],\n                    colors: barColors,\n                    keys: barKeys,\n                    pieData: pieData,\n                    totalKg: totalKg,\n                    legend: legend\n                });\n            }\n        });\n    }\n\n    render() {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const heightBoard = window.innerHeight * 0.50;\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                    <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit} style={{ float: 'right' }}>\n                            <FormItem>\n                                <span>Periodo</span>\n                            </FormItem>\n                            <FormItem>\n                                {getFieldDecorator('interval', {\n                                    rules: [{ required: true, message: 'O intervalo é obrigatório!' }],\n                                    initialValue: 1\n                                })(\n                                    <InputNumber min={1} />,\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {getFieldDecorator('period', {\n                                    rules: [{ required: true, message: 'O periodo é obrigatorio!' }],\n                                    initialValue: 'WEEK'\n                                })(\n                                    <Select style={{ width: 120 }}>\n                                        <Option value=\"DAY\">Dia</Option>\n                                        <Option value=\"WEEK\">Semana</Option>\n                                        <Option value=\"MONTH\">Mês</Option>\n                                        <Option value=\"YEAR\">Ano</Option>\n                                    </Select>\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                >\n                                    Consultar\n                                </Button>\n                            </FormItem>\n                        </Form>\n                    </Col>\n                </Row>\n\n                <Row gutter={24}>\n                    <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                        <Board>\n                            <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em Kg</h3></Divider>\n                            <div style={{ height: `${heightBoard}px` }}>\n                                <ResponsiveBar\n                                    margin={{\n                                        top: 40,\n                                        right: 50,\n                                        bottom: 40,\n                                        left: 50\n                                    }}\n                                    axisBottom={null}\n                                    data={this.state.datas}\n                                    indexBy=\"residuos\"\n                                    keys={this.state.keys}\n                                    colors={this.state.colors}\n                                    padding={0.2}\n                                    labelTextColor='#ffffff'\n                                    labelSkipWidth={12}\n                                    labelSkipHeight={12}\n                                    animate={true}\n                                    motionStiffness={90}\n                                    motionDamping={15}\n                                />\n                            </div>\n                            <div>\n                                {this.state.legend.map(value => <div key={`bar-${value.name}`} style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{ marginLeft: '5px' }}>{value.name}</span></div>)}\n                            </div>\n                        </Board>\n                    </Col>\n\n                    <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                        <Board>\n                            <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Resíduos coletados em percentual</h3></Divider>\n\n\n\n                            <div style={{ height: `${heightBoard}px` }}>\n                                <ResponsivePie\n                                    margin={{\n                                        top: 40,\n                                        right: 50,\n                                        bottom: 55,\n                                        left: 50\n                                    }}\n                                    data={this.state.pieData}\n                                    animate\n                                    innerRadius={0.6}\n                                    padAngle={1}\n                                    cornerRadius={3}\n                                    colors={this.state.colors}\n                                    radialLabelsLinkColor=\"inherit\"\n                                    radialLabelsLinkStrokeWidth={3}\n                                    radialLabelsTextColor=\"inherit:darker(1.2)\"\n                                    slicesLabelsTextColor=\"#ffffff\"\n\n                                />\n\n                            </div>\n                            <div>\n                                {this.state.legend.map(value => <div key={`pie-${value.name}`} style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{ marginLeft: '5px' }}>{value.name}</span></div>)}\n                            </div>\n                        </Board>\n                    </Col>\n\n                    {this.state.timeLine && <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                        <Board>\n                            <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Coletas realizadas este ano - Kg</h3></Divider>\n                            <div style={{ height: `${heightBoard}px` }}>\n                                <ResponsiveCalendar\n                                    margin={{\n                                        top: 50,\n                                        right: 10,\n                                        bottom: 0,\n                                        left: 50\n                                    }}\n                                    from=\"2018-01-01T03:00:00.000Z\"\n                                    to=\"2018-12-31T03:00:00.000Z\"\n                                    data={this.state.timeLine}\n                                    emptyColor=\"#eeeeee\"\n                                    yearSpacing={40}\n                                    monthBorderColor=\"#ffffff\"\n                                    monthLegendOffset={10}\n                                    dayBorderWidth={2}\n                                    dayBorderColor=\"#ffffff\"\n                                    legends={[\n                                        {\n                                            \"anchor\": \"bottom-right\",\n                                            \"direction\": \"row\",\n                                            \"translateY\": -80,\n                                            \"itemCount\": 4,\n                                            \"itemWidth\": 34,\n                                            \"itemHeight\": 36,\n                                            \"itemDirection\": \"top-to-bottom\"\n                                        }\n                                    ]}\n                                />\n                            </div>\n                        </Board>\n                    </Col>}\n                </Row>\n            </>\n        );\n    }\n}\n\nexport default Form.create()(GeneralPage);","import axios from 'axios';\n\nexport default class TypeSolidWasteClient {\n\n    constructor(url) {\n        this.url = url;\n        this.request = axios.create({\n            baseURL: url,\n            timeout: 30000,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n\n    async save(typeSolidWaste) {\n        const response = await this.request.post('/', JSON.stringify(typeSolidWaste));\n        return response;\n    }\n\n    async getAll() {\n        const response = await this.request.get('/');\n        return response;\n    }\n\n    async remove(id) {\n        const response = await this.request.delete(`?id=${id}`);\n        return response;\n    }\n}","import moment from 'moment';\n\nconst toTags = (typeSolidWaste) => {\n    const tags = [];\n    if(typeSolidWaste.recyclable) {\n        tags.push('recyclable');\n    }\n    if(typeSolidWaste.reutilable) {\n        tags.push('reutilable');\n    }\n    return tags;\n}\n\nconst toUsersListData = (users) => users.map((user) => ({\n    key: user._id,\n    name: user.firstName,\n    email: user.email\n}));\n\nconst toTypesSolidWasteData = (typesSolidWaste) => typesSolidWaste.map((typeSolidWaste) => ({\n    key: typeSolidWaste._id,\n    name: typeSolidWaste.name,\n    description: typeSolidWaste.description,\n    color: typeSolidWaste.color,\n    tags: toTags(typeSolidWaste)\n}));\n\nconst toSolidWasteCollectedData = (solidWasteCollected) => solidWasteCollected.map((solidWasteCollected) => ({\n    key: solidWasteCollected._id,\n    typeWasted: solidWasteCollected.typeWasted.name,\n    quantityCollected: solidWasteCollected.quantityCollected,\n    color: solidWasteCollected.typeWasted.color,\n    collectionDate: moment(new Date(solidWasteCollected.collectionDate)).format('DD/MM/YYYY'),\n}));\n\nexport default {\n    toUsersListData,\n    toTypesSolidWasteData,\n    toSolidWasteCollectedData,\n    toTags,\n}","import React from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Input, Checkbox, Tag } from 'antd';\n\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataList from '../helpers/DataList';\n\nconst FormItem = Form.Item;\n\n\nclass TypesSolidWastePage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            modalVisible: false,\n            visibleModalExcluir: false,\n            isRecyclable: false,\n            isReutilable: false,\n            typesSolidWaste: [],\n            filters: [],\n            filteredInfo: {},\n        };\n    }\n\n    async componentWillMount() {\n        const response = await this.typeSolidWasteClient.getAll();\n        this.setState({\n            typesSolidWaste: response ? DataList.toTypesSolidWasteData(response.data).reverse() : [],\n        });\n    }\n\n    modalExcluir(idTypeSolidWaste) {\n        Modal.error({\n            title: 'Deseja realmente excluir este tipo de residuo?',\n            cancelText: 'Cancelar',\n            okCancel: true,\n            okText: 'Excluir',\n            onOk: async () => {\n                const response = await this.typeSolidWasteClient.remove(idTypeSolidWaste);\n                this.setState({\n                    typesSolidWaste: this.state.typesSolidWaste.filter((typeSolidWast) => typeSolidWast.key !== response.data._id)\n                })\n            }\n        });\n    }\n\n    showModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n            if (!err) {\n                console.log(values)\n                const typeSolidWaste = {\n                    name: values.name.toUpperCase(),\n                    description: values.description,\n                    recyclable: this.state.isRecyclable,\n                    reutilable: this.state.isReutilable,\n                    color: values.color\n                };\n                const response = await this.typeSolidWasteClient.save(typeSolidWaste);\n                this.setState({\n                    typesSolidWaste: [{\n                        color: response.data.color,\n                        key: response.data._id, name: response.data.name, description: response.data.description, tags: DataList.toTags(response.data)\n                    }, ...this.state.typesSolidWaste],\n                    modalVisible: false,\n                    isRecyclable: false,\n                    isReutilable: false,\n                });\n                this.props.form.resetFields();\n            }\n\n        });\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            modalVisible: false,\n            isRecyclable: false,\n            isReutilable: false,\n        });\n    }\n\n    handleChangeCheckRecyclable = (e) => {\n        this.setState({\n            isRecyclable: e.target.checked,\n        });\n    }\n\n    handleChangeCheckReutilable = (e) => {\n        this.setState({\n            isReutilable: e.target.checked,\n        });\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 7 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 15 },\n            },\n        };\n\n        const formTailLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: {\n                xs: {\n                    span: 12, offset: 0\n                },\n                sm: {\n                    span: 12, offset: 7\n                }\n            }\n        }\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            },\n            {\n                title: 'Nome',\n                dataIndex: 'name',\n                key: 'name',\n            }, {\n                title: 'Descrição',\n                dataIndex: 'description',\n                key: 'description',\n\n            }, {\n                title: '',\n                key: 'tags',\n                dataIndex: 'tags',\n                render: tags => {\n                    function tagT(t) {\n                        if (t === 'recyclable') {\n                            return 'Reciclável';\n                        } else if (t === 'reutilable') {\n                            return 'Reutilizável';\n                        } else {\n                            return '';\n                        }\n                    }\n                    return (\n                        <span>\n                            {tags.map(tag => <Tag color=\"blue\" key={tag}>{tagT(tag)}</Tag>)}\n                        </span>\n                    )\n                },\n                filters: this.state.filters,\n                filteredValue: this.state.filteredInfo.tags || null,\n                onFilter: (value, record) => {\n                    return record.tags.includes(value)\n                },\n            }, {\n                title: 'Ação',\n                key: 'action',\n                render: (text, record) => (\n                    <Button type='danger' icon=\"delete\" onClick={this.modalExcluir.bind(this, text.key)}></Button>\n                ),\n            }];\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ marginBottom: \"20px\" }}>\n                    <Col><Button type=\"primary\" shape=\"circle\" icon=\"plus\" size=\"large\" style={{ height: '50px', width: '50px', position: 'fixed', bottom: '50px', right: '10px', zIndex: \"999\" }} onClick={this.showModal}></Button></Col>\n                </Row>\n                <Modal\n                    title=\"Cadastrar no tipo de resíduo\"\n                    visible={this.state.modalVisible}\n                    okText={\"Cadastrar\"}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form>\n                        <FormItem {...formItemLayout} label=\"Nome\">\n                            {getFieldDecorator('name', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite o nome do tipo de resíduo',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Descrição\">\n                            {getFieldDecorator('description', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite a descrição do tipo de resíduo',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Cor\">\n                            {getFieldDecorator('color', {\n                                rules: [{\n                                    required: true, message: 'Por favor selecione uma cor para este tipo de resíduo',\n                                }],\n                            })(\n                                <Input type='color' onChange={(e) => { }} />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formTailLayout}>\n                            <Checkbox checked={this.state.isRecyclable} onClick={this.handleChangeCheckRecyclable}>\n                                Reciclável\n                            </Checkbox>\n                            <Checkbox checked={this.state.isReutilable} onClick={this.handleChangeCheckReutilable}>\n                                Reutilizável\n                            </Checkbox>\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.typesSolidWaste} scroll={window.innerWidth <= 600 ? { x: 900 } : undefined} style={{ background: \"white\" }} />\n            </>\n        );\n    }\n}\n\nexport default Form.create()(TypesSolidWastePage);","const toTypesSolidWasteFiltersData = (types) => types.map((type) => ({\n    text: type.name,\n    value: type.name,\n}));\n\nexport default {\n    toTypesSolidWasteFiltersData,\n}","import React from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Select, DatePicker, InputNumber } from 'antd';\n\nimport moment from 'moment';\n\nimport SolidWasteCollectedClient from '../api/TypeSolidWasteClient';\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataList from '../helpers/DataList';\nimport DataFilters from '../helpers/DataFilters';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass SolidWasteCollectedPage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.solidWasteCollectedClient = new SolidWasteCollectedClient('https://betatcc.herokuapp.com/solid-waste-collected');\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            modalVisible: false,\n            visibleModalExcluir: false,\n            isRecyclable: false,\n            isReutilable: false,\n            solidsWasteCollected: [],\n            typesSolidWaste: [],\n            filters: [],\n            filteredInfo: {},\n            sortedInfo: {}\n        };\n    }\n\n    async componentWillMount() {\n        const responseCollected = await this.solidWasteCollectedClient.getAll();\n        const responseType = await this.typeSolidWasteClient.getAll();\n\n        this.setState({\n            solidsWasteCollected: DataList.toSolidWasteCollectedData(responseCollected.data).reverse(),\n            typesSolidWaste: responseType.data,\n            filters: DataFilters.toTypesSolidWasteFiltersData(responseType.data)\n        });\n    }\n\n    modalExcluir = (idSolidWasteCollected) => {\n        Modal.error({\n            title: 'Deseja realmente excluir esta coleta?',\n            cancelText: 'Cancelar',\n            okCancel: true,\n            okText: 'Excluir',\n            onOk: async () => {\n                const response = await this.solidWasteCollectedClient.remove(idSolidWasteCollected);\n                this.setState({\n                    solidsWasteCollected: this.state.solidsWasteCollected.filter((solidWasteCollected) => solidWasteCollected.key !== response.data._id)\n                })\n            }\n        });\n    }\n\n    showModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n            console.log(values);\n            if (!err) {\n                const solidWasteCollected = {\n                    typeWasted: values.typeWasted,\n                    quantityCollected: values.quantityCollected - 0,\n                    collectionDate: values.collectionDate ? values.collectionDate : null,\n                };\n                const response = await this.solidWasteCollectedClient.save(solidWasteCollected);\n                this.setState({\n                    solidsWasteCollected: [{\n                        key: response.data._id,\n                        typeWasted: response.data.typeWasted.name,\n                        color: response.data.typeWasted.color,\n                        collectionDate: moment(new Date(response.data.collectionDate)).format('DD/MM/YYYY'),\n                        quantityCollected: response.data.quantityCollected\n                    }, ...this.state.solidsWasteCollected],\n                    modalVisible: false,\n                })\n                this.props.form.resetFields();\n            }\n        });\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            modalVisible: false,\n        });\n    }\n\n    handleChangeSelect = (value) => {\n        this.setState({\n            typeSelected: value,\n        });\n    }\n\n    handleChangeDate = (date, dateString) => {\n        this.setState({\n            collectionDate: dateString,\n        })\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 7 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 15 },\n            },\n        };\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            }, {\n                title: 'Data',\n                dataIndex: 'collectionDate',\n                key: 'collectionDate',\n                width: 150,\n                sorter: (a, b) => {\n                    const firstSplit = a.collectionDate.split('/');\n                    const secondSplit = b.collectionDate.split('/');\n\n                    const first = new Date(parseInt(firstSplit[2]), parseInt(firstSplit[1]) - 1, parseInt(firstSplit[0]));\n                    const second = new Date(parseInt(secondSplit[2]), parseInt(secondSplit[1]) - 1, parseInt(secondSplit[0]));\n\n                    return first - second;\n                },\n                sortOrder: this.state.sortedInfo.columnKey === 'collectionDate' && this.state.sortedInfo.order,\n            }, {\n                title: 'Total coletado',\n                dataIndex: 'quantityCollected',\n                key: 'quantityCollected',\n                width: 200,\n                render: (text, record) => (\n                    `${text} Kg`\n                ),\n                sorter: (a, b) => a.quantityCollected - b.quantityCollected,\n                sortOrder: this.state.sortedInfo.columnKey === 'quantityCollected' && this.state.sortedInfo.order,\n            }, {\n                title: 'Tipo',\n                dataIndex: 'typeWasted',\n                key: 'typeWasted',\n                filters: this.state.filters,\n                filteredValue: this.state.filteredInfo.typeWasted || null,\n                onFilter: (value, record) => record.typeWasted.includes(value),\n            }, {\n                title: 'Ação',\n                key: 'acti  on',\n                render: (text, record) => (\n                    <Button type='danger' icon=\"delete\" onClick={this.modalExcluir.bind(this, text.key)}></Button>\n                ),\n            }];\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ marginBottom: \"20px\" }}>\n                    <Col><Button type=\"primary\" shape=\"circle\" icon=\"plus\" size=\"large\" style={{ height: '50px', width: '50px', position: 'fixed', bottom: '50px', right: '10px', zIndex: \"999\" }} onClick={this.showModal}></Button></Col>\n                </Row>\n                <Modal\n                    title=\"Cadastrar Coleta\"\n                    visible={this.state.modalVisible}\n                    okText={\"Cadastrar\"}\n                    cancelText={\"Cancelar\"}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form>\n                        <FormItem {...formItemLayout} label=\"Tipo de Resíduo\">\n                            {getFieldDecorator('typeWasted', {\n                                rules: [{\n                                    required: true, message: 'Por favor selecione o tipo de resíduo coletado',\n                                }],\n                            })(\n                                <Select placeholder=\"Selecione o tipo de resíduo\" onChange={this.handleChangeSelect}>\n                                    {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                </Select>\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Quantidade em Kg\">\n                            {getFieldDecorator('quantityCollected', {\n                                rules: [{\n                                    required: true, message: 'Por favor informe a quantidade coletada',\n                                }],\n                            })(\n                                <InputNumber min={0} style={{width: '100%'}}/>,\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Data\">\n                            {getFieldDecorator('collectionDate', {\n                                rules: [{\n                                    required: false,\n                                }],\n                                initialValue: moment(new Date())\n                            })(\n                                <DatePicker />\n                            )}\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.solidsWasteCollected} scroll={window.innerWidth <= 600 ? { x: 1000 } : undefined} style={{ background: \"white\" }} />\n            </>\n        );\n    }\n}\n\nexport default Form.create()(SolidWasteCollectedPage);","import React, { Component } from 'react';\n\nimport moment from 'moment';\n\nimport { Row, Col, Button, Form, Select, InputNumber, DatePicker, Divider } from 'antd';\n\nimport Board from '../components/board/Board';\n\nimport { ResponsiveBar } from '@nivo/bar';\n\nimport { ResponsiveStream } from '@nivo/stream';\n\nimport { ResponsiveCalendar } from '@nivo/calendar';\n\nimport { ResponsivePie } from '@nivo/pie';\n\nimport DataClient from '../api/DataClient';\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\n\nclass AnalyzeCollectedWastesPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            typesSolidWaste: [],\n            layoutAll: true,\n            datas: [],\n            colors: [],\n            keys: [],\n            pieData: [],\n            totalKg: 0,\n            streamDatas: [],\n            streamKeys: [],\n            streamColors: [],\n            legend: [],\n            timeLine: [],\n            dates: [],\n        }\n    }\n\n    async componentWillMount() {\n\n        const responseType = await this.typeSolidWasteClient.getAll();\n\n        this.setState({\n            typesSolidWaste: responseType.data,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                const {\n                    type,\n                    endDate,\n                    startDate,\n                } = values;\n\n                if (type === '') {\n                    this.setState({\n                        layoutAll: true\n                    })\n                } else {\n                    this.setState({\n                        layoutAll: false\n                    })\n                }\n\n                const start = new Date(startDate);\n                start.setHours(0)\n                start.setMinutes(0);\n                start.setSeconds(0);\n\n                const end = new Date(endDate);\n                end.setHours(23)\n                end.setMinutes(59);\n                end.setSeconds(59);\n\n                if (endDate && startDate) {\n                    if (type !== '') {\n\n                        const response = await this.dataClient.getWastesByPeriodFull(start, end, type);\n\n                        const responseFiltered = response.data[0].data.reduce((acc, current) => acc + current.quantityCollected, 0);\n\n                        const totalKg = responseFiltered;\n\n                        const x = response.data[0].data.map((value) => {\n                            let obj = {};\n                            obj[response.data[0].name] = value.quantityCollected;\n                            return obj;\n                        });\n\n                        const dates = response.data[0].data.map((value) => {\n                            return value.collectionDate;\n                        });\n\n                        const rs = {};\n\n                        response.data[0].data.forEach(value => {\n                            value.collectionDate = new Date(value.collectionDate);\n                            value.collectionDate.setHours(0);\n                            value.collectionDate.setMinutes(0);\n                            value.collectionDate.setSeconds(0);\n\n                            if (!rs[value.collectionDate]) {\n                                rs[value.collectionDate] = {\n                                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                    value: value.quantityCollected\n                                }\n                            } else {\n                                rs[value.collectionDate].value += value.quantityCollected;\n                            }\n                        });\n\n                        const rs2 = Object.keys(rs).map(function (key) {\n                            return rs[key];\n                        });\n\n                        const streamKeys = []\n                        streamKeys.push(response.data[0].name)\n                        const streamColors = []\n                        streamColors.push(response.data[0].color)\n                        this.setState({\n                            streamDatas: x,\n                            streamKeys: streamKeys,\n                            streamColors: streamColors,\n                            totalKg: totalKg,\n                            timeLine: rs2,\n                            dates: dates\n                        });\n                    } else {\n\n                        const response = await this.dataClient.getWastesByPeriod(start, end);\n\n                        const responseFiltered = response.data.filter((value) => value.data > 0);\n\n                        const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n                        const legend = responseFiltered.map(value => ({ name: value.name, color: value.color }));\n\n                        const barDatas = responseFiltered.map(value => {\n                            const obj = {};\n                            obj[value.name] = parseFloat(value.data.toFixed(2));\n                            obj['residuos'] = value.name;\n                            return obj;\n                        });\n                        const barKeys = responseFiltered.map(value => value.name);\n                        const barColors = responseFiltered.map(value => value.color);\n\n                        const pieData = responseFiltered.map(value => {\n                            const obj = {};\n                            obj.id = value.name;\n                            obj.label = value.name;\n                            obj.value = parseFloat(((value.data / totalKg) * 100).toFixed(2));\n                            return obj;\n                        });\n\n                        const res = await this.dataClient.getWastesByPeriodFull(start, end);\n                        let rs2 = [];\n                        if (res) {\n                            const responseTimeLine = res.data.reduce((acc, current) => [...acc, ...current.data], []).map((value) => {\n                                value.collectionDate = new Date(value.collectionDate);\n                                value.collectionDate.setHours(0);\n                                value.collectionDate.setMinutes(0);\n                                value.collectionDate.setSeconds(0);\n                                return value;\n                            });\n\n                            const rs = {};\n\n                            responseTimeLine.forEach(value => {\n                                if (!rs[value.collectionDate]) {\n                                    rs[value.collectionDate] = {\n                                        day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                        value: value.quantityCollected\n                                    }\n                                } else {\n                                    rs[value.collectionDate].value += value.quantityCollected;\n                                }\n                            });\n\n                            rs2 = Object.keys(rs).map(function (key) {\n                                return rs[key];\n                            });\n                        }\n\n                        this.setState({\n                            datas: barDatas || [],\n                            colors: barColors,\n                            keys: barKeys,\n                            pieData: pieData,\n                            totalKg: totalKg,\n                            timeLine: rs2,\n                            legend: legend\n                        });\n                    }\n                } else {\n\n                    if (type !== '') {\n                        const response = await this.dataClient.getAllWasteByPeriodFull(values.period, values.interval, type);\n\n                        const x = response.data[0].data.map((value) => {\n                            let obj = {};\n                            obj[response.data[0].name] = value.quantityCollected;\n                            return obj;\n                        });\n\n                        const dates = response.data[0].data.map((value) => {\n                            return value.collectionDate;\n                        });\n\n                        const responseFiltered = response.data[0].data.reduce((acc, current) => acc + current.quantityCollected, 0);\n                        const rs = {};\n\n                        response.data[0].data.forEach(value => {\n                            value.collectionDate = new Date(value.collectionDate);\n                            value.collectionDate.setHours(0);\n                            value.collectionDate.setMinutes(0);\n                            value.collectionDate.setSeconds(0);\n\n                            if (!rs[value.collectionDate]) {\n                                rs[value.collectionDate] = {\n                                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                    value: value.quantityCollected\n                                }\n                            } else {\n                                rs[value.collectionDate].value += value.quantityCollected;\n                            }\n                        });\n\n                        const rs2 = Object.keys(rs).map(function (key) {\n                            return rs[key];\n                        });\n\n                        const streamKeys = []\n                        streamKeys.push(response.data[0].name)\n                        const streamColors = []\n                        streamColors.push(response.data[0].color)\n                        this.setState({\n                            streamDatas: x,\n                            streamKeys: streamKeys,\n                            streamColors: streamColors,\n                            totalKg: responseFiltered,\n                            timeLine: rs2,\n                            dates: dates\n                        });\n                    } else {\n                        const response = await this.dataClient.getAllWasteByPeriod(values.period, values.interval);\n                        const responseFiltered = response.data.filter((value) => value.data > 0);\n\n                        const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n                        const legend = responseFiltered.map(value => ({ name: value.name, color: value.color }));\n\n                        const barDatas = responseFiltered.map(value => {\n                            const obj = {};\n                            obj[value.name] = parseFloat(value.data.toFixed(2));\n                            obj['residuos'] = value.name;\n                            return obj;\n                        });\n                        const barKeys = responseFiltered.map(value => value.name);\n                        const barColors = responseFiltered.map(value => value.color);\n\n                        const pieData = responseFiltered.map(value => {\n                            const obj = {};\n                            obj.id = value.name;\n                            obj.label = value.name;\n                            obj.value = parseFloat(((value.data / totalKg) * 100).toFixed(2));\n                            return obj;\n                        });\n\n                        const responseTimeLine = (await this.dataClient.getAllWasteByPeriodFull(values.period, values.interval)).data.reduce((acc, current) => [...acc, ...current.data], []).map((value) => {\n                            value.collectionDate = new Date(value.collectionDate);\n                            value.collectionDate.setHours(0);\n                            value.collectionDate.setMinutes(0);\n                            value.collectionDate.setSeconds(0);\n                            return value;\n                        });\n\n                        const rs = {};\n\n                        responseTimeLine.forEach(value => {\n                            if (!rs[value.collectionDate]) {\n                                rs[value.collectionDate] = {\n                                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                    value: value.quantityCollected\n                                }\n                            } else {\n                                rs[value.collectionDate].value += value.quantityCollected;\n                            }\n                        });\n\n                        const rs2 = Object.keys(rs).map(function (key) {\n                            return rs[key];\n                        });\n\n                        this.setState({\n                            datas: barDatas || [],\n                            colors: barColors,\n                            keys: barKeys,\n                            pieData: pieData,\n                            totalKg: totalKg,\n                            timeLine: rs2,\n                            legend: legend\n                        });\n                    }\n\n                }\n            }\n        });\n    }\n\n    render() {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n        };\n\n\n        return (\n\n            <>\n                {\n                    !this.state.layoutAll &&\n                    <>\n                        <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n\n                                <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '0px' }}>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('type', {\n                                                    rules: [{ required: false }],\n                                                    initialValue: ''\n                                                })(\n                                                    <Select style={{ width: '100%' }}>\n                                                        <Option value=\"\">Todos</Option>\n                                                        {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                                    </Select>\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 14 }} style={{ padding: '0px' }}>\n                                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('interval', {\n                                                            rules: [{ required: false, message: 'O período é obrigatório!' }]\n                                                        })(\n                                                            <InputNumber min={1} placeholder=\"período\" style={{ width: '100%' }} />,\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('period', {\n                                                            rules: [{ required: true, message: 'O periodo é obrigatorio!' }],\n                                                            initialValue: 'WEEK'\n                                                        })(\n                                                            <Select style={{ width: '100%' }}>\n                                                                <Option value=\"DAY\">Dia</Option>\n                                                                <Option value=\"WEEK\">Semana</Option>\n                                                                <Option value=\"MONTH\">Mês</Option>\n                                                                <Option value=\"YEAR\">Ano</Option>\n                                                            </Select>\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 1 }} style={{ padding: '10px 0px' }}></Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('startDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }]\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"Inicio\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('endDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }],\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"fim\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        <Button\n                                                            type=\"primary\"\n                                                            htmlType=\"submit\"\n                                                            style={{ width: '100%' }}\n                                                        >\n                                                            Consultar\n                                                 </Button>\n                                                    </FormItem>\n                                                </Col>\n                                            </Row>\n\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={24}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board height={window.innerHeight * 0.20}>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Peso total coletado</h3></Divider>\n                                    <div style={{\n                                        fontSize: '2em',\n                                        height: '25%',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center'\n                                    }}>{this.state.totalKg.toFixed(2)} Kg</div>\n                                </Board>\n                            </Col>\n\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board height={window.innerHeight * 0.5}>\n                                    <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em Kg</h3></Divider>\n\n                                    <div style={{ height: '80%' }}>\n                                        <ResponsiveStream\n                                            margin={{\n                                                top: 60,\n                                                right: 80,\n                                                bottom: 60,\n                                                left: 80\n                                            }}\n                                            keys={this.state.streamKeys}\n                                            data={this.state.streamDatas}\n                                            offsetType=\"diverging\"\n                                            colors={this.state.streamColors}\n                                            animate={true}\n                                            dotSize={8}\n                                            dotBorderWidth={2}\n                                            dotBorderColor=\"inherit:brighter(0.7)\"\n                                            tooltipFormat={(value) => {\n                                                return `${value.value.toFixed(2)} Kg - ${moment(this.state.dates[value.index]).format('DD/MM/YYYY')}`;\n                                            }}\n                                        />\n                                    </div>\n                                </Board>\n                            </Col>\n\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Resíduos coletados durante o ano</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.45}px` }}>\n                                        <ResponsiveCalendar\n                                            margin={{\n                                                top: 50,\n                                                right: 10,\n                                                bottom: 10,\n                                                left: 50\n                                            }}\n                                            from=\"2018-01-01T03:00:00.000Z\"\n                                            to=\"2018-12-31T03:00:00.000Z\"\n                                            data={this.state.timeLine}\n\n                                            emptyColor=\"#eeeeee\"\n                                            yearSpacing={40}\n                                            monthBorderColor=\"#ffffff\"\n                                            monthLegendOffset={10}\n                                            dayBorderWidth={2}\n                                            dayBorderColor=\"#ffffff\"\n                                            legends={[\n                                                {\n                                                    \"anchor\": \"bottom-right\",\n                                                    \"direction\": \"row\",\n                                                    \"translateY\": -40,\n                                                    \"itemCount\": 4,\n                                                    \"itemWidth\": 34,\n                                                    \"itemHeight\": 36,\n                                                    \"itemDirection\": \"top-to-bottom\"\n                                                }\n                                            ]}\n                                        />\n                                    </div>\n                                </Board>\n                            </Col>\n                        </Row>\n                    </>\n                }\n\n                {\n                    this.state.layoutAll &&\n                    <>\n                        <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n\n                                <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '0px' }}>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('type', {\n                                                    rules: [{ required: false }],\n                                                    initialValue: ''\n                                                })(\n                                                    <Select style={{ width: '100%' }}>\n                                                        <Option value=\"\">Todos</Option>\n                                                        {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                                    </Select>\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 14 }} style={{ padding: '0px' }}>\n                                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('interval', {\n                                                            rules: [{ required: false, message: 'O intervalo é obrigatório!' }]\n                                                        })(\n                                                            <InputNumber min={1} placeholder=\"intervalo\" style={{ width: '100%' }} />,\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('period', {\n                                                            rules: [{ required: true, message: 'O periodo é obrigatorio!' }],\n                                                            initialValue: 'WEEK'\n                                                        })(\n                                                            <Select style={{ width: '100%' }}>\n                                                                <Option value=\"DAY\">Dia</Option>\n                                                                <Option value=\"WEEK\">Semana</Option>\n                                                                <Option value=\"MONTH\">Mês</Option>\n                                                                <Option value=\"YEAR\">Ano</Option>\n                                                            </Select>\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 1 }} style={{ padding: '10px 0px' }}></Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('startDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }]\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"Inicio\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('endDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }],\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"fim\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        <Button\n                                                            type=\"primary\"\n                                                            htmlType=\"submit\"\n                                                            style={{ width: '100%' }}\n                                                        >\n                                                            Consultar\n                                                 </Button>\n                                                    </FormItem>\n                                                </Col>\n                                            </Row>\n\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={24}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board height={window.innerHeight * 0.20}>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Peso total coletado</h3></Divider>\n                                    <div style={{\n                                        fontSize: '2em',\n                                        height: '25%',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center'\n                                    }}>{this.state.totalKg.toFixed(2)} Kg</div>\n                                </Board>\n                            </Col>\n                            <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                                <Board>\n                                    <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em Kg</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.55}px` }}>\n                                        <ResponsiveBar\n                                            margin={{\n                                                top: 12,\n                                                right: 50,\n                                                bottom: 12,\n                                                left: 50\n                                            }}\n                                            axisBottom={null}\n                                            data={this.state.datas}\n                                            indexBy=\"residuos\"\n                                            keys={this.state.keys}\n                                            colors={this.state.colors}\n                                            padding={0.2}\n                                            slicesLabelsTextColor=\"#ffffff\"\n\n                                            labelSkipWidth={16}\n                                            labelSkipHeight={16}\n\n                                        />\n                                    </div>\n                                    <div style={{marginTop: '20px'}}>\n                                        {this.state.legend.map(value => <div style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{ marginLeft: '5px' }}>{value.name}</span></div>)}\n                                    </div>\n                                </Board>\n                            </Col>\n\n                            <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                                <Board >\n                                    <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em percentual</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.55}px` }}>\n                                        <ResponsivePie\n                                            margin={{\n                                                top: 10,\n                                                right: 50,\n                                                bottom: 30,\n                                                left: 50\n                                            }}\n                                            data={this.state.pieData}\n                                            animate={true}\n                                            innerRadius={0.6}\n                                            padAngle={1}\n                                            cornerRadius={3}\n                                            colors={this.state.colors}\n                                            radialLabelsLinkColor=\"inherit\"\n                                            radialLabelsLinkStrokeWidth={3}\n                                            radialLabelsTextColor=\"inherit:darker(1.2)\"\n                                            slicesLabelsTextColor=\"#ffffff\"\n                                        />\n                                    </div>\n                                    <div style={{marginTop: '20px'}}>\n                                        {this.state.legend.map(value => <div style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{  marginLeft: '5px' }}>{value.name}</span></div>)}\n                                    </div>\n                                </Board>\n                            </Col>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Resíduos coletados durante o ano</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.45}px` }}>\n                                        <ResponsiveCalendar\n                                            margin={{\n                                                top: 50,\n                                                right: 10,\n                                                bottom: 10,\n                                                left: 50\n                                            }}\n                                            from=\"2018-01-01T03:00:00.000Z\"\n                                            to=\"2018-12-31T03:00:00.000Z\"\n                                            data={this.state.timeLine}\n\n                                            emptyColor=\"#eeeeee\"\n                                            yearSpacing={40}\n                                            monthBorderColor=\"#ffffff\"\n                                            monthLegendOffset={10}\n                                            dayBorderWidth={2}\n                                            dayBorderColor=\"#ffffff\"\n                                            legends={[\n                                                {\n                                                    \"anchor\": \"bottom-right\",\n                                                    \"direction\": \"row\",\n                                                    \"translateY\": -40,\n                                                    \"itemCount\": 4,\n                                                    \"itemWidth\": 34,\n                                                    \"itemHeight\": 36,\n                                                    \"itemDirection\": \"top-to-bottom\"\n                                                }\n                                            ]}\n                                        />\n                                    </div>\n                                </Board>\n                            </Col>\n                        </Row>\n                    </>\n                }\n            </>\n        );\n    }\n}\n\nexport default Form.create()(AnalyzeCollectedWastesPage);","const toSolidWasteCollectedData = (value) =>  {\n    const result = [];\n    result.push(value.typeWasted);\n    result.push(value.quantityCollected);\n    result.push(value.collectionDate);\n    return result;\n};\n\nexport default {\n    toSolidWasteCollectedData,\n}","export default (data) => ({\n    content: [\n        {\n            text: `Coletas realizadas entre ${data.startDate} - ${data.endDate}\\n\\n`,\n            style: 'header'\n        },\n        {\n            text: `Total coletado: ${data.total} Kg`,\n            fontSize: 14, bold: true\n        },\n        {\n\t\t\tstyle: 'table',\n\t\t\ttable: {\n                widths: [100, '*', 200],\n\t\t\t\tbody: [\n\t\t\t\t\t['Data', 'Total coletado', 'Tipo de resíduo coletado'],\n\t\t\t\t\t...data.datas\n\t\t\t\t]\n\t\t\t}\n\t\t}\n    ],\n\n    styles: {\n        header: {\n            fontSize: 18,\n            bold: true\n        },\n        table: {\n\t\t\tmargin: [0, 5, 0, 15]\n\t\t},\n    }\n});","import React from 'react';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport vfsFonts from 'pdfmake/build/vfs_fonts';\n\nimport { Table, Row, Col, Button, Form, Select, DatePicker } from 'antd';\n\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataClient from '../api/DataClient';\n\nimport DataList from '../helpers/DataList';\n\nimport DataDoc from '../helpers/DataDoc';\n\nimport CollectionReport from '../docs/templates/CollectionReport';\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\nclass ReportPage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n        this.state = {\n            typesSolidWaste: [],\n            dataTypesSolidWaste: [],\n            dataTables: [],\n            total: 0,\n            dataDoc: {},\n            filteredInfo: {},\n            sortedInfo: {}\n        };\n    }\n\n    async componentWillMount() {\n        const response = await this.typeSolidWasteClient.getAll();\n        this.setState({\n            typesSolidWaste: response.data,\n            dataTypesSolidWaste: response ? DataList.toTypesSolidWasteData(response.data) : [],\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                const {\n                    type,\n                    endDate,\n                    startDate,\n                } = values;\n\n                if (endDate && startDate) {\n                    const start = new Date(startDate);\n                    start.setHours(0)\n                    start.setMinutes(0);\n                    start.setSeconds(0);\n\n                    const end = new Date(endDate);\n                    end.setHours(23)\n                    end.setMinutes(59);\n                    end.setSeconds(59);\n\n                    const response = await this.dataClient.getWastesByPeriodFull(start, end, type);\n\n                    const result = response.data.map((value) => DataList.toSolidWasteCollectedData(value.data)).reduce((acc, current) => [...acc, ...current]);\n\n                    const result2 = result.map((value) => {\n                        return DataDoc.toSolidWasteCollectedData(value);\n                    });\n\n                    const total = result2.reduce((acc, current) => acc + current[1], 0);\n\n                    this.setState({\n                        dataTables: result,\n                        dataDoc: {\n                            datas: result2,\n                            total: total,\n                            startDate: startDate.format('DD/MM/YYYY'),\n                            endDate: endDate.format('DD/MM/YYYY'),\n                        },\n                        total: total,\n                    });\n                }\n            }\n        });\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            }, {\n            title: 'Data',\n            dataIndex: 'collectionDate',\n            key: 'collectionDate',\n            width: 150,\n            sorter: (a, b) => {\n                const firstSplit = a.collectionDate.split('/');\n                const secondSplit = b.collectionDate.split('/');\n\n                const first = new Date(parseInt(firstSplit[2]), parseInt(firstSplit[1]) - 1, parseInt(firstSplit[0]));\n                const second = new Date(parseInt(secondSplit[2]), parseInt(secondSplit[1]) - 1, parseInt(secondSplit[0]));\n\n                return first - second;\n            },\n            sortOrder: this.state.sortedInfo.columnKey === 'collectionDate' && this.state.sortedInfo.order,\n        }, {\n            title: 'Total coletado',\n            dataIndex: 'quantityCollected',\n            key: 'quantityCollected',\n            width: 200,\n            render: (text, record) => (\n                `${text} Kg`\n            ),\n            sorter: (a, b) => a.quantityCollected - b.quantityCollected,\n            sortOrder: this.state.sortedInfo.columnKey === 'quantityCollected' && this.state.sortedInfo.order,\n        }, {\n            title: 'Tipo',\n            dataIndex: 'typeWasted',\n            key: 'typeWasted'\n        }];\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n        };\n\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                    <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '0px' }}>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n\n                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                        {getFieldDecorator('type', {\n                                            rules: [{ required: false }],\n                                            initialValue: ''\n                                        })(\n                                            <Select style={{ width: '100%' }}>\n                                                <Option value=\"\">Todos</Option>\n                                                {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                            </Select>\n                                        )}\n                                    </FormItem>\n                                </Col>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 10 }} style={{ padding: '0px' }}>\n                                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 9 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('startDate', {\n                                                    rules: [{\n                                                        required: false,\n                                                    }]\n                                                })(\n                                                    <DatePicker style={{ width: '100%' }} placeholder=\"Inicio\" />\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 9 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('endDate', {\n                                                    rules: [{\n                                                        required: false,\n                                                    }],\n                                                })(\n                                                    <DatePicker style={{ width: '100%' }} placeholder=\"fim\" />\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 2 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                <Button\n                                                    type=\"primary\"\n                                                    htmlType=\"submit\"\n                                                    style={{ width: '100%' }}\n                                                    icon=\"search\"\n                                                >\n                                                </Button>\n                                            </FormItem>\n                                        </Col>\n                                    </Row>\n\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n                {this.state.dataTables.length > 0 &&\n                    <div>\n                        <div style={{\n                            padding: '10px',\n                            background: 'white',\n                            margin: '16px 0px'\n                        }}>\n                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                                <Col xs={{ span: 24 }} lg={{ span: 6 }} style={{ padding: '0px' }}>\n                                    <h3 style={{ margin: '0px' }}>Total Coletado {this.state.dataTables.reduce((acc, current) => acc + current.quantityCollected, 0).toFixed(2)} Kg</h3>\n                                </Col>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 3 }} style={{ padding: '0px' }}>\n                                    <Button ype=\"primary\"\n                                        htmlType=\"button\"\n                                        style={{ width: '100%' }}\n                                        icon=\"file-pdf\"\n                                        onClick={() => {\n                                            const { vfs } = vfsFonts.pdfMake;\n                                            pdfMake.vfs = vfs;\n                                            pdfMake.createPdf(CollectionReport(this.state.dataDoc)).download('report.pdf')\n                                        }}>PDF</Button>\n                                </Col>\n                            </Row>\n                        </div>\n                        <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.dataTables} scroll={window.innerWidth <= 600 ? { x: 700 } : undefined} style={{ background: \"white\", marginBottom: '20px' }} />\n                    </div>\n                }\n\n            </>\n        );\n    }\n}\n\nexport default Form.create()(ReportPage);","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport { Icon, Menu } from 'antd';\n\nimport BasePage from './pages/BasePage';\nimport GeneralPage from './pages/GeneralPage';\n// import UsersPage from './pages/UsersPage';\nimport TypesSolidWastePage from './pages/TypesSolidWastePage';\nimport SolidWasteCollectedPage from './pages/SolidWasteCollectedPage';\nimport AnalyzeCollectedWastesPage from './pages/AnalyzeCollectedWastesPage';\nimport ReportPage from './pages/ReportPage';\n\n\nexport default class Routes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            titlePage: 'Visão Geral'\n        }\n    }\n\n    render = () => (\n        <Router>\n            <BasePage\n                menu={\n                    <Menu mode=\"inline\" style={{ zIndex: '999' }}>\n                        <Menu.Item key=\"1\" onClick={() => {this.setState({titlePage: 'Visão Geral'})}}>\n                            <Icon type=\"home\" />\n                            <Link to=\"/\" className=\"nav-text\">Visão Geral</Link>\n                        </Menu.Item>\n                        {/* <Menu.Item key=\"2\" onClick={() => {this.setState({titlePage: 'Usuários'})}}>\n                            <Icon type=\"user\" />\n                            <Link to=\"/usuarios\" className=\"nav-text\">Usuários</Link>\n                        </Menu.Item> */}\n                        <Menu.Item key=\"3\" onClick={() => {this.setState({titlePage: 'Tipos de Resíduos Sólidos'})}}>\n                            <Icon type=\"tag\" />\n                            <Link to=\"/tipos-residuos-solidos\" className=\"nav-text\">Tipos de Resíduos Sólidos</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"4\" onClick={() => {this.setState({titlePage: 'Coletas'})}}>\n                            <Icon type=\"delete\" />\n                            <Link to=\"/coletas\" className=\"nav-text\">Coletas</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"5\" onClick={() => {this.setState({titlePage: 'Análises'})}}>\n                            <Icon type=\"line-chart\" />\n                            <Link to=\"/analises\" className=\"nav-text\">Análises</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"6\" onClick={() => {this.setState({titlePage: 'Relatórios'})}}>\n                            <Icon type=\"file-text\" />\n                            <Link to=\"/relatorios\" className=\"nav-text\">Relatórios</Link>\n                        </Menu.Item>\n                    </Menu>\n                }\n\n                content={\n                    <>\n                        <Route exact path=\"/\" component={GeneralPage} />\n                        {/* <Route exact path=\"/usuarios\" component={UsersPage} /> */}\n                        <Route exact path=\"/tipos-residuos-solidos\" component={TypesSolidWastePage} />\n                        <Route exact path=\"/coletas\" component={SolidWasteCollectedPage} />\n                        <Route exact path=\"/analises\" component={AnalyzeCollectedWastesPage} />\n                        <Route exact path=\"/relatorios\" component={ReportPage} />\n                        {/* <Route exact path=\"/analises/s\" component={AnalyzeCollectedWastesPage} /> */}\n                    </>\n                }\n\n                titlePage={this.state.titlePage}\n            />\n        </Router>\n    );\n}","import React, { Component } from 'react';\nimport Routes from './Routes';\n\nimport 'antd/es/grid/style/index.css';\nimport 'antd/es/button/style/index.css';\nimport 'antd/es/form/style/index.css';\nimport 'antd/es/select/style/index.css';\nimport 'antd/es/input-number/style/index.css';\nimport 'antd/es/input/style/index.css';\nimport 'antd/es/date-picker/style/index.css';\nimport 'antd/es/divider/style/index.css';\nimport 'antd/es/layout/style/index.css';\nimport 'antd/es/icon/style/index.css';\nimport 'antd/es/drawer/style/index.css';\nimport 'antd/es/table/style/index.css';\nimport 'antd/es/modal/style/index.css';\nimport 'antd/es/checkbox/style/index.css';\nimport 'antd/es/tag/style/index.css';\nimport 'antd/es/menu/style/index.css';\nimport 'antd/es/pagination/style/index.css';\nimport 'antd/es/dropdown/style/index.css';\nimport 'antd/es/style/index.css'\n\n// import { Row, Col, Button, Form, Select, InputNumber, Divider } from 'antd';\n\n// import 'antd/dist/antd.css';\n\nimport './theme/index.css';\nimport './App.css';\n\nexport default class App extends Component {\n    render = () => (\n        <Routes />\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}