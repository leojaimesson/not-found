{"version":3,"sources":["pages/BasePage.js","components/board/Board.js","api/DataClient.js","pages/GeneralPage.js","api/TypeSolidWasteClient.js","helpers/DataList.js","pages/TypesSolidWastePage.js","helpers/DataFilters.js","pages/SolidWasteCollectedPage.js","pages/AnalyzeCollectedWastesPage.js","helpers/DataDoc.js","docs/templates/CollectionReport.js","pages/ReportPage.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Content","Sider","Footer","BasePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDrawer","setState","visible","onClose","render","react_default","a","createElement","layout","style","height","overflow","drawer","title","fontWeight","fontSize","color","placement","state","padding","menu","breakpoint","collapsedWidth","width","onBreakpoint","broken","onCollapse","collapsed","type","background","className","row","justify","align","col","icon","onClick","margin","titlePage","boxSizing","content","textAlign","bottom","Component","Board","children","SolidWasteCollectedClient","url","request","axios","create","baseURL","timeout","headers","Content-Type","period","interval","get","concat","response","startDate","endDate","FormItem","Form","Item","Option","Select","GeneralPage","handleSubmit","e","preventDefault","form","validateFields","_ref","asyncToGenerator","regenerator_default","mark","_callee","err","values","responseFiltered","totalKg","barDatas","barKeys","barColors","pieData","wrap","_context","prev","next","dataClient","getAllWasteByPeriod","sent","data","filter","value","reduce","acc","current","map","obj","name","id","label","toFixed","datas","colors","keys","stop","_x","_x2","apply","arguments","DataClient","timeLine","legend","start","Date","end","getWastesByPeriodFull","toConsumableArray","collectionDate","setHours","setMinutes","setSeconds","responseTimeLine","rs","forEach","quantityCollected","day","moment","format","rs2","key","parseFloat","getFieldDecorator","heightBoard","window","innerHeight","Fragment","gutter","xs","span","lg","es_form","onSubmit","float","rules","required","message","initialValue","input_number","min","es_select","es_button","htmlType","Board_Board","divider","orientation","bar","top","right","left","axisBottom","indexBy","labelTextColor","labelSkipWidth","labelSkipHeight","animate","motionStiffness","motionDamping","display","alignItems","marginRight","marginLeft","pie","innerRadius","padAngle","cornerRadius","radialLabelsLinkColor","radialLabelsLinkStrokeWidth","radialLabelsTextColor","calendar","from","to","emptyColor","yearSpacing","monthBorderColor","monthLegendOffset","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemDirection","TypeSolidWasteClient","typeSolidWaste","post","JSON","stringify","delete","toTags","tags","recyclable","push","reutilable","DataList","toUsersListData","users","user","_id","firstName","email","toTypesSolidWasteData","typesSolidWaste","description","toSolidWasteCollectedData","solidWasteCollected","typeWasted","TypesSolidWastePage","showModal","modalVisible","handleOk","validateFieldsAndScroll","toUpperCase","isRecyclable","isReutilable","typeSolidWasteClient","save","resetFields","handleCancel","handleChangeCheckRecyclable","target","checked","handleChangeCheckReutilable","handleChangeTable","pagination","filters","sorter","filteredInfo","formItemLayout","labelCol","sm","wrapperCol","columns","dataIndex","tag","es_tag","t","filteredValue","onFilter","record","console","log","includes","text","modalExcluir","bind","assertThisInitialized","marginBottom","shape","size","position","zIndex","modal","okText","onOk","onCancel","TypesSolidWastePage_FormItem","assign","input","onChange","offset","es_checkbox","table","bordered","dataSource","scroll","innerWidth","x","undefined","visibleModalExcluir","getAll","reverse","idTypeSolidWaste","_this2","Modal","error","cancelText","okCancel","_onOk","_callee3","_context3","remove","typeSolidWast","DataFilters","types","SolidWasteCollectedPage","idSolidWasteCollected","solidWasteCollectedClient","solidsWasteCollected","_callee2","_context2","handleChangeSelect","typeSelected","handleChangeDate","date","dateString","sortedInfo","b","firstSplit","split","secondSplit","parseInt","sortOrder","columnKey","order","SolidWasteCollectedPage_FormItem","placeholder","SolidWasteCollectedPage_Option","date_picker","responseCollected","responseType","AnalyzeCollectedWastesPage","streamKeys","streamColors","_response","_responseFiltered","_totalKg","res","_rs","_rs2","_response2","_x3","_responseFiltered2","_rs3","_rs4","_streamKeys","_streamColors","_response3","_responseFiltered3","_totalKg2","_barDatas","_barKeys","_barColors","_pieData","_responseTimeLine","_rs5","_rs6","layoutAll","streamDatas","getWastesByPeriod","getAllWasteByPeriodFull","t0","t1","t2","AnalyzeCollectedWastesPage_FormItem","AnalyzeCollectedWastesPage_Option","justifyContent","stream","offsetType","dotSize","dotBorderWidth","dotBorderColor","marginTop","DataDoc","result","CollectionReport","total","bold","widths","body","styles","header","ReportPage","result2","dataTables","dataDoc","ReportPage_FormItem","ReportPage_Option","length","ype","vfs","vfsFonts","pdfMake","createPdf","download","dataTypesSolidWaste","Routes","BrowserRouter","BasePage_BasePage","mode","Link","Route","exact","path","component","App","Routes_Routes","Boolean","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3132a251.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Layout, Icon, Drawer, Row, Col } from 'antd';\n\nconst { Header, Content, Sider, Footer } = Layout;\n\nexport default class BasePage extends Component {\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            placement: 'left',\n        };\n    }\n\n    render = () => (\n        <Layout style={{ height: '100%', overflow: 'auto' }}>\n            <Drawer\n                title={<span style={{\n                    fontWeight: 'bolder',\n                    fontSize: '1.5em',\n                    color: '#618833'\n                }}>NotFound</span>}\n                placement={this.state.placement}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                style={{ padding: \"24px 0px\" }}\n            >\n                {this.props.menu}\n            </Drawer>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                width={250}\n                onBreakpoint={(broken) => { }}\n                onCollapse={(collapsed, type) => { }}\n                style={{ background: '#fff' }}\n            >\n                <div className=\"logo\">NotFound</div>\n                {this.props.menu}\n            </Sider>\n            <Layout>\n                <Header style={{ background: '#8bc34a', padding: \"0px 14px\" }}>\n                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ height: '100%' }}>\n                        <Col className=\"hide\"><Icon className=\"trigger\" type=\"menu-fold\" onClick={this.showDrawer} /></Col>\n                        <Col><h2 style={{margin: '0px'}}>{this.props.titlePage}</h2></Col>\n                        <Col><Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ height: '100%' }}>\n                            {/* <span style={{ margin: '0px 2px 0px 8px' }}>Sair</span> */}\n                        </Row>\n                        </Col>\n                    </Row>\n                </Header>\n                <Content style={{ padding: '20px 14px 45px 14px', boxSizing: 'border-box', height: '100%', overflow: 'auto' }}>\n                    {this.props.content}\n                </Content>\n                <Footer style={{ textAlign: 'center', bottom: '0px', width: '100%', background: '#618833', padding: '10px ' }}>\n                    NotFound ©2018 Created by Leo Jaimesson\n                </Footer>\n            </Layout>\n        </Layout>\n    );\n}\n\nBasePage.propTypes = {\n    menu: PropTypes.node,\n    content: PropTypes.node\n}","import React, { Component } from 'react';\n\nimport './Board.css';\n\nexport default class Board extends Component {\n\n    render() {\n        return (\n            <div className=\"board\" style={{height: this.props.height, width: this.props.width }}>\n                {this.props.children}\n            </div>\n        );\n    }\n}","import axios from 'axios';\n\nexport default class SolidWasteCollectedClient {\n\n    constructor(url) {\n        this.url = url;\n        this.request = axios.create({\n            baseURL: url,\n            timeout: 30000,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    async getAllWasteByPeriod(period, interval, type) {\n        const response = await this.request.get(`/all-wastes?period=${period}&interval=${interval}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getAllWasteByPeriodFull(period, interval, type) {\n        const response = await this.request.get(`/all-wastes-full?period=${period}&interval=${interval}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getWastesByPeriod(startDate, endDate, type) {\n        const response = await this.request.get(`/roda?startDate=${startDate}&endDate=${endDate}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getWastesByPeriodFull(startDate, endDate, type) {\n        const response = await this.request.get(`/roda-full?startDate=${startDate}&endDate=${endDate}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getWasteByPeriod(period, interval, type) {\n        const response = await this.request.get(`/wastes?period=${period}&interval=${interval}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n}","import React, { Component } from 'react';\n\nimport { Row, Col, Button, Form, Select, InputNumber, Divider } from 'antd';\n\nimport moment from 'moment';\n\nimport Board from '../components/board/Board';\n\nimport { ResponsiveBar } from '@nivo/bar';\n\nimport { ResponsivePie } from '@nivo/pie';\n\nimport { ResponsiveCalendar } from '@nivo/calendar';\n\nimport DataClient from '../api/DataClient';\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\n\n\nclass GeneralPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n        this.state = {\n            datas: [],\n            colors: [],\n            keys: [],\n            pieData: [],\n            totalKg: 0,\n            timeLine: [],\n            legend: [],\n        }\n    }\n\n    async componentWillMount() {\n        const response = await this.dataClient.getAllWasteByPeriod('WEEK', 1);\n\n        const responseFiltered = response.data.filter((value) => value.data > 0);\n\n        const start = new Date(2018, 0, 1, 0, 0, 0);\n        const end = new Date(2018, 11, 31, 11, 59, 59);\n\n        const responseTimeLine = (await this.dataClient.getWastesByPeriodFull(start, end)).data.reduce((acc, current) => [...acc, ...current.data], []).map((value) => {\n            value.collectionDate = new Date(value.collectionDate);\n            value.collectionDate.setHours(0);\n            value.collectionDate.setMinutes(0);\n            value.collectionDate.setSeconds(0);\n            return value;\n        });\n\n        const rs = {};\n\n        responseTimeLine.forEach(value => {\n            if (!rs[value.collectionDate]) {\n                rs[value.collectionDate] = {\n                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                    value: value.quantityCollected\n                }\n            } else {\n                rs[value.collectionDate].value += value.quantityCollected;\n            }\n        });\n\n        const rs2 = Object.keys(rs).map(function (key) {\n            return rs[key];\n        });\n\n        const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n        const barDatas = responseFiltered.map(value => {\n            const obj = {};\n            obj[value.name] = value.data;\n            obj['residuos'] = value.name;\n            return obj;\n        });\n        const barKeys = responseFiltered.map(value => value.name);\n        const barColors = responseFiltered.map(value => value.color);\n\n        const pieData = responseFiltered.map(value => {\n            const obj = {};\n            obj.id = value.name;\n            obj.label = value.name;\n            obj.value = parseFloat(((value.data / totalKg) * 100).toFixed(2));\n            return obj;\n        });\n\n        const legend = responseFiltered.map(value => ({ name: value.name, color: value.color }));\n\n        this.setState({\n            datas: barDatas || [],\n            colors: barColors,\n            keys: barKeys,\n            pieData: pieData,\n            totalKg: totalKg,\n            timeLine: rs2,\n            legend: legend,\n        });\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                const response = await this.dataClient.getAllWasteByPeriod(values.period, values.interval);\n                const responseFiltered = response.data.filter((value) => value.data > 0);\n\n\n                const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n                const barDatas = responseFiltered.map(value => {\n                    const obj = {};\n                    obj[value.name] = value.data;\n                    obj['residuos'] = value.name;\n                    return obj;\n                });\n                const barKeys = responseFiltered.map(value => value.name);\n                const barColors = responseFiltered.map(value => value.color);\n\n                const pieData = responseFiltered.map(value => {\n                    const obj = {};\n                    obj.id = value.name;\n                    obj.label = value.name;\n                    obj.value = ((value.data / totalKg) * 100).toFixed(2);\n                    return obj;\n                });\n\n                this.setState({\n                    datas: barDatas || [],\n                    colors: barColors,\n                    keys: barKeys,\n                    pieData: pieData,\n                    totalKg: totalKg\n                });\n            }\n        });\n    }\n\n    render() {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const heightBoard = window.innerHeight * 0.50;\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                    <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit} style={{ float: 'right' }}>\n                            <FormItem>\n                                <span>Periodo</span>\n                            </FormItem>\n                            <FormItem>\n                                {getFieldDecorator('interval', {\n                                    rules: [{ required: true, message: 'O intervalo é obrigatório!' }],\n                                    initialValue: 1\n                                })(\n                                    <InputNumber min={1} />,\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {getFieldDecorator('period', {\n                                    rules: [{ required: true, message: 'O periodo é obrigatorio!' }],\n                                    initialValue: 'WEEK'\n                                })(\n                                    <Select style={{ width: 120 }}>\n                                        <Option value=\"DAY\">Dia</Option>\n                                        <Option value=\"WEEK\">Semana</Option>\n                                        <Option value=\"MONTH\">Mês</Option>\n                                        <Option value=\"YEAR\">Ano</Option>\n                                    </Select>\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                >\n                                    Consultar\n                                </Button>\n                            </FormItem>\n                        </Form>\n                    </Col>\n                </Row>\n\n                <Row gutter={24}>\n                    <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                        <Board>\n                            <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em Kg</h3></Divider>\n                            <div style={{ height: `${heightBoard}px` }}>\n                                <ResponsiveBar\n                                    margin={{\n                                        top: 40,\n                                        right: 50,\n                                        bottom: 40,\n                                        left: 50\n                                    }}\n                                    axisBottom={null}\n                                    data={this.state.datas}\n                                    indexBy=\"residuos\"\n                                    keys={this.state.keys}\n                                    colors={this.state.colors}\n                                    padding={0.2}\n                                    labelTextColor='#ffffff'\n                                    labelSkipWidth={12}\n                                    labelSkipHeight={12}\n                                    animate={true}\n                                    motionStiffness={90}\n                                    motionDamping={15}\n                                />\n                            </div>\n                            <div>\n                                {this.state.legend.map(value => <div key={`bar-${value.name}`} style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{ marginLeft: '5px' }}>{value.name}</span></div>)}\n                            </div>\n                        </Board>\n                    </Col>\n\n                    <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                        <Board>\n                            <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Resíduos coletados em percentual</h3></Divider>\n\n\n\n                            <div style={{ height: `${heightBoard}px` }}>\n                                <ResponsivePie\n                                    margin={{\n                                        top: 40,\n                                        right: 50,\n                                        bottom: 55,\n                                        left: 50\n                                    }}\n                                    data={this.state.pieData}\n                                    animate\n                                    innerRadius={0.6}\n                                    padAngle={1}\n                                    cornerRadius={3}\n                                    colors={this.state.colors}\n                                    radialLabelsLinkColor=\"inherit\"\n                                    radialLabelsLinkStrokeWidth={3}\n                                    radialLabelsTextColor=\"inherit:darker(1.2)\"\n                                />\n\n                            </div>\n                            <div>\n                                {this.state.legend.map(value => <div key={`pie-${value.name}`} style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{ marginLeft: '5px' }}>{value.name}</span></div>)}\n                            </div>\n                        </Board>\n                    </Col>\n\n                    <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                        <Board>\n                            <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Foram coletados {this.state.totalKg.toFixed(2)} Kg de resíduos este ano</h3></Divider>\n                            <div style={{ height: `${heightBoard}px` }}>\n                                <ResponsiveCalendar\n                                    margin={{\n                                        top: 50,\n                                        right: 10,\n                                        bottom: 0,\n                                        left: 50\n                                    }}\n                                    from=\"2018-01-01T03:00:00.000Z\"\n                                    to=\"2018-12-31T03:00:00.000Z\"\n                                    data={this.state.timeLine}\n                                    emptyColor=\"#eeeeee\"\n                                    yearSpacing={40}\n                                    monthBorderColor=\"#ffffff\"\n                                    monthLegendOffset={10}\n                                    dayBorderWidth={2}\n                                    dayBorderColor=\"#ffffff\"\n                                    legends={[\n                                        {\n                                            \"anchor\": \"bottom-right\",\n                                            \"direction\": \"row\",\n                                            \"translateY\": -80,\n                                            \"itemCount\": 4,\n                                            \"itemWidth\": 34,\n                                            \"itemHeight\": 36,\n                                            \"itemDirection\": \"top-to-bottom\"\n                                        }\n                                    ]}\n                                />\n                            </div>\n                        </Board>\n                    </Col>\n                </Row>\n            </>\n        );\n    }\n}\n\nexport default Form.create()(GeneralPage);","import axios from 'axios';\n\nexport default class TypeSolidWasteClient {\n\n    constructor(url) {\n        this.url = url;\n        this.request = axios.create({\n            baseURL: url,\n            timeout: 30000,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n\n    async save(typeSolidWaste) {\n        const response = await this.request.post('/', JSON.stringify(typeSolidWaste));\n        return response;\n    }\n\n    async getAll() {\n        const response = await this.request.get('/');\n        return response;\n    }\n\n    async remove(id) {\n        const response = await this.request.delete(`?id=${id}`);\n        return response;\n    }\n}","import moment from 'moment';\n\nconst toTags = (typeSolidWaste) => {\n    const tags = [];\n    if(typeSolidWaste.recyclable) {\n        tags.push('recyclable');\n    }\n    if(typeSolidWaste.reutilable) {\n        tags.push('reutilable');\n    }\n    return tags;\n}\n\nconst toUsersListData = (users) => users.map((user) => ({\n    key: user._id,\n    name: user.firstName,\n    email: user.email\n}));\n\nconst toTypesSolidWasteData = (typesSolidWaste) => typesSolidWaste.map((typeSolidWaste) => ({\n    key: typeSolidWaste._id,\n    name: typeSolidWaste.name,\n    description: typeSolidWaste.description,\n    color: typeSolidWaste.color,\n    tags: toTags(typeSolidWaste)\n}));\n\nconst toSolidWasteCollectedData = (solidWasteCollected) => solidWasteCollected.map((solidWasteCollected) => ({\n    key: solidWasteCollected._id,\n    typeWasted: solidWasteCollected.typeWasted.name,\n    quantityCollected: solidWasteCollected.quantityCollected,\n    color: solidWasteCollected.typeWasted.color,\n    collectionDate: moment(new Date(solidWasteCollected.collectionDate)).format('DD/MM/YYYY'),\n}));\n\nexport default {\n    toUsersListData,\n    toTypesSolidWasteData,\n    toSolidWasteCollectedData,\n    toTags,\n}","import React, { Component } from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Input, Checkbox, Tag } from 'antd';\n\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataList from '../helpers/DataList';\n\nconst FormItem = Form.Item;\n\n\nclass TypesSolidWastePage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            modalVisible: false,\n            visibleModalExcluir: false,\n            isRecyclable: false,\n            isReutilable: false,\n            typesSolidWaste: [],\n            filters: [],\n            filteredInfo: {},\n        };\n    }\n\n    async componentWillMount() {\n        const response = await this.typeSolidWasteClient.getAll();\n        this.setState({\n            typesSolidWaste: response ? DataList.toTypesSolidWasteData(response.data).reverse() : [],\n        });\n    }\n\n    modalExcluir(idTypeSolidWaste) {\n        Modal.error({\n            title: 'Deseja realmente excluir este tipo de residuo?',\n            cancelText: 'Cancelar',\n            okCancel: true,\n            okText: 'Excluir',\n            onOk: async () => {\n                const response = await this.typeSolidWasteClient.remove(idTypeSolidWaste);\n                this.setState({\n                    typesSolidWaste: this.state.typesSolidWaste.filter((typeSolidWast) => typeSolidWast.key !== response.data._id)\n                })\n            }\n        });\n    }\n\n    showModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n            if (!err) {\n                const typeSolidWaste = {\n                    name: values.name.toUpperCase(),\n                    description: values.description,\n                    recyclable: this.state.isRecyclable,\n                    reutilable: this.state.isReutilable,\n                    color: values.color\n                };\n                const response = await this.typeSolidWasteClient.save(typeSolidWaste);\n                this.setState({\n                    typesSolidWaste: [{\n                        color: response.data.color,\n                        key: response.data._id, name: response.data.name, description: response.data.description, tags: DataList.toTags(response.data)\n                    }, ...this.state.typesSolidWaste],\n                    modalVisible: false,\n                    isRecyclable: false,\n                    isReutilable: false,\n                });\n                this.props.form.resetFields();\n            }\n\n        });\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            modalVisible: false,\n            isRecyclable: false,\n            isReutilable: false,\n        });\n    }\n\n    handleChangeCheckRecyclable = (e) => {\n        this.setState({\n            isRecyclable: e.target.checked,\n        });\n    }\n\n    handleChangeCheckReutilable = (e) => {\n        this.setState({\n            isReutilable: e.target.checked,\n        });\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 7 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 15 },\n            },\n        };\n\n        const formTailLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: {\n                xs: {\n                    span: 12, offset: 0\n                },\n                sm: {\n                    span: 12, offset: 7\n                }\n            }\n        }\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            },\n            {\n                title: 'Nome',\n                dataIndex: 'name',\n                key: 'name',\n                width: 500,\n\n            }, {\n                title: 'Descrição',\n                dataIndex: 'description',\n                key: 'description',\n                width: 600,\n\n            }, {\n                title: '',\n                key: 'tags',\n                dataIndex: 'tags',\n                render: tags => {\n                    function tagT(t) {\n                        if(t === 'recyclable') {\n                            return 'Reciclável';\n                        } else if(t === 'reutilable') {\n                            return 'Reutilizável';\n                        } else {\n                            return '';\n                        }\n                    }\n                    return (\n                        <span>\n                            {tags.map(tag => <Tag color=\"blue\" key={tag}>{tagT(tag)}</Tag>)}\n                        </span>\n                    )\n                },\n                filters: this.state.filters,\n                filteredValue: this.state.filteredInfo.tags || null,\n                onFilter: (value, record) => {\n                    console.log(value)\n                    return record.tags.includes(value)\n                },\n            }, {\n                title: 'Ação',\n                key: 'action',\n                render: (text, record) => (\n                    <Button type='danger' icon=\"delete\" onClick={this.modalExcluir.bind(this, text.key)}></Button>\n                ),\n            }];\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ marginBottom: \"20px\" }}>\n                    <Col><Button type=\"primary\" shape=\"circle\" icon=\"plus\" size=\"large\" style={{ height: '50px', width: '50px', position: 'fixed', bottom: '50px', right: '10px', zIndex: \"999\" }} onClick={this.showModal}></Button></Col>\n                </Row>\n                <Modal\n                    title=\"Cadastrar no tipo de resíduo\"\n                    visible={this.state.modalVisible}\n                    okText={\"Cadastrar\"}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form>\n                        <FormItem {...formItemLayout} label=\"Nome\">\n                            {getFieldDecorator('name', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite o nome do tipo de resíduo',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Descrição\">\n                            {getFieldDecorator('description', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite a descrição do tipo de resíduo',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Cor\">\n                            {getFieldDecorator('color', {\n                                rules: [{\n                                    required: true, message: 'Por favor selecione uma cor para este tipo de resíduo',\n                                }],\n                            })(\n                                <Input type='color' onChange={(e) => { }} />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formTailLayout}>\n                            <Checkbox onClick={this.handleChangeCheckRecyclable}>\n                                Reciclável\n                            </Checkbox>\n                            <Checkbox onClick={this.handleChangeCheckReutilable}>\n                                Reutilizável\n                            </Checkbox>\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.typesSolidWaste} scroll={window.innerWidth <= 600 ? { x: 900 } : undefined} style={{ background: \"white\" }} />\n            </>\n        );\n    }\n}\n\nexport default Form.create()(TypesSolidWastePage);","const toTypesSolidWasteFiltersData = (types) => types.map((type) => ({\n    text: type.name,\n    value: type.name,\n}));\n\nexport default {\n    toTypesSolidWasteFiltersData,\n}","import React, { Component } from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Select, DatePicker, InputNumber } from 'antd';\n\nimport moment from 'moment';\n\nimport SolidWasteCollectedClient from '../api/TypeSolidWasteClient';\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataList from '../helpers/DataList';\nimport DataFilters from '../helpers/DataFilters';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass SolidWasteCollectedPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.solidWasteCollectedClient = new SolidWasteCollectedClient('https://betatcc.herokuapp.com/solid-waste-collected');\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            modalVisible: false,\n            visibleModalExcluir: false,\n            isRecyclable: false,\n            isReutilable: false,\n            solidsWasteCollected: [],\n            typesSolidWaste: [],\n            filters: [],\n            filteredInfo: {},\n            sortedInfo: {}\n        };\n    }\n\n    async componentWillMount() {\n        const responseCollected = await this.solidWasteCollectedClient.getAll();\n        const responseType = await this.typeSolidWasteClient.getAll();\n\n        this.setState({\n            solidsWasteCollected: DataList.toSolidWasteCollectedData(responseCollected.data).reverse(),\n            typesSolidWaste: responseType.data,\n            filters: DataFilters.toTypesSolidWasteFiltersData(responseType.data)\n        });\n    }\n\n    modalExcluir = (idSolidWasteCollected) => {\n        Modal.error({\n            title: 'Deseja realmente excluir esta coleta?',\n            cancelText: 'Cancelar',\n            okCancel: true,\n            okText: 'Excluir',\n            onOk: async () => {\n                const response = await this.solidWasteCollectedClient.remove(idSolidWasteCollected);\n                this.setState({\n                    solidsWasteCollected: this.state.solidsWasteCollected.filter((solidWasteCollected) => solidWasteCollected.key !== response.data._id)\n                })\n            }\n        });\n    }\n\n    showModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n            if (!err) {\n                const solidWasteCollected = {\n                    typeWasted: values.typeWasted,\n                    quantityCollected: values.quantityCollected - 0,\n                    collectionDate: values.collectionDate ? values.collectionDate : null,\n                };\n                const response = await this.solidWasteCollectedClient.save(solidWasteCollected);\n                this.setState({\n                    solidsWasteCollected: [{\n                        key: response.data._id,\n                        typeWasted: response.data.typeWasted.name,\n                        color: response.data.typeWasted.color,\n                        collectionDate: moment(new Date(response.data.collectionDate)).format('DD/MM/YYYY'),\n                        quantityCollected: response.data.quantityCollected\n                    }, ...this.state.solidsWasteCollected],\n                    modalVisible: false,\n                })\n                this.props.form.resetFields();\n            }\n        });\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            modalVisible: false,\n        });\n    }\n\n    handleChangeSelect = (value) => {\n        this.setState({\n            typeSelected: value,\n        });\n    }\n\n    handleChangeDate = (date, dateString) => {\n        this.setState({\n            collectionDate: dateString,\n        })\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 7 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 15 },\n            },\n        };\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            }, {\n                title: 'Data',\n                dataIndex: 'collectionDate',\n                key: 'collectionDate',\n                width: 150,\n                sorter: (a, b) => {\n                    const firstSplit = a.collectionDate.split('/');\n                    const secondSplit = b.collectionDate.split('/');\n\n                    const first = new Date(parseInt(firstSplit[2]), parseInt(firstSplit[1]) - 1, parseInt(firstSplit[0]));\n                    const second = new Date(parseInt(secondSplit[2]), parseInt(secondSplit[1]) - 1, parseInt(secondSplit[0]));\n\n                    return first - second;\n                },\n                sortOrder: this.state.sortedInfo.columnKey === 'collectionDate' && this.state.sortedInfo.order,\n            }, {\n                title: 'Total coletado',\n                dataIndex: 'quantityCollected',\n                key: 'quantityCollected',\n                width: 200,\n                render: (text, record) => (\n                    `${text} Kg`\n                ),\n                sorter: (a, b) => a.quantityCollected - b.quantityCollected,\n                sortOrder: this.state.sortedInfo.columnKey === 'quantityCollected' && this.state.sortedInfo.order,\n            }, {\n                title: 'Tipo',\n                dataIndex: 'typeWasted',\n                key: 'typeWasted',\n                filters: this.state.filters,\n                filteredValue: this.state.filteredInfo.typeWasted || null,\n                onFilter: (value, record) => record.typeWasted.includes(value),\n            }, {\n                title: 'Ação',\n                key: 'acti  on',\n                render: (text, record) => (\n                    <Button type='danger' icon=\"delete\" onClick={this.modalExcluir.bind(this, text.key)}></Button>\n                ),\n            }];\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ marginBottom: \"20px\" }}>\n                    <Col><Button type=\"primary\" shape=\"circle\" icon=\"plus\" size=\"large\" style={{ height: '50px', width: '50px', position: 'fixed', bottom: '50px', right: '10px', zIndex: \"999\" }} onClick={this.showModal}></Button></Col>\n                </Row>\n                <Modal\n                    title=\"Cadastrar Coleta\"\n                    visible={this.state.modalVisible}\n                    okText={\"Cadastrar\"}\n                    cancelText={\"Cancelar\"}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form>\n                        <FormItem {...formItemLayout} label=\"Tipo de Resíduo\">\n                            {getFieldDecorator('typeWasted', {\n                                rules: [{\n                                    required: true, message: 'Por favor selecione o tipo de resíduo coletado',\n                                }],\n                            })(\n                                <Select placeholder=\"Selecione o tipo de resíduo\" onChange={this.handleChangeSelect}>\n                                    {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                </Select>\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Quantidade em Kg\">\n                            {getFieldDecorator('quantityCollected', {\n                                rules: [{\n                                    required: true, message: 'Por favor informe a quantidade coletada',\n                                }],\n                            })(\n                                <InputNumber min={0} style={{width: '100%'}}/>,\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Data\">\n                            {getFieldDecorator('collectionDate', {\n                                rules: [{\n                                    required: false,\n                                }],\n                                initialValue: moment(new Date())\n                            })(\n                                <DatePicker />\n                            )}\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.solidsWasteCollected} scroll={window.innerWidth <= 600 ? { x: 1000 } : undefined} style={{ background: \"white\" }} />\n            </>\n        );\n    }\n}\n\nexport default Form.create()(SolidWasteCollectedPage);","import React, { Component } from 'react';\n\nimport moment from 'moment';\n\nimport { Row, Col, Button, Form, Select, InputNumber, DatePicker, Divider } from 'antd';\n\nimport Board from '../components/board/Board';\n\nimport { ResponsiveBar } from '@nivo/bar';\n\nimport { ResponsiveStream } from '@nivo/stream';\n\nimport { ResponsiveCalendar } from '@nivo/calendar';\n\nimport { ResponsivePie } from '@nivo/pie';\n\nimport DataClient from '../api/DataClient';\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\n\nclass AnalyzeCollectedWastesPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            typesSolidWaste: [],\n            layoutAll: true,\n            datas: [],\n            colors: [],\n            keys: [],\n            pieData: [],\n            totalKg: 0,\n            streamDatas: [],\n            streamKeys: [],\n            streamColors: [],\n            legend: [],\n            timeLine: []\n        }\n    }\n\n    async componentWillMount() {\n\n        const responseType = await this.typeSolidWasteClient.getAll();\n\n        this.setState({\n            typesSolidWaste: responseType.data,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                const {\n                    type,\n                    endDate,\n                    startDate,\n                } = values;\n\n                if (type === '') {\n                    this.setState({\n                        layoutAll: true\n                    })\n                } else {\n                    this.setState({\n                        layoutAll: false\n                    })\n                }\n\n                const start = new Date(startDate);\n                start.setHours(0)\n                start.setMinutes(0);\n                start.setSeconds(0);\n\n                const end = new Date(endDate);\n                end.setHours(23)\n                end.setMinutes(59);\n                end.setSeconds(59);\n\n                if (endDate && startDate) {\n                    if (type !== '') {\n\n                        const response = await this.dataClient.getWastesByPeriodFull(start, end, type);\n\n                        const responseFiltered = response.data[0].data.reduce((acc, current) => acc + current.quantityCollected, 0);\n\n                        const totalKg = responseFiltered;\n\n                        const x = response.data[0].data.map((value) => {\n                            let obj = {};\n                            obj[response.data[0].name] = value.quantityCollected;\n                            return obj;\n                        });\n\n\n\n                        const rs = {};\n\n                        response.data[0].data.forEach(value => {\n                            value.collectionDate = new Date(value.collectionDate);\n                            value.collectionDate.setHours(0);\n                            value.collectionDate.setMinutes(0);\n                            value.collectionDate.setSeconds(0);\n\n                            if (!rs[value.collectionDate]) {\n                                rs[value.collectionDate] = {\n                                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                    value: value.quantityCollected\n                                }\n                            } else {\n                                rs[value.collectionDate].value += value.quantityCollected;\n                            }\n                        });\n\n                        const rs2 = Object.keys(rs).map(function (key) {\n                            return rs[key];\n                        });\n\n                        const streamKeys = []\n                        streamKeys.push(response.data[0].name)\n                        const streamColors = []\n                        streamColors.push(response.data[0].color)\n                        this.setState({\n                            streamDatas: x,\n                            streamKeys: streamKeys,\n                            streamColors: streamColors,\n                            totalKg: totalKg,\n                            timeLine: rs2\n                        });\n                    } else {\n\n                        const response = await this.dataClient.getWastesByPeriod(start, end);\n\n                        const responseFiltered = response.data.filter((value) => value.data > 0);\n\n                        const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n                        const barDatas = responseFiltered.map(value => {\n                            const obj = {};\n                            obj[value.name] = value.data;\n                            obj['residuos'] = value.name;\n                            return obj;\n                        });\n                        const barKeys = responseFiltered.map(value => value.name);\n                        const barColors = responseFiltered.map(value => value.color);\n\n                        const pieData = responseFiltered.map(value => {\n                            const obj = {};\n                            obj.id = value.name;\n                            obj.label = value.name;\n                            obj.value = parseFloat(((value.data / totalKg) * 100).toFixed(2));\n                            return obj;\n                        });\n\n                        const res = await this.dataClient.getWastesByPeriodFull(start, end);\n                        let rs2 = [];\n                        if (res) {\n                            const responseTimeLine = res.data.reduce((acc, current) => [...acc, ...current.data], []).map((value) => {\n                                value.collectionDate = new Date(value.collectionDate);\n                                value.collectionDate.setHours(0);\n                                value.collectionDate.setMinutes(0);\n                                value.collectionDate.setSeconds(0);\n                                return value;\n                            });\n\n                            const rs = {};\n\n                            responseTimeLine.forEach(value => {\n                                if (!rs[value.collectionDate]) {\n                                    rs[value.collectionDate] = {\n                                        day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                        value: value.quantityCollected\n                                    }\n                                } else {\n                                    rs[value.collectionDate].value += value.quantityCollected;\n                                }\n                            });\n\n                            rs2 = Object.keys(rs).map(function (key) {\n                                return rs[key];\n                            });\n                        }\n\n                        this.setState({\n                            datas: barDatas || [],\n                            colors: barColors,\n                            keys: barKeys,\n                            pieData: pieData,\n                            totalKg: totalKg,\n                            timeLine: rs2\n                        });\n                    }\n                } else {\n\n                    if (type !== '') {\n                        const response = await this.dataClient.getAllWasteByPeriodFull(values.period, values.interval, type);\n\n                        const x = response.data[0].data.map((value) => {\n                            let obj = {};\n                            obj[response.data[0].name] = value.quantityCollected;\n                            return obj;\n                        });\n\n                        const responseFiltered = response.data[0].data.reduce((acc, current) => acc + current.quantityCollected, 0);\n\n                        const rs = {};\n\n                        response.data[0].data.forEach(value => {\n                            value.collectionDate = new Date(value.collectionDate);\n                            value.collectionDate.setHours(0);\n                            value.collectionDate.setMinutes(0);\n                            value.collectionDate.setSeconds(0);\n\n                            if (!rs[value.collectionDate]) {\n                                rs[value.collectionDate] = {\n                                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                    value: value.quantityCollected\n                                }\n                            } else {\n                                rs[value.collectionDate].value += value.quantityCollected;\n                            }\n                        });\n\n                        const rs2 = Object.keys(rs).map(function (key) {\n                            return rs[key];\n                        });\n\n                        const streamKeys = []\n                        streamKeys.push(response.data[0].name)\n                        const streamColors = []\n                        streamColors.push(response.data[0].color)\n                        this.setState({\n                            streamDatas: x,\n                            streamKeys: streamKeys,\n                            streamColors: streamColors,\n                            totalKg: responseFiltered,\n                            timeLine: rs2,\n                        });\n                    } else {\n                        const response = await this.dataClient.getAllWasteByPeriod(values.period, values.interval);\n                        const responseFiltered = response.data.filter((value) => value.data > 0);\n\n                        const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n                        const barDatas = responseFiltered.map(value => {\n                            const obj = {};\n                            obj[value.name] = value.data;\n                            obj['residuos'] = value.name;\n                            return obj;\n                        });\n                        const barKeys = responseFiltered.map(value => value.name);\n                        const barColors = responseFiltered.map(value => value.color);\n\n                        const pieData = responseFiltered.map(value => {\n                            const obj = {};\n                            obj.id = value.name;\n                            obj.label = value.name;\n                            obj.value = parseFloat(((value.data / totalKg) * 100).toFixed(2));\n                            return obj;\n                        });\n\n                        const responseTimeLine = (await this.dataClient.getAllWasteByPeriodFull(values.period, values.interval)).data.reduce((acc, current) => [...acc, ...current.data], []).map((value) => {\n                            value.collectionDate = new Date(value.collectionDate);\n                            value.collectionDate.setHours(0);\n                            value.collectionDate.setMinutes(0);\n                            value.collectionDate.setSeconds(0);\n                            return value;\n                        });\n\n                        const rs = {};\n\n                        responseTimeLine.forEach(value => {\n                            if (!rs[value.collectionDate]) {\n                                rs[value.collectionDate] = {\n                                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                    value: value.quantityCollected\n                                }\n                            } else {\n                                rs[value.collectionDate].value += value.quantityCollected;\n                            }\n                        });\n\n                        const rs2 = Object.keys(rs).map(function (key) {\n                            return rs[key];\n                        });\n\n                        this.setState({\n                            datas: barDatas || [],\n                            colors: barColors,\n                            keys: barKeys,\n                            pieData: pieData,\n                            totalKg: totalKg,\n                            timeLine: rs2\n                        });\n                    }\n\n                }\n            }\n        });\n    }\n\n    render() {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n        };\n\n\n        return (\n\n            <>\n                {\n                    !this.state.layoutAll &&\n                    <>\n                        <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n\n                                <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '0px' }}>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('type', {\n                                                    rules: [{ required: false }],\n                                                    initialValue: ''\n                                                })(\n                                                    <Select style={{ width: '100%' }}>\n                                                        <Option value=\"\">Todos</Option>\n                                                        {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                                    </Select>\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 14 }} style={{ padding: '0px' }}>\n                                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('interval', {\n                                                            rules: [{ required: false, message: 'O intervalo é obrigatório!' }]\n                                                        })(\n                                                            <InputNumber min={1} placeholder=\"intervalo\" style={{ width: '100%' }} />,\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('period', {\n                                                            rules: [{ required: true, message: 'O periodo é obrigatorio!' }],\n                                                            initialValue: 'WEEK'\n                                                        })(\n                                                            <Select style={{ width: '100%' }}>\n                                                                <Option value=\"DAY\">Dia</Option>\n                                                                <Option value=\"WEEK\">Semana</Option>\n                                                                <Option value=\"MONTH\">Mês</Option>\n                                                                <Option value=\"YEAR\">Ano</Option>\n                                                            </Select>\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 1 }} style={{ padding: '10px 0px' }}></Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('startDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }]\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"Inicio\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('endDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }],\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"fim\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        <Button\n                                                            type=\"primary\"\n                                                            htmlType=\"submit\"\n                                                            style={{ width: '100%' }}\n                                                        >\n                                                            Consultar\n                                                 </Button>\n                                                    </FormItem>\n                                                </Col>\n                                            </Row>\n\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={24}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board height={window.innerHeight * 0.20}>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Peso total coletado</h3></Divider>\n                                    <div style={{\n                                        fontSize: '2em',\n                                        height: '25%',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center'\n                                    }}>{this.state.totalKg.toFixed(2)} Kg</div>\n                                </Board>\n                            </Col>\n\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board height={window.innerHeight * 0.5}>\n                                    <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em Kg</h3></Divider>\n\n                                    <div style={{ height: '80%' }}>\n                                        <ResponsiveStream\n                                            margin={{\n                                                top: 60,\n                                                right: 80,\n                                                bottom: 60,\n                                                left: 80\n                                            }}\n                                            keys={this.state.streamKeys}\n                                            data={this.state.streamDatas}\n                                            offsetType=\"diverging\"\n                                            colors={this.state.streamColors}\n                                            animate={true}\n                                            dotSize={8}\n                                            dotBorderWidth={2}\n                                            dotBorderColor=\"inherit:brighter(0.7)\"\n                                        />\n                                    </div>\n                                </Board>\n                            </Col>\n\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Resíduos coletados durante o ano</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.45}px` }}>\n                                        <ResponsiveCalendar\n                                            margin={{\n                                                top: 50,\n                                                right: 10,\n                                                bottom: 10,\n                                                left: 50\n                                            }}\n                                            from=\"2018-01-01T03:00:00.000Z\"\n                                            to=\"2018-12-31T03:00:00.000Z\"\n                                            data={this.state.timeLine}\n\n                                            emptyColor=\"#eeeeee\"\n                                            yearSpacing={40}\n                                            monthBorderColor=\"#ffffff\"\n                                            monthLegendOffset={10}\n                                            dayBorderWidth={2}\n                                            dayBorderColor=\"#ffffff\"\n                                            legends={[\n                                                {\n                                                    \"anchor\": \"bottom-right\",\n                                                    \"direction\": \"row\",\n                                                    \"translateY\": -40,\n                                                    \"itemCount\": 4,\n                                                    \"itemWidth\": 34,\n                                                    \"itemHeight\": 36,\n                                                    \"itemDirection\": \"top-to-bottom\"\n                                                }\n                                            ]}\n                                        />\n                                    </div>\n                                </Board>\n                            </Col>\n                        </Row>\n                    </>\n                }\n\n                {\n                    this.state.layoutAll &&\n                    <>\n                        <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n\n                                <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '0px' }}>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('type', {\n                                                    rules: [{ required: false }],\n                                                    initialValue: ''\n                                                })(\n                                                    <Select style={{ width: '100%' }}>\n                                                        <Option value=\"\">Todos</Option>\n                                                        {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                                    </Select>\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 14 }} style={{ padding: '0px' }}>\n                                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('interval', {\n                                                            rules: [{ required: false, message: 'O intervalo é obrigatório!' }]\n                                                        })(\n                                                            <InputNumber min={1} placeholder=\"intervalo\" style={{ width: '100%' }} />,\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('period', {\n                                                            rules: [{ required: true, message: 'O periodo é obrigatorio!' }],\n                                                            initialValue: 'WEEK'\n                                                        })(\n                                                            <Select style={{ width: '100%' }}>\n                                                                <Option value=\"DAY\">Dia</Option>\n                                                                <Option value=\"WEEK\">Semana</Option>\n                                                                <Option value=\"MONTH\">Mês</Option>\n                                                                <Option value=\"YEAR\">Ano</Option>\n                                                            </Select>\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 1 }} style={{ padding: '10px 0px' }}></Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('startDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }]\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"Inicio\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('endDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }],\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"fim\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        <Button\n                                                            type=\"primary\"\n                                                            htmlType=\"submit\"\n                                                            style={{ width: '100%' }}\n                                                        >\n                                                            Consultar\n                                                 </Button>\n                                                    </FormItem>\n                                                </Col>\n                                            </Row>\n\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={24}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board height={window.innerHeight * 0.20}>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Peso total coletado</h3></Divider>\n                                    <div style={{\n                                        fontSize: '2em',\n                                        height: '25%',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center'\n                                    }}>{this.state.totalKg.toFixed(2)} Kg</div>\n                                </Board>\n                            </Col>\n                            <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                                <Board>\n                                    <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em Kg</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.55}px` }}>\n                                        <ResponsiveBar\n                                            margin={{\n                                                top: 12,\n                                                right: 50,\n                                                bottom: 12,\n                                                left: 50\n                                            }}\n                                            axisBottom={null}\n                                            data={this.state.datas}\n                                            indexBy=\"residuos\"\n                                            keys={this.state.keys}\n                                            colors={this.state.colors}\n                                            padding={0.2}\n                                            labelTextColor='#ffffff'\n                                            labelSkipWidth={16}\n                                            labelSkipHeight={16}\n\n                                        />\n                                    </div>\n                                    <div style={{marginTop: '20px'}}>\n                                        {this.state.legend.map(value => <div style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{ marginLeft: '5px' }}>{value.name}</span></div>)}\n                                    </div>\n                                </Board>\n                            </Col>\n\n                            <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                                <Board >\n                                    <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em percentual</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.55}px` }}>\n                                        <ResponsivePie\n                                            margin={{\n                                                top: 10,\n                                                right: 50,\n                                                bottom: 30,\n                                                left: 50\n                                            }}\n                                            data={this.state.pieData}\n                                            animate={true}\n                                            innerRadius={0.6}\n                                            padAngle={1}\n                                            cornerRadius={3}\n                                            colors={this.state.colors}\n                                            radialLabelsLinkColor=\"inherit\"\n                                            radialLabelsLinkStrokeWidth={3}\n                                            radialLabelsTextColor=\"inherit:darker(1.2)\"\n                                        />\n                                    </div>\n                                    <div style={{marginTop: '20px'}}>\n                                        {this.state.legend.map(value => <div style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{  marginLeft: '5px' }}>{value.name}</span></div>)}\n                                    </div>\n                                </Board>\n                            </Col>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Resíduos coletados durante o ano</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.45}px` }}>\n                                        <ResponsiveCalendar\n                                            margin={{\n                                                top: 50,\n                                                right: 10,\n                                                bottom: 10,\n                                                left: 50\n                                            }}\n                                            from=\"2018-01-01T03:00:00.000Z\"\n                                            to=\"2018-12-31T03:00:00.000Z\"\n                                            data={this.state.timeLine}\n\n                                            emptyColor=\"#eeeeee\"\n                                            yearSpacing={40}\n                                            monthBorderColor=\"#ffffff\"\n                                            monthLegendOffset={10}\n                                            dayBorderWidth={2}\n                                            dayBorderColor=\"#ffffff\"\n                                            legends={[\n                                                {\n                                                    \"anchor\": \"bottom-right\",\n                                                    \"direction\": \"row\",\n                                                    \"translateY\": -40,\n                                                    \"itemCount\": 4,\n                                                    \"itemWidth\": 34,\n                                                    \"itemHeight\": 36,\n                                                    \"itemDirection\": \"top-to-bottom\"\n                                                }\n                                            ]}\n                                        />\n                                    </div>\n                                </Board>\n                            </Col>\n                        </Row>\n                    </>\n                }\n            </>\n        );\n    }\n}\n\nexport default Form.create()(AnalyzeCollectedWastesPage);","const toSolidWasteCollectedData = (value) =>  {\n    const result = [];\n    result.push(value.typeWasted);\n    result.push(value.quantityCollected);\n    result.push(value.collectionDate);\n    return result;\n};\n\nexport default {\n    toSolidWasteCollectedData,\n}","export default (data) => ({\n    content: [\n        {\n            text: `Coletas realizadas entre ${data.startDate} - ${data.endDate}\\n\\n`,\n            style: 'header'\n        },\n        {\n            text: `Total coletado: ${data.total} Kg`,\n            fontSize: 14, bold: true\n        },\n        {\n\t\t\tstyle: 'table',\n\t\t\ttable: {\n                widths: [100, '*', 200],\n\t\t\t\tbody: [\n\t\t\t\t\t['Data', 'Total coletado', 'Tipo de resíduo coletado'],\n\t\t\t\t\t...data.datas\n\t\t\t\t]\n\t\t\t}\n\t\t}\n    ],\n\n    styles: {\n        header: {\n            fontSize: 18,\n            bold: true\n        },\n        table: {\n\t\t\tmargin: [0, 5, 0, 15]\n\t\t},\n    }\n});","import React, { Component } from 'react';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport vfsFonts from 'pdfmake/build/vfs_fonts';\n\nimport { Table, Row, Col, Button, Form, Select, DatePicker } from 'antd';\n\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataClient from '../api/DataClient';\n\nimport DataList from '../helpers/DataList';\n\nimport DataDoc from '../helpers/DataDoc';\n\nimport CollectionReport from '../docs/templates/CollectionReport';\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\nclass ReportPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n        this.state = {\n            typesSolidWaste: [],\n            dataTypesSolidWaste: [],\n            dataTables: [],\n            total: 0,\n            dataDoc: {},\n            filteredInfo: {},\n            sortedInfo: {}\n        };\n    }\n\n    async componentWillMount() {\n        const response = await this.typeSolidWasteClient.getAll();\n        this.setState({\n            typesSolidWaste: response.data,\n            dataTypesSolidWaste: response ? DataList.toTypesSolidWasteData(response.data) : [],\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                const {\n                    type,\n                    endDate,\n                    startDate,\n                } = values;\n\n                if (endDate && startDate) {\n                    const start = new Date(startDate);\n                    start.setHours(0)\n                    start.setMinutes(0);\n                    start.setSeconds(0);\n\n                    const end = new Date(endDate);\n                    end.setHours(23)\n                    end.setMinutes(59);\n                    end.setSeconds(59);\n\n                    const response = await this.dataClient.getWastesByPeriodFull(start, end, type);\n\n                    const result = response.data.map((value) => DataList.toSolidWasteCollectedData(value.data)).reduce((acc, current) => [...acc, ...current]);\n\n                    const result2 = result.map((value) => {\n                        return DataDoc.toSolidWasteCollectedData(value);\n                    });\n\n                    const total = result2.reduce((acc, current) => acc + current[1], 0);\n\n                    this.setState({\n                        dataTables: result,\n                        dataDoc: {\n                            datas: result2,\n                            total: total,\n                            startDate: startDate.format('DD/MM/YYYY'),\n                            endDate: endDate.format('DD/MM/YYYY'),\n                        },\n                        total: total,\n                    });\n                }\n            }\n        });\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            }, {\n            title: 'Data',\n            dataIndex: 'collectionDate',\n            key: 'collectionDate',\n            width: 150,\n            sorter: (a, b) => {\n                const firstSplit = a.collectionDate.split('/');\n                const secondSplit = b.collectionDate.split('/');\n\n                const first = new Date(parseInt(firstSplit[2]), parseInt(firstSplit[1]) - 1, parseInt(firstSplit[0]));\n                const second = new Date(parseInt(secondSplit[2]), parseInt(secondSplit[1]) - 1, parseInt(secondSplit[0]));\n\n                return first - second;\n            },\n            sortOrder: this.state.sortedInfo.columnKey === 'collectionDate' && this.state.sortedInfo.order,\n        }, {\n            title: 'Total coletado',\n            dataIndex: 'quantityCollected',\n            key: 'quantityCollected',\n            width: 200,\n            render: (text, record) => (\n                `${text} Kg`\n            ),\n            sorter: (a, b) => a.quantityCollected - b.quantityCollected,\n            sortOrder: this.state.sortedInfo.columnKey === 'quantityCollected' && this.state.sortedInfo.order,\n        }, {\n            title: 'Tipo',\n            dataIndex: 'typeWasted',\n            key: 'typeWasted'\n        }];\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n        };\n\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                    <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '0px' }}>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n\n                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                        {getFieldDecorator('type', {\n                                            rules: [{ required: false }],\n                                            initialValue: ''\n                                        })(\n                                            <Select style={{ width: '100%' }}>\n                                                <Option value=\"\">Todos</Option>\n                                                {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                            </Select>\n                                        )}\n                                    </FormItem>\n                                </Col>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 10 }} style={{ padding: '0px' }}>\n                                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 9 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('startDate', {\n                                                    rules: [{\n                                                        required: false,\n                                                    }]\n                                                })(\n                                                    <DatePicker style={{ width: '100%' }} placeholder=\"Inicio\" />\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 9 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('endDate', {\n                                                    rules: [{\n                                                        required: false,\n                                                    }],\n                                                })(\n                                                    <DatePicker style={{ width: '100%' }} placeholder=\"fim\" />\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 2 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                <Button\n                                                    type=\"primary\"\n                                                    htmlType=\"submit\"\n                                                    style={{ width: '100%' }}\n                                                    icon=\"search\"\n                                                >\n                                                </Button>\n                                            </FormItem>\n                                        </Col>\n                                    </Row>\n\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n                {this.state.dataTables.length > 0 &&\n                    <div>\n                        <div style={{\n                            padding: '10px',\n                            background: 'white',\n                            margin: '16px 0px'\n                        }}>\n                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                    <h3 style={{ margin: '0px' }}>Total Coletado</h3>\n                                </Col>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 3 }} style={{ padding: '0px' }}>\n                                    <Button ype=\"primary\"\n                                        htmlType=\"button\"\n                                        style={{ width: '100%' }}\n                                        icon=\"file-pdf\"\n                                        onClick={() => {\n                                            const { vfs } = vfsFonts.pdfMake;\n                                            pdfMake.vfs = vfs;\n                                            pdfMake.createPdf(CollectionReport(this.state.dataDoc)).download('report.pdf')\n                                        }}>PDF</Button>\n                                </Col>\n                            </Row>\n                        </div>\n                        <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.dataTables} scroll={window.innerWidth <= 600 ? { x: 700 } : undefined} style={{ background: \"white\", marginBottom: '20px' }} />\n                    </div>\n                }\n\n            </>\n        );\n    }\n}\n\nexport default Form.create()(ReportPage);","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport { Icon, Menu } from 'antd';\n\nimport BasePage from './pages/BasePage';\nimport GeneralPage from './pages/GeneralPage';\n// import UsersPage from './pages/UsersPage';\nimport TypesSolidWastePage from './pages/TypesSolidWastePage';\nimport SolidWasteCollectedPage from './pages/SolidWasteCollectedPage';\nimport AnalyzeCollectedWastesPage from './pages/AnalyzeCollectedWastesPage';\nimport ReportPage from './pages/ReportPage';\n\n\nexport default class Routes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            titlePage: 'Visão Geral'\n        }\n    }\n\n    render = () => (\n        <Router>\n            <BasePage\n                menu={\n                    <Menu mode=\"inline\" style={{ zIndex: '999' }}>\n                        <Menu.Item key=\"1\" onClick={() => {this.setState({titlePage: 'Visão Geral'})}}>\n                            <Icon type=\"home\" />\n                            <Link to=\"/\" className=\"nav-text\">Visão Geral</Link>\n                        </Menu.Item>\n                        {/* <Menu.Item key=\"2\" onClick={() => {this.setState({titlePage: 'Usuários'})}}>\n                            <Icon type=\"user\" />\n                            <Link to=\"/usuarios\" className=\"nav-text\">Usuários</Link>\n                        </Menu.Item> */}\n                        <Menu.Item key=\"3\" onClick={() => {this.setState({titlePage: 'Tipos de Resíduos Sólidos'})}}>\n                            <Icon type=\"tag\" />\n                            <Link to=\"/tipos-residuos-solidos\" className=\"nav-text\">Tipos de Resíduos Sólidos</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"4\" onClick={() => {this.setState({titlePage: 'Coletas'})}}>\n                            <Icon type=\"delete\" />\n                            <Link to=\"/coletas\" className=\"nav-text\">Coletas</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"5\" onClick={() => {this.setState({titlePage: 'Análises'})}}>\n                            <Icon type=\"line-chart\" />\n                            <Link to=\"/analises\" className=\"nav-text\">Análises</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"6\" onClick={() => {this.setState({titlePage: 'Relatórios'})}}>\n                            <Icon type=\"file-text\" />\n                            <Link to=\"/relatorios\" className=\"nav-text\">Relatórios</Link>\n                        </Menu.Item>\n                    </Menu>\n                }\n\n                content={\n                    <>\n                        <Route exact path=\"/\" component={GeneralPage} />\n                        {/* <Route exact path=\"/usuarios\" component={UsersPage} /> */}\n                        <Route exact path=\"/tipos-residuos-solidos\" component={TypesSolidWastePage} />\n                        <Route exact path=\"/coletas\" component={SolidWasteCollectedPage} />\n                        <Route exact path=\"/analises\" component={AnalyzeCollectedWastesPage} />\n                        <Route exact path=\"/relatorios\" component={ReportPage} />\n                        {/* <Route exact path=\"/analises/s\" component={AnalyzeCollectedWastesPage} /> */}\n                    </>\n                }\n\n                titlePage={this.state.titlePage}\n            />\n        </Router>\n    );\n}","import React, { Component } from 'react';\nimport Routes from './Routes';\n\nimport 'antd/dist/antd.css';\n\nimport './theme/index.css';\nimport './App.css';\n\nexport default class App extends Component {\n    render = () => (\n        <Routes />\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}