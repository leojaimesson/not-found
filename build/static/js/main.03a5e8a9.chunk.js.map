{"version":3,"sources":["services/auth.js","pages/BasePage.js","components/board/Board.js","api/DataClient.js","pages/GeneralPage.js","api/UserClient.js","helpers/DataList.js","pages/UsersPage.js","api/TypeSolidWasteClient.js","pages/TypesSolidWastePage.js","helpers/DataFilters.js","pages/SolidWasteCollectedPage.js","pages/AnalyzeCollectedWastesPage.js","helpers/DataDoc.js","docs/templates/CollectionReport.js","pages/ReportPage.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["TOKEN_KEY","getToken","localStorage","getItem","login","token","setItem","Header","Layout","Content","Sider","Footer","BasePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDrawer","setState","visible","onClose","render","react_default","a","createElement","layout","style","height","overflow","drawer","title","fontWeight","fontSize","color","placement","state","padding","menu","position","bottom","width","margin","background","border","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","type","className","row","justify","align","col","icon","onClick","titlePage","boxSizing","content","textAlign","React","PureComponent","Board","children","Component","SolidWasteCollectedClient","url","request","axios","create","baseURL","timeout","headers","Content-Type","interceptors","use","_ref","asyncToGenerator","regenerator_default","mark","_callee","config","wrap","_context","prev","next","Authorization","concat","abrupt","stop","_x","apply","arguments","period","interval","get","response","startDate","endDate","FormItem","Form","Item","Option","Select","GeneralPage","handleSubmit","e","preventDefault","form","validateFields","err","values","responseFiltered","totalKg","barDatas","barKeys","barColors","legend","pieData","dataClient","getAllWasteByPeriod","sent","data","filter","value","reduce","acc","current","map","obj","name","parseFloat","toFixed","id","label","datas","colors","keys","_x2","DataClient","timeLine","console","log","start","Date","end","getWastesByPeriodFull","toConsumableArray","collectionDate","setHours","setMinutes","setSeconds","responseTimeLine","rs","forEach","quantityCollected","day","moment","format","rs2","key","getFieldDecorator","heightBoard","window","innerHeight","Fragment","gutter","xs","span","lg","es_form","onSubmit","float","rules","required","message","initialValue","input_number","min","es_select","es_button","htmlType","Board_Board","divider","orientation","bar","top","right","left","axisBottom","indexBy","labelTextColor","labelSkipWidth","labelSkipHeight","labelFormat","v","animate","motionStiffness","motionDamping","tooltip","display","alignItems","marginRight","marginLeft","pie","innerRadius","padAngle","cornerRadius","radialLabelsLinkColor","radialLabelsLinkStrokeWidth","radialLabelsTextColor","slicesLabelsTextColor","sliceLabel","calendar","from","to","emptyColor","yearSpacing","monthBorderColor","monthLegendOffset","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemDirection","UserClient","user","post","JSON","stringify","delete","toTags","typeSolidWaste","tags","recyclable","push","reutilable","DataList","toUsersListData","users","_id","firstName","email","toTypesSolidWasteData","typesSolidWaste","description","toSolidWasteCollectedData","solidWasteCollected","typeWasted","UsersPage","showModal","modalVisible","handleOk","validateFieldsAndScroll","lastName","password","userClient","save","resetFields","handleCancel","handleConfirmBlur","target","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","formItemLayout","labelCol","sm","wrapperCol","columns","dataIndex","text","record","modalExcluir","bind","assertThisInitialized","marginBottom","shape","size","zIndex","modal","okText","onOk","onCancel","UsersPage_FormItem","assign","input","validator","onBlur","table","bordered","dataSource","scroll","innerWidth","x","undefined","visibleModalExcluir","getAll","idUser","_this2","Modal","error","cancelText","okCancel","_onOk","_callee3","_context3","remove","TypeSolidWasteClient","TypesSolidWastePage","toUpperCase","isRecyclable","isReutilable","typeSolidWasteClient","handleChangeCheckRecyclable","checked","handleChangeCheckReutilable","handleChangeTable","pagination","filters","sorter","filteredInfo","tag","es_tag","t","filteredValue","onFilter","includes","TypesSolidWastePage_FormItem","onChange","offset","es_checkbox","reverse","idTypeSolidWaste","typeSolidWast","DataFilters","types","SolidWasteCollectedPage","idSolidWasteCollected","solidWasteCollectedClient","solidsWasteCollected","_callee2","_context2","handleChangeSelect","typeSelected","handleChangeDate","date","dateString","sortedInfo","b","firstSplit","split","secondSplit","parseInt","sortOrder","columnKey","order","SolidWasteCollectedPage_FormItem","placeholder","SolidWasteCollectedPage_Option","date_picker","responseCollected","responseType","AnalyzeCollectedWastesPage","dates","streamKeys","streamColors","_response","_responseFiltered","_totalKg","res","_rs","_rs2","_response2","_x3","_dates","_responseFiltered2","_rs3","_rs4","_streamKeys","_streamColors","_response3","_responseFiltered3","_totalKg2","_legend","_barDatas","_barKeys","_barColors","_pieData","_responseTimeLine","_rs5","_rs6","layoutAll","streamDatas","getWastesByPeriod","getAllWasteByPeriodFull","t0","t1","t2","AnalyzeCollectedWastesPage_FormItem","AnalyzeCollectedWastesPage_Option","justifyContent","stream","offsetType","dotSize","dotBorderWidth","dotBorderColor","tooltipFormat","index","marginTop","DataDoc","result","CollectionReport","total","bold","widths","body","styles","header","ReportPage","result2","dataTables","dataDoc","ReportPage_FormItem","ReportPage_Option","length","ype","vfs","vfsFonts","pdfMake","createPdf","download","dataTypesSolidWaste","Routes","handleSignIn","_ref2","_this$state","history","BrowserRouter","Switch","BasePage_BasePage","mode","Link","Route","exact","path","component","withRouter","minWidth","borderRadius","boxShadow","opacity","fontFamily","App","Routes_Routes","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","App_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.03a5e8a9.chunk.js","sourcesContent":["export const TOKEN_KEY = \"@solidwm-token\";\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const login = token => {\n  localStorage.setItem(TOKEN_KEY, token);\n};\nexport const logout = () => {\n  localStorage.removeItem(TOKEN_KEY);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Layout, Icon, Drawer, Row, Col } from 'antd';\n\nconst { Header, Content, Sider, Footer } = Layout;\n\nexport default class BasePage extends React.PureComponent {\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            placement: 'left',\n        };\n    }\n\n    render = () => (\n        <Layout style={{ height: '100%', overflow: 'auto' }}>\n            <Drawer\n                title={<span style={{\n                    fontWeight: 'bolder',\n                    fontSize: '1.5em',\n                    color: '#618833'\n                }}>SolidWM</span>}\n                placement={this.state.placement}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                style={{ padding: \"24px 0px\" }}\n            >\n                {this.props.menu}\n                <button style={{\n                    position: 'absolute',\n                    bottom: '10px',\n                    width: 'calc(100% - 44px)',\n                    padding: '8px',\n                    margin: '0px 22px',\n                    background: 'none',\n                    border: '1px solid #333'\n                }}>Sair</button>\n            </Drawer>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                width={250}\n                onBreakpoint={(broken) => { }}\n                onCollapse={(collapsed, type) => { }}\n                style={{ background: '#fff' }}\n            >\n                <div className=\"logo\">SolidWM</div>\n                {this.props.menu}\n                <button style={{\n                    position: 'absolute',\n                    bottom: '10px',\n                    width: 'calc(100% - 44px)',\n                    padding: '8px',\n                    margin: '0px 22px',\n                    background: 'none',\n                    border: '1px solid #333'\n                }}>Sair</button>\n            </Sider>\n            <Layout>\n                <Header style={{ background: '#8bc34a', padding: \"0px 14px\" }}>\n                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ height: '100%' }}>\n                        <Col className=\"hide\"><Icon className=\"trigger\" type=\"menu-fold\" onClick={this.showDrawer} /></Col>\n                        <Col><h2 style={{margin: '0px'}}>{this.props.titlePage}</h2></Col>\n                        <Col><Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ height: '100%' }}>\n                            {/* <span style={{ margin: '0px 2px 0px 8px' }}>Sair</span> */}\n                        </Row>\n                        </Col>\n                    </Row>\n                </Header>\n                <Content style={{ padding: '20px 14px 45px 14px', boxSizing: 'border-box', height: '100%', overflow: 'auto' }}>\n                    {this.props.content}\n                </Content>\n                <Footer style={{ textAlign: 'center', bottom: '0px', width: '100%', background: '#618833', padding: '10px ' }}>\n                    SolidWM ©2018 Created by Leo Jaimesson\n                </Footer>\n            </Layout>\n        </Layout>\n    );\n}\n\nBasePage.propTypes = {\n    menu: PropTypes.node,\n    content: PropTypes.node\n}","import React, { Component } from 'react';\n\nimport './Board.css';\n\nexport default class Board extends Component {\n\n    render() {\n        return (\n            <div className=\"board\" style={{height: this.props.height, width: this.props.width }}>\n                {this.props.children}\n            </div>\n        );\n    }\n}","import axios from 'axios';\nimport { getToken } from \"../services/auth\";\n\nexport default class SolidWasteCollectedClient {\n\n    constructor(url) {\n        this.url = url;\n        this.request = axios.create({\n            baseURL: url,\n            timeout: 30000,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        this.request.interceptors.request.use(async config => {\n            const token = getToken();\n            if (token) {\n                config.headers.Authorization = `Bearer ${token}`;\n            }\n            return config;\n        });\n    }\n\n    async getAllWasteByPeriod(period, interval, type) {\n        const response = await this.request.get(`/all-wastes?period=${period}&interval=${interval}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getAllWasteByPeriodFull(period, interval, type) {\n        const response = await this.request.get(`/all-wastes-full?period=${period}&interval=${interval}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getWastesByPeriod(startDate, endDate, type) {\n        const response = await this.request.get(`/roda?startDate=${startDate}&endDate=${endDate}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getWastesByPeriodFull(startDate, endDate, type) {\n        const response = await this.request.get(`/roda-full?startDate=${startDate}&endDate=${endDate}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n\n    async getWasteByPeriod(period, interval, type) {\n        const response = await this.request.get(`/wastes?period=${period}&interval=${interval}&idTypeSolidWaste=${type || ''}`);\n        return response;\n    }\n}","import React from 'react';\n\nimport { Row, Col, Button, Form, Select, InputNumber, Divider } from 'antd';\n\nimport moment from 'moment';\n\nimport Board from '../components/board/Board';\n\nimport { ResponsiveBar } from '@nivo/bar';\n\nimport { ResponsivePie } from '@nivo/pie';\n\nimport { ResponsiveCalendar } from '@nivo/calendar';\n\nimport DataClient from '../api/DataClient';\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\n\n\nclass GeneralPage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n        this.state = {\n            datas: [],\n            colors: [],\n            keys: [],\n            pieData: [],\n            totalKg: 0,\n            timeLine: [],\n            legend: [],\n        }\n    }\n\n    async componentWillMount() {\n        const response = await this.dataClient.getAllWasteByPeriod('WEEK', 1);\n\n        console.log(response);\n\n        const responseFiltered = response.data.filter((value) => value.data > 0);\n\n        const start = new Date(2018, 0, 1, 0, 0, 0);\n        const end = new Date(2018, 11, 31, 11, 59, 59);\n\n        const responseTimeLine = (await this.dataClient.getWastesByPeriodFull(start, end)).data.reduce((acc, current) => [...acc, ...current.data], []).map((value) => {\n            value.collectionDate = new Date(value.collectionDate);\n            value.collectionDate.setHours(0);\n            value.collectionDate.setMinutes(0);\n            value.collectionDate.setSeconds(0);\n            return value;\n        });\n\n        const rs = {};\n\n        responseTimeLine.forEach(value => {\n            if (!rs[value.collectionDate]) {\n                rs[value.collectionDate] = {\n                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                    value: value.quantityCollected\n                }\n            } else {\n                rs[value.collectionDate].value += value.quantityCollected;\n            }\n        });\n\n        const rs2 = Object.keys(rs).map(function (key) {\n            return rs[key];\n        });\n\n        const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n        const barDatas = responseFiltered.map(value => {\n            const obj = {};\n            obj[value.name] = parseFloat(value.data.toFixed(2));\n            obj['residuos'] = value.name;\n            return obj;\n        });\n        const barKeys = responseFiltered.map(value => value.name);\n        const barColors = responseFiltered.map(value => value.color);\n\n        const pieData = responseFiltered.map(value => {\n            const obj = {};\n            obj.id = value.name;\n            obj.label = value.name;\n            obj.value = parseFloat(((value.data / totalKg) * 100).toFixed(2));\n            return obj;\n        });\n\n        const legend = responseFiltered.map(value => ({ name: value.name, color: value.color }));\n\n        this.setState({\n            datas: barDatas || [],\n            colors: barColors,\n            keys: barKeys,\n            pieData: pieData,\n            totalKg: totalKg,\n            timeLine: rs2,\n            legend: legend,\n        });\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                const response = await this.dataClient.getAllWasteByPeriod(values.period, values.interval);\n                const responseFiltered = response.data.filter((value) => value.data > 0);\n\n\n                const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n                const barDatas = responseFiltered.map(value => {\n                    const obj = {};\n                    obj[value.name] = parseFloat(value.data.toFixed(2));\n                    obj['residuos'] = value.name;\n                    return obj;\n                });\n                const barKeys = responseFiltered.map(value => value.name);\n                const barColors = responseFiltered.map(value => value.color);\n                const legend = responseFiltered.map(value => ({ name: value.name, color: value.color }));\n\n                const pieData = responseFiltered.map(value => {\n                    const obj = {};\n                    obj.id = value.name;\n                    obj.label = value.name;\n                    obj.value = ((value.data / totalKg) * 100).toFixed(2);\n                    return obj;\n                });\n\n                this.setState({\n                    datas: barDatas || [],\n                    colors: barColors,\n                    keys: barKeys,\n                    pieData: pieData,\n                    totalKg: totalKg,\n                    legend: legend\n                });\n            }\n        });\n    }\n\n    render() {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const heightBoard = window.innerHeight * 0.50;\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                    <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit} style={{ float: 'right' }}>\n                            <FormItem>\n                                <span>Periodo</span>\n                            </FormItem>\n                            <FormItem>\n                                {getFieldDecorator('interval', {\n                                    rules: [{ required: true, message: 'O intervalo é obrigatório!' }],\n                                    initialValue: 1\n                                })(\n                                    <InputNumber min={1} />,\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {getFieldDecorator('period', {\n                                    rules: [{ required: true, message: 'O periodo é obrigatorio!' }],\n                                    initialValue: 'WEEK'\n                                })(\n                                    <Select style={{ width: 120 }}>\n                                        <Option value=\"DAY\">Dia</Option>\n                                        <Option value=\"WEEK\">Semana</Option>\n                                        <Option value=\"MONTH\">Mês</Option>\n                                        <Option value=\"YEAR\">Ano</Option>\n                                    </Select>\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                >\n                                    Consultar\n                                </Button>\n                            </FormItem>\n                        </Form>\n                    </Col>\n                </Row>\n\n                <Row gutter={24}>\n                    <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                        <Board>\n                            <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em Kg</h3></Divider>\n                            <div style={{ height: `${heightBoard}px` }}>\n                                <ResponsiveBar\n                                    margin={{\n                                        top: 40,\n                                        right: 50,\n                                        bottom: 40,\n                                        left: 50\n                                    }}\n                                    axisBottom={null}\n                                    data={this.state.datas}\n                                    indexBy=\"residuos\"\n                                    keys={this.state.keys}\n                                    colors={this.state.colors}\n                                    padding={0.2}\n                                    labelTextColor='#ffffff'\n                                    labelSkipWidth={12}\n                                    labelSkipHeight={12}\n                                    labelFormat={v => `${v} Kg`}\n                                    animate={true}\n                                    motionStiffness={90}\n                                    motionDamping={15}\n                                    tooltip={(v) => {\n                                        return `${v.value} kg coletados`\n                                    }}\n\n                                />\n                            </div>\n                            <div>\n                                {this.state.legend.map(value => <div key={`bar-${value.name}`} style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{ marginLeft: '5px' }}>{value.name}</span></div>)}\n                            </div>\n                        </Board>\n                    </Col>\n\n                    <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                        <Board>\n                            <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Resíduos coletados em percentual</h3></Divider>\n\n\n\n                            <div style={{ height: `${heightBoard}px` }}>\n                                <ResponsivePie\n                                    margin={{\n                                        top: 40,\n                                        right: 50,\n                                        bottom: 55,\n                                        left: 50\n                                    }}\n                                    data={this.state.pieData}\n                                    animate\n                                    innerRadius={0.6}\n                                    padAngle={1}\n                                    cornerRadius={3}\n                                    colors={this.state.colors}\n                                    radialLabelsLinkColor=\"inherit\"\n                                    radialLabelsLinkStrokeWidth={3}\n                                    radialLabelsTextColor=\"inherit:darker(1.2)\"\n                                    slicesLabelsTextColor=\"#ffffff\"\n                                    tooltip={(v) => {\n                                        return `${v.value}% do total total`\n                                    }}\n                                    sliceLabel={(v) => `${v.value}%`}\n                                />\n\n                            </div>\n                            <div>\n                                {this.state.legend.map(value => <div key={`pie-${value.name}`} style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{ marginLeft: '5px' }}>{value.name}</span></div>)}\n                            </div>\n                        </Board>\n                    </Col>\n\n                    {this.state.timeLine && <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                        <Board>\n                            <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Coletas efetuadas este ano - Kg</h3></Divider>\n\n                            <div style={{ height: `${heightBoard}px` }}>\n                                <ResponsiveCalendar\n                                    margin={{\n                                        top: 50,\n                                        right: 10,\n                                        bottom: 0,\n                                        left: 50\n                                    }}\n                                    from=\"2018-01-01T03:00:00.000Z\"\n                                    to=\"2018-12-31T03:00:00.000Z\"\n                                    data={this.state.timeLine}\n                                    emptyColor=\"#eeeeee\"\n                                    yearSpacing={40}\n                                    monthBorderColor=\"#ffffff\"\n                                    monthLegendOffset={10}\n                                    dayBorderWidth={2}\n                                    dayBorderColor=\"#ffffff\"\n                                    legends={[\n                                        {\n                                            \"anchor\": \"bottom-right\",\n                                            \"direction\": \"row\",\n                                            \"translateY\": -80,\n                                            \"itemCount\": 4,\n                                            \"itemWidth\": 34,\n                                            \"itemHeight\": 36,\n                                            \"itemDirection\": \"top-to-bottom\"\n                                        }\n                                    ]}\n                                    colors={[\n                                        // \"#ebecef\",\n                                        \"#c3e68d\",\n                                        \"#7cca71\",\n                                        \"#309b40\",\n                                        \"#23632d\"\n                                    ]}\n                                />\n                            </div>\n                        </Board>\n                    </Col>}\n                </Row>\n            </>\n        );\n    }\n}\n\nexport default Form.create()(GeneralPage);","import axios from 'axios';\nimport { getToken } from \"../services/auth\";\n    \nexport default class UserClient {\n\n    constructor(url) {\n        this.url = url;\n        this.request = axios.create({\n            baseURL: url,\n            timeout: 30000,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        this.request.interceptors.request.use(async config => {\n            const token = getToken();\n            if (token) {\n                config.headers.Authorization = `Bearer ${token}`;\n            }\n            return config;\n        });\n    }\n\n\n    async save(user) {\n        const response = await this.request.post('/', JSON.stringify(user));\n        return response;\n    }\n\n    async getAll() {\n        const response = await this.request.get('/');\n        return response;\n    }\n\n    async remove(id) {\n        const response = await this.request.delete(`?id=${id}`);\n        return response;\n    }\n}","import moment from 'moment';\n\nconst toTags = (typeSolidWaste) => {\n    const tags = [];\n    if(typeSolidWaste.recyclable) {\n        tags.push('recyclable');\n    }\n    if(typeSolidWaste.reutilable) {\n        tags.push('reutilable');\n    }\n    return tags;\n}\n\nconst toUsersListData = (users) => users.map((user) => ({\n    key: user._id,\n    name: user.firstName,\n    email: user.email\n}));\n\nconst toTypesSolidWasteData = (typesSolidWaste) => typesSolidWaste.map((typeSolidWaste) => ({\n    key: typeSolidWaste._id,\n    name: typeSolidWaste.name,\n    description: typeSolidWaste.description,\n    color: typeSolidWaste.color,\n    tags: toTags(typeSolidWaste)\n}));\n\nconst toSolidWasteCollectedData = (solidWasteCollected) => solidWasteCollected.map((solidWasteCollected) => ({\n    key: solidWasteCollected._id,\n    typeWasted: solidWasteCollected.typeWasted.name,\n    quantityCollected: solidWasteCollected.quantityCollected,\n    color: solidWasteCollected.typeWasted.color,\n    collectionDate: moment(new Date(solidWasteCollected.collectionDate)).format('DD/MM/YYYY'),\n}));\n\nexport default {\n    toUsersListData,\n    toTypesSolidWasteData,\n    toSolidWasteCollectedData,\n    toTags,\n}","import React from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Input } from 'antd';\n\nimport UserClient from '../api/UserClient';\nimport DataList from '../helpers/DataList';\n\nconst FormItem = Form.Item;\n\n\nclass UsersPage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.userClient = new UserClient('https://betatcc.herokuapp.com/users');\n        this.state = {\n            confirmDirty: false,\n            modalVisible: false,\n            visibleModalExcluir: false,\n            users: []\n        };\n    }\n\n    async componentWillMount() {\n        const response = await this.userClient.getAll();\n        this.setState({\n            users: DataList.toUsersListData(response.data),\n        });\n    }\n\n    modalExcluir(idUser) {\n        Modal.error({\n            title: 'Deseja realmente excluir este usuário?',\n            cancelText: 'Cancelar',\n            okCancel: true,\n            okText: 'Excluir',\n            onOk: async () => {\n                const response = await this.userClient.remove(idUser);\n                this.setState({\n                    users: this.state.users.filter((user) => user.key !== response.data._id)\n                })\n            }\n        });\n    }\n\n    showModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n            if (!err) {\n                const user = {\n                    firstName: values.firstName,\n                    lastName: values.lastName,\n                    email: values.email,\n                    password: values.password\n                };\n                const response = await this.userClient.save(user);\n                this.setState({\n                    users: [{ key: response.data._id, name: response.data.firstName, email: response.data.email }, ...this.state.users]\n                })\n                this.setState({\n                    modalVisible: false,\n                });\n                this.props.form.resetFields();\n            }\n        });\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            modalVisible: false,\n        });\n    }\n\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('As duas senhas precisam ser iguais!');\n        } else {\n            callback();\n        }\n    }\n\n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 7 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 15 },\n            },\n        };\n\n        const columns = [{\n            title: 'Nome',\n            dataIndex: 'name',\n            key: 'name',\n            width: 300,\n\n        }, {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n            width: 500,\n        }, {\n            title: 'Ação',\n            key: 'action',\n            render: (text, record) => (\n                <Button type='danger' icon=\"delete\" onClick={this.modalExcluir.bind(this, text.key)}></Button>\n            ),\n        }];\n\n        return (\n            <>  \n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ marginBottom: \"20px\" }}>\n                    <Col><Button type=\"primary\" shape=\"circle\" icon=\"plus\" size=\"large\" style={{height: '50px', width: '50px', position: 'fixed', bottom: '50px', right: '10px', zIndex:\"999\"}}onClick={this.showModal}></Button></Col>\n                </Row>\n                <Modal\n                    title=\"Cadastrar Usuário\"\n                    visible={this.state.modalVisible}\n                    okText={\"Cadastrar\"}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form>\n                        <FormItem {...formItemLayout} label=\"Primeiro nome\">\n                            {getFieldDecorator('firstName', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite o primeiro nome do usuário',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Último nome\">\n                            {getFieldDecorator('lastName', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite o segundo nome do usuário',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n                        <FormItem {...formItemLayout} label=\"E-mail\">\n                            {getFieldDecorator('email', {\n                                rules: [{\n                                    type: 'email', message: 'Por favor digite um E-mail valido!',\n                                }, {\n                                    required: true, message: 'Por favor digite o E-mail do usuário!',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n                        <FormItem {...formItemLayout} label=\"Password\">\n                            {getFieldDecorator('password', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite sua senha!',\n                                }, {\n                                    validator: this.validateToNextPassword,\n                                }],\n                            })(\n                                <Input type=\"password\" />\n                            )}\n                        </FormItem>\n                        <FormItem {...formItemLayout} label=\"Confirm Password\">\n                            {getFieldDecorator('confirm', {\n                                rules: [{\n                                    required: true, message: 'Por favor confirme sua senha!',\n                                }, {\n                                    validator: this.compareToFirstPassword,\n                                }],\n                            })(\n                                <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n                            )}\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <Table columns={columns} bordered dataSource={this.state.users} scroll={window.innerWidth <= 600 ? { x: 800 } : undefined} style={{ background: \"white\" }} />\n            </>\n        );\n    }\n}\n\nexport default Form.create()(UsersPage);","import axios from 'axios';\nimport { getToken } from \"../services/auth\";\n\nexport default class TypeSolidWasteClient {\n\n    constructor(url) {\n        this.url = url;\n        this.request = axios.create({\n            baseURL: url,\n            timeout: 30000,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        this.request.interceptors.request.use(async config => {\n            const token = getToken();\n            if (token) {\n                config.headers.Authorization = `Bearer ${token}`;\n            }\n            return config;\n        });\n    }\n\n\n    async save(typeSolidWaste) {\n        const response = await this.request.post('/', JSON.stringify(typeSolidWaste));\n        return response;\n    }\n\n    async getAll() {\n        const response = await this.request.get('/');\n        return response;\n    }\n\n    async remove(id) {\n        const response = await this.request.delete(`?id=${id}`);\n        return response;\n    }\n}","import React from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Input, Checkbox, Tag } from 'antd';\n\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataList from '../helpers/DataList';\n\nconst FormItem = Form.Item;\n\n\nclass TypesSolidWastePage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            modalVisible: false,\n            visibleModalExcluir: false,\n            isRecyclable: false,\n            isReutilable: false,\n            typesSolidWaste: [],\n            filters: [],\n            filteredInfo: {},\n        };\n    }\n\n    async componentWillMount() {\n        const response = await this.typeSolidWasteClient.getAll();\n        this.setState({\n            typesSolidWaste: response ? DataList.toTypesSolidWasteData(response.data).reverse() : [],\n        });\n    }\n\n    modalExcluir(idTypeSolidWaste) {\n        Modal.error({\n            title: 'Deseja realmente excluir este tipo de residuo?',\n            cancelText: 'Cancelar',\n            okCancel: true,\n            okText: 'Excluir',\n            onOk: async () => {\n                const response = await this.typeSolidWasteClient.remove(idTypeSolidWaste);\n                this.setState({\n                    typesSolidWaste: this.state.typesSolidWaste.filter((typeSolidWast) => typeSolidWast.key !== response.data._id)\n                })\n            }\n        });\n    }\n\n    showModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n            if (!err) {\n                console.log(values)\n                const typeSolidWaste = {\n                    name: values.name.toUpperCase(),\n                    description: values.description,\n                    recyclable: this.state.isRecyclable,\n                    reutilable: this.state.isReutilable,\n                    color: values.color\n                };\n                const response = await this.typeSolidWasteClient.save(typeSolidWaste);\n                this.setState({\n                    typesSolidWaste: [{\n                        color: response.data.color,\n                        key: response.data._id, name: response.data.name, description: response.data.description, tags: DataList.toTags(response.data)\n                    }, ...this.state.typesSolidWaste],\n                    modalVisible: false,\n                    isRecyclable: false,\n                    isReutilable: false,\n                });\n                this.props.form.resetFields();\n            }\n\n        });\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            modalVisible: false,\n            isRecyclable: false,\n            isReutilable: false,\n        });\n    }\n\n    handleChangeCheckRecyclable = (e) => {\n        this.setState({\n            isRecyclable: e.target.checked,\n        });\n    }\n\n    handleChangeCheckReutilable = (e) => {\n        this.setState({\n            isReutilable: e.target.checked,\n        });\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 7 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 15 },\n            },\n        };\n\n        const formTailLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: {\n                xs: {\n                    span: 12, offset: 0\n                },\n                sm: {\n                    span: 12, offset: 7\n                }\n            }\n        }\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            },\n            {\n                title: 'Nome',\n                dataIndex: 'name',\n                key: 'name',\n            }, {\n                title: 'Descrição',\n                dataIndex: 'description',\n                key: 'description',\n\n            }, {\n                title: '',\n                key: 'tags',\n                dataIndex: 'tags',\n                render: tags => {\n                    function tagT(t) {\n                        if (t === 'recyclable') {\n                            return 'Reciclável';\n                        } else if (t === 'reutilable') {\n                            return 'Reutilizável';\n                        } else {\n                            return '';\n                        }\n                    }\n                    return (\n                        <span>\n                            {tags.map(tag => <Tag color=\"blue\" key={tag}>{tagT(tag)}</Tag>)}\n                        </span>\n                    )\n                },\n                filters: this.state.filters,\n                filteredValue: this.state.filteredInfo.tags || null,\n                onFilter: (value, record) => {\n                    return record.tags.includes(value)\n                },\n            }, {\n                title: 'Ação',\n                key: 'action',\n                render: (text, record) => (\n                    <Button type='danger' icon=\"delete\" onClick={this.modalExcluir.bind(this, text.key)}></Button>\n                ),\n            }];\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ marginBottom: \"20px\" }}>\n                    <Col><Button type=\"primary\" shape=\"circle\" icon=\"plus\" size=\"large\" style={{ height: '50px', width: '50px', position: 'fixed', bottom: '50px', right: '10px', zIndex: \"999\" }} onClick={this.showModal}></Button></Col>\n                </Row>\n                <Modal\n                    title=\"Cadastrar no tipo de resíduo\"\n                    visible={this.state.modalVisible}\n                    okText={\"Cadastrar\"}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form>\n                        <FormItem {...formItemLayout} label=\"Nome\">\n                            {getFieldDecorator('name', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite o nome do tipo de resíduo',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Descrição\">\n                            {getFieldDecorator('description', {\n                                rules: [{\n                                    required: true, message: 'Por favor digite a descrição do tipo de resíduo',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Cor\">\n                            {getFieldDecorator('color', {\n                                rules: [{\n                                    required: true, message: 'Por favor selecione uma cor para este tipo de resíduo',\n                                }],\n                            })(\n                                <Input type='color' onChange={(e) => { }} />\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formTailLayout}>\n                            <Checkbox checked={this.state.isRecyclable} onClick={this.handleChangeCheckRecyclable}>\n                                Reciclável\n                            </Checkbox>\n                            <Checkbox checked={this.state.isReutilable} onClick={this.handleChangeCheckReutilable}>\n                                Reutilizável\n                            </Checkbox>\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.typesSolidWaste} scroll={window.innerWidth <= 600 ? { x: 900 } : undefined} style={{ background: \"white\" }} />\n            </>\n        );\n    }\n}\n\nexport default Form.create()(TypesSolidWastePage);","const toTypesSolidWasteFiltersData = (types) => types.map((type) => ({\n    text: type.name,\n    value: type.name,\n}));\n\nexport default {\n    toTypesSolidWasteFiltersData,\n}","import React from 'react';\nimport { Table, Modal, Row, Col, Button, Form, Select, DatePicker, InputNumber } from 'antd';\n\nimport moment from 'moment';\n\nimport SolidWasteCollectedClient from '../api/TypeSolidWasteClient';\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataList from '../helpers/DataList';\nimport DataFilters from '../helpers/DataFilters';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass SolidWasteCollectedPage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.solidWasteCollectedClient = new SolidWasteCollectedClient('https://betatcc.herokuapp.com/solid-waste-collected');\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            modalVisible: false,\n            visibleModalExcluir: false,\n            isRecyclable: false,\n            isReutilable: false,\n            solidsWasteCollected: [],\n            typesSolidWaste: [],\n            filters: [],\n            filteredInfo: {},\n            sortedInfo: {}\n        };\n    }\n\n    async componentWillMount() {\n        const responseCollected = await this.solidWasteCollectedClient.getAll();\n        const responseType = await this.typeSolidWasteClient.getAll();\n\n        this.setState({\n            solidsWasteCollected: DataList.toSolidWasteCollectedData(responseCollected.data).reverse(),\n            typesSolidWaste: responseType.data,\n            filters: DataFilters.toTypesSolidWasteFiltersData(responseType.data)\n        });\n    }\n\n    modalExcluir = (idSolidWasteCollected) => {\n        Modal.error({\n            title: 'Deseja realmente excluir esta coleta?',\n            cancelText: 'Cancelar',\n            okCancel: true,\n            okText: 'Excluir',\n            onOk: async () => {\n                const response = await this.solidWasteCollectedClient.remove(idSolidWasteCollected);\n                this.setState({\n                    solidsWasteCollected: this.state.solidsWasteCollected.filter((solidWasteCollected) => solidWasteCollected.key !== response.data._id)\n                })\n            }\n        });\n    }\n\n    showModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n            console.log(values);\n            if (!err) {\n                const solidWasteCollected = {\n                    typeWasted: values.typeWasted,\n                    quantityCollected: values.quantityCollected - 0,\n                    collectionDate: values.collectionDate ? values.collectionDate : null,\n                };\n                const response = await this.solidWasteCollectedClient.save(solidWasteCollected);\n                this.setState({\n                    solidsWasteCollected: [{\n                        key: response.data._id,\n                        typeWasted: response.data.typeWasted.name,\n                        color: response.data.typeWasted.color,\n                        collectionDate: moment(new Date(response.data.collectionDate)).format('DD/MM/YYYY'),\n                        quantityCollected: response.data.quantityCollected\n                    }, ...this.state.solidsWasteCollected],\n                    modalVisible: false,\n                })\n                this.props.form.resetFields();\n            }\n        });\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            modalVisible: false,\n        });\n    }\n\n    handleChangeSelect = (value) => {\n        this.setState({\n            typeSelected: value,\n        });\n    }\n\n    handleChangeDate = (date, dateString) => {\n        this.setState({\n            collectionDate: dateString,\n        })\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 7 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 15 },\n            },\n        };\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            }, {\n                title: 'Data',\n                dataIndex: 'collectionDate',\n                key: 'collectionDate',\n                width: 150,\n                sorter: (a, b) => {\n                    const firstSplit = a.collectionDate.split('/');\n                    const secondSplit = b.collectionDate.split('/');\n\n                    const first = new Date(parseInt(firstSplit[2]), parseInt(firstSplit[1]) - 1, parseInt(firstSplit[0]));\n                    const second = new Date(parseInt(secondSplit[2]), parseInt(secondSplit[1]) - 1, parseInt(secondSplit[0]));\n\n                    return first - second;\n                },\n                sortOrder: this.state.sortedInfo.columnKey === 'collectionDate' && this.state.sortedInfo.order,\n            }, {\n                title: 'Total coletado',\n                dataIndex: 'quantityCollected',\n                key: 'quantityCollected',\n                width: 200,\n                render: (text, record) => (\n                    `${text} Kg`\n                ),\n                sorter: (a, b) => a.quantityCollected - b.quantityCollected,\n                sortOrder: this.state.sortedInfo.columnKey === 'quantityCollected' && this.state.sortedInfo.order,\n            }, {\n                title: 'Tipo',\n                dataIndex: 'typeWasted',\n                key: 'typeWasted',\n                filters: this.state.filters,\n                filteredValue: this.state.filteredInfo.typeWasted || null,\n                onFilter: (value, record) => record.typeWasted.includes(value),\n            }, {\n                title: 'Ação',\n                key: 'acti  on',\n                render: (text, record) => (\n                    <Button type='danger' icon=\"delete\" onClick={this.modalExcluir.bind(this, text.key)}></Button>\n                ),\n            }];\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" style={{ marginBottom: \"20px\" }}>\n                    <Col><Button type=\"primary\" shape=\"circle\" icon=\"plus\" size=\"large\" style={{ height: '50px', width: '50px', position: 'fixed', bottom: '50px', right: '10px', zIndex: \"999\" }} onClick={this.showModal}></Button></Col>\n                </Row>\n                <Modal\n                    title=\"Cadastrar Coleta\"\n                    visible={this.state.modalVisible}\n                    okText={\"Cadastrar\"}\n                    cancelText={\"Cancelar\"}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form>\n                        <FormItem {...formItemLayout} label=\"Tipo de Resíduo\">\n                            {getFieldDecorator('typeWasted', {\n                                rules: [{\n                                    required: true, message: 'Por favor selecione o tipo de resíduo coletado',\n                                }],\n                            })(\n                                <Select placeholder=\"Selecione o tipo de resíduo\" onChange={this.handleChangeSelect}>\n                                    {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                </Select>\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Quantidade em Kg\">\n                            {getFieldDecorator('quantityCollected', {\n                                rules: [{\n                                    required: true, message: 'Por favor informe a quantidade coletada',\n                                }],\n                            })(\n                                <InputNumber min={0} style={{width: '100%'}}/>,\n                            )}\n                        </FormItem>\n\n                        <FormItem {...formItemLayout} label=\"Data\">\n                            {getFieldDecorator('collectionDate', {\n                                rules: [{\n                                    required: false,\n                                }],\n                                initialValue: moment(new Date())\n                            })(\n                                <DatePicker />\n                            )}\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.solidsWasteCollected} scroll={window.innerWidth <= 600 ? { x: 1000 } : undefined} style={{ background: \"white\" }} />\n            </>\n        );\n    }\n}\n\nexport default Form.create()(SolidWasteCollectedPage);","import React from 'react';\n\nimport moment from 'moment';\n\nimport { Row, Col, Button, Form, Select, InputNumber, DatePicker, Divider } from 'antd';\n\nimport Board from '../components/board/Board';\n\nimport { ResponsiveBar } from '@nivo/bar';\n\nimport { ResponsiveStream } from '@nivo/stream';\n\nimport { ResponsiveCalendar } from '@nivo/calendar';\n\nimport { ResponsivePie } from '@nivo/pie';\n\nimport DataClient from '../api/DataClient';\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\n\nclass AnalyzeCollectedWastesPage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.state = {\n            typesSolidWaste: [],\n            layoutAll: true,\n            datas: [],\n            colors: [],\n            keys: [],\n            pieData: [],\n            totalKg: 0,\n            streamDatas: [],\n            streamKeys: [],\n            streamColors: [],\n            legend: [],\n            timeLine: [],\n            dates: [],\n        }\n    }\n\n    async componentWillMount() {\n\n        const responseType = await this.typeSolidWasteClient.getAll();\n\n        this.setState({\n            typesSolidWaste: responseType.data,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                const {\n                    type,\n                    endDate,\n                    startDate,\n                } = values;\n\n                if (type === '') {\n                    this.setState({\n                        layoutAll: true\n                    })\n                } else {\n                    this.setState({\n                        layoutAll: false\n                    })\n                }\n\n                const start = new Date(startDate);\n                start.setHours(0)\n                start.setMinutes(0);\n                start.setSeconds(0);\n\n                const end = new Date(endDate);\n                end.setHours(23)\n                end.setMinutes(59);\n                end.setSeconds(59);\n\n                if (endDate && startDate) {\n                    if (type !== '') {\n\n                        const response = await this.dataClient.getWastesByPeriodFull(start, end, type);\n\n                        const responseFiltered = response.data[0].data.reduce((acc, current) => acc + current.quantityCollected, 0);\n\n                        const totalKg = responseFiltered;\n\n                        const x = response.data[0].data.map((value) => {\n                            let obj = {};\n                            obj[response.data[0].name] = value.quantityCollected;\n                            return obj;\n                        });\n\n                        const dates = response.data[0].data.map((value) => {\n                            return value.collectionDate;\n                        });\n\n                        const rs = {};\n\n                        response.data[0].data.forEach(value => {\n                            value.collectionDate = new Date(value.collectionDate);\n                            value.collectionDate.setHours(0);\n                            value.collectionDate.setMinutes(0);\n                            value.collectionDate.setSeconds(0);\n\n                            if (!rs[value.collectionDate]) {\n                                rs[value.collectionDate] = {\n                                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                    value: value.quantityCollected\n                                }\n                            } else {\n                                rs[value.collectionDate].value += value.quantityCollected;\n                            }\n                        });\n\n                        const rs2 = Object.keys(rs).map(function (key) {\n                            return rs[key];\n                        });\n\n                        const streamKeys = []\n                        streamKeys.push(response.data[0].name)\n                        const streamColors = []\n                        streamColors.push(response.data[0].color)\n                        this.setState({\n                            streamDatas: x,\n                            streamKeys: streamKeys,\n                            streamColors: streamColors,\n                            totalKg: totalKg,\n                            timeLine: rs2,\n                            dates: dates\n                        });\n                    } else {\n\n                        const response = await this.dataClient.getWastesByPeriod(start, end);\n\n                        const responseFiltered = response.data.filter((value) => value.data > 0);\n\n                        const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n                        const legend = responseFiltered.map(value => ({ name: value.name, color: value.color }));\n\n                        const barDatas = responseFiltered.map(value => {\n                            const obj = {};\n                            obj[value.name] = parseFloat(value.data.toFixed(2));\n                            obj['residuos'] = value.name;\n                            return obj;\n                        });\n                        const barKeys = responseFiltered.map(value => value.name);\n                        const barColors = responseFiltered.map(value => value.color);\n\n                        const pieData = responseFiltered.map(value => {\n                            const obj = {};\n                            obj.id = value.name;\n                            obj.label = value.name;\n                            obj.value = parseFloat(((value.data / totalKg) * 100).toFixed(2));\n                            return obj;\n                        });\n\n                        const res = await this.dataClient.getWastesByPeriodFull(start, end);\n                        let rs2 = [];\n                        if (res) {\n                            const responseTimeLine = res.data.reduce((acc, current) => [...acc, ...current.data], []).map((value) => {\n                                value.collectionDate = new Date(value.collectionDate);\n                                value.collectionDate.setHours(0);\n                                value.collectionDate.setMinutes(0);\n                                value.collectionDate.setSeconds(0);\n                                return value;\n                            });\n\n                            const rs = {};\n\n                            responseTimeLine.forEach(value => {\n                                if (!rs[value.collectionDate]) {\n                                    rs[value.collectionDate] = {\n                                        day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                        value: value.quantityCollected\n                                    }\n                                } else {\n                                    rs[value.collectionDate].value += value.quantityCollected;\n                                }\n                            });\n\n                            rs2 = Object.keys(rs).map(function (key) {\n                                return rs[key];\n                            });\n                        }\n\n                        this.setState({\n                            datas: barDatas || [],\n                            colors: barColors,\n                            keys: barKeys,\n                            pieData: pieData,\n                            totalKg: totalKg,\n                            timeLine: rs2,\n                            legend: legend\n                        });\n                    }\n                } else {\n\n                    if (type !== '') {\n                        const response = await this.dataClient.getAllWasteByPeriodFull(values.period, values.interval, type);\n\n                        const x = response.data[0].data.map((value) => {\n                            let obj = {};\n                            obj[response.data[0].name] = value.quantityCollected;\n                            return obj;\n                        });\n\n                        const dates = response.data[0].data.map((value) => {\n                            return value.collectionDate;\n                        });\n\n                        const responseFiltered = response.data[0].data.reduce((acc, current) => acc + current.quantityCollected, 0);\n                        const rs = {};\n\n                        response.data[0].data.forEach(value => {\n                            value.collectionDate = new Date(value.collectionDate);\n                            value.collectionDate.setHours(0);\n                            value.collectionDate.setMinutes(0);\n                            value.collectionDate.setSeconds(0);\n\n                            if (!rs[value.collectionDate]) {\n                                rs[value.collectionDate] = {\n                                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                    value: value.quantityCollected\n                                }\n                            } else {\n                                rs[value.collectionDate].value += value.quantityCollected;\n                            }\n                        });\n\n                        const rs2 = Object.keys(rs).map(function (key) {\n                            return rs[key];\n                        });\n\n                        const streamKeys = []\n                        streamKeys.push(response.data[0].name)\n                        const streamColors = []\n                        streamColors.push(response.data[0].color)\n                        this.setState({\n                            streamDatas: x,\n                            streamKeys: streamKeys,\n                            streamColors: streamColors,\n                            totalKg: responseFiltered,\n                            timeLine: rs2,\n                            dates: dates\n                        });\n                    } else {\n                        const response = await this.dataClient.getAllWasteByPeriod(values.period, values.interval);\n                        const responseFiltered = response.data.filter((value) => value.data > 0);\n\n                        const totalKg = responseFiltered.reduce((acc, current) => acc + current.data, 0);\n\n                        const legend = responseFiltered.map(value => ({ name: value.name, color: value.color }));\n\n                        const barDatas = responseFiltered.map(value => {\n                            const obj = {};\n                            obj[value.name] = parseFloat(value.data.toFixed(2));\n                            obj['residuos'] = value.name;\n                            return obj;\n                        });\n                        const barKeys = responseFiltered.map(value => value.name);\n                        const barColors = responseFiltered.map(value => value.color);\n\n                        const pieData = responseFiltered.map(value => {\n                            const obj = {};\n                            obj.id = value.name;\n                            obj.label = value.name;\n                            obj.value = parseFloat(((value.data / totalKg) * 100).toFixed(2));\n                            return obj;\n                        });\n\n                        const responseTimeLine = (await this.dataClient.getAllWasteByPeriodFull(values.period, values.interval)).data.reduce((acc, current) => [...acc, ...current.data], []).map((value) => {\n                            value.collectionDate = new Date(value.collectionDate);\n                            value.collectionDate.setHours(0);\n                            value.collectionDate.setMinutes(0);\n                            value.collectionDate.setSeconds(0);\n                            return value;\n                        });\n\n                        const rs = {};\n\n                        responseTimeLine.forEach(value => {\n                            if (!rs[value.collectionDate]) {\n                                rs[value.collectionDate] = {\n                                    day: moment(value.collectionDate).format('YYYY-MM-DD'),\n                                    value: value.quantityCollected\n                                }\n                            } else {\n                                rs[value.collectionDate].value += value.quantityCollected;\n                            }\n                        });\n\n                        const rs2 = Object.keys(rs).map(function (key) {\n                            return rs[key];\n                        });\n\n                        this.setState({\n                            datas: barDatas || [],\n                            colors: barColors,\n                            keys: barKeys,\n                            pieData: pieData,\n                            totalKg: totalKg,\n                            timeLine: rs2,\n                            legend: legend\n                        });\n                    }\n\n                }\n            }\n        });\n    }\n\n    render() {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n        };\n\n\n        return (\n\n            <>\n                {\n                    !this.state.layoutAll &&\n                    <>\n                        <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n\n                                <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '0px' }}>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('type', {\n                                                    rules: [{ required: false }],\n                                                    initialValue: ''\n                                                })(\n                                                    <Select style={{ width: '100%' }}>\n                                                        <Option value=\"\">Todos</Option>\n                                                        {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                                    </Select>\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 14 }} style={{ padding: '0px' }}>\n                                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('interval', {\n                                                            rules: [{ required: false, message: 'O período é obrigatório!' }]\n                                                        })(\n                                                            <InputNumber min={1} placeholder=\"período\" style={{ width: '100%' }} />,\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('period', {\n                                                            rules: [{ required: true, message: 'O periodo é obrigatorio!' }],\n                                                            initialValue: 'WEEK'\n                                                        })(\n                                                            <Select style={{ width: '100%' }}>\n                                                                <Option value=\"DAY\">Dia</Option>\n                                                                <Option value=\"WEEK\">Semana</Option>\n                                                                <Option value=\"MONTH\">Mês</Option>\n                                                                <Option value=\"YEAR\">Ano</Option>\n                                                            </Select>\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 1 }} style={{ padding: '10px 0px' }}></Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('startDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }]\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"Inicio\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('endDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }],\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"fim\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        <Button\n                                                            type=\"primary\"\n                                                            htmlType=\"submit\"\n                                                            style={{ width: '100%' }}\n                                                        >\n                                                            Consultar\n                                                 </Button>\n                                                    </FormItem>\n                                                </Col>\n                                            </Row>\n\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={24}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board height={window.innerHeight * 0.20}>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Peso total coletado</h3></Divider>\n                                    <div style={{\n                                        fontSize: '2em',\n                                        height: '25%',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center'\n                                    }}>{this.state.totalKg.toFixed(2)} Kg</div>\n                                </Board>\n                            </Col>\n\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board height={window.innerHeight * 0.5}>\n                                    <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em Kg</h3></Divider>\n\n                                    <div style={{ height: '80%' }}>\n                                        <ResponsiveStream\n                                            margin={{\n                                                top: 60,\n                                                right: 80,\n                                                bottom: 60,\n                                                left: 80\n                                            }}\n                                            keys={this.state.streamKeys}\n                                            data={this.state.streamDatas}\n                                            offsetType=\"diverging\"\n                                            colors={this.state.streamColors}\n                                            animate={true}\n                                            dotSize={8}\n                                            dotBorderWidth={2}\n                                            dotBorderColor=\"inherit:brighter(0.7)\"\n                                            tooltipFormat={(value) => {\n                                                return `${value.value.toFixed(2)} Kg - ${moment(this.state.dates[value.index]).format('DD/MM/YYYY')}`;\n                                            }}\n                                        />\n                                    </div>\n                                </Board>\n                            </Col>\n\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Resíduos coletados durante o ano</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.45}px` }}>\n                                        <ResponsiveCalendar\n                                            margin={{\n                                                top: 50,\n                                                right: 10,\n                                                bottom: 10,\n                                                left: 50\n                                            }}\n                                            from=\"2018-01-01T03:00:00.000Z\"\n                                            to=\"2018-12-31T03:00:00.000Z\"\n                                            data={this.state.timeLine}\n\n                                            emptyColor=\"#eeeeee\"\n                                            yearSpacing={40}\n                                            monthBorderColor=\"#ffffff\"\n                                            monthLegendOffset={10}\n                                            dayBorderWidth={2}\n                                            dayBorderColor=\"#ffffff\"\n                                            legends={[\n                                                {\n                                                    \"anchor\": \"bottom-right\",\n                                                    \"direction\": \"row\",\n                                                    \"translateY\": -40,\n                                                    \"itemCount\": 4,\n                                                    \"itemWidth\": 34,\n                                                    \"itemHeight\": 36,\n                                                    \"itemDirection\": \"top-to-bottom\"\n                                                }\n                                            ]}\n                                            colors={[\n                                                // \"#ebecef\",\n                                                \"#c3e68d\",\n                                                \"#7cca71\",\n                                                \"#309b40\",\n                                                \"#23632d\"\n                                            ]}\n                                        />\n                                    </div>\n                                </Board>\n                            </Col>\n                        </Row>\n                    </>\n                }\n\n                {\n                    this.state.layoutAll &&\n                    <>\n                        <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n\n                                <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '0px' }}>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('type', {\n                                                    rules: [{ required: false }],\n                                                    initialValue: ''\n                                                })(\n                                                    <Select style={{ width: '100%' }}>\n                                                        <Option value=\"\">Todos</Option>\n                                                        {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                                    </Select>\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 14 }} style={{ padding: '0px' }}>\n                                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('interval', {\n                                                            rules: [{ required: false, message: 'O intervalo é obrigatório!' }]\n                                                        })(\n                                                            <InputNumber min={1} placeholder=\"intervalo\" style={{ width: '100%' }} />,\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('period', {\n                                                            rules: [{ required: true, message: 'O periodo é obrigatorio!' }],\n                                                            initialValue: 'WEEK'\n                                                        })(\n                                                            <Select style={{ width: '100%' }}>\n                                                                <Option value=\"DAY\">Dia</Option>\n                                                                <Option value=\"WEEK\">Semana</Option>\n                                                                <Option value=\"MONTH\">Mês</Option>\n                                                                <Option value=\"YEAR\">Ano</Option>\n                                                            </Select>\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 1 }} style={{ padding: '10px 0px' }}></Col>\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('startDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }]\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"Inicio\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        {getFieldDecorator('endDate', {\n                                                            rules: [{\n                                                                required: false,\n                                                            }],\n                                                        })(\n                                                            <DatePicker style={{ width: '100%' }} placeholder=\"fim\" />\n                                                        )}\n                                                    </FormItem>\n                                                </Col>\n\n                                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n                                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                        <Button\n                                                            type=\"primary\"\n                                                            htmlType=\"submit\"\n                                                            style={{ width: '100%' }}\n                                                        >\n                                                            Consultar\n                                                 </Button>\n                                                    </FormItem>\n                                                </Col>\n                                            </Row>\n\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={24}>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board height={window.innerHeight * 0.20}>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Peso total coletado</h3></Divider>\n                                    <div style={{\n                                        fontSize: '2em',\n                                        height: '25%',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center'\n                                    }}>{this.state.totalKg.toFixed(2)} Kg</div>\n                                </Board>\n                            </Col>\n                            <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                                <Board>\n                                    <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em Kg</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.55}px` }}>\n                                        <ResponsiveBar\n                                            margin={{\n                                                top: 12,\n                                                right: 50,\n                                                bottom: 12,\n                                                left: 50\n                                            }}\n                                            axisBottom={null}\n                                            data={this.state.datas}\n                                            indexBy=\"residuos\"\n                                            keys={this.state.keys}\n                                            colors={this.state.colors}\n                                            padding={0.2}\n                                            labelTextColor='#ffffff'\n                                            labelSkipWidth={16}\n                                            labelSkipHeight={16}\n                                            labelFormat={v => `${v} Kg`}\n                                            tooltip={(v) => {\n                                                return `${v.value} kg coletados`\n                                            }}\n                                        />\n                                    </div>\n                                    <div style={{marginTop: '20px'}}>\n                                        {this.state.legend.map(value => <div style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{ marginLeft: '5px' }}>{value.name}</span></div>)}\n                                    </div>\n                                </Board>\n                            </Col>\n\n                            <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                                <Board >\n                                    <Divider orientation=\"left\"> <h3 style={{ color: '#618833' }}>Resíduos coletados em percentual</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.55}px` }}>\n                                        <ResponsivePie\n                                            margin={{\n                                                top: 10,\n                                                right: 50,\n                                                bottom: 30,\n                                                left: 50\n                                            }}\n                                            data={this.state.pieData}\n                                            animate={true}\n                                            innerRadius={0.6}\n                                            padAngle={1}\n                                            cornerRadius={3}\n                                            colors={this.state.colors}\n                                            radialLabelsLinkColor=\"inherit\"\n                                            radialLabelsLinkStrokeWidth={3}\n                                            radialLabelsTextColor=\"inherit:darker(1.2)\"\n                                            slicesLabelsTextColor=\"#ffffff\"\n                                            tooltip={(v) => {\n                                                return `${v.value}% do total total`\n                                            }}\n                                            sliceLabel={(v) => `${v.value}%`}\n                                        />\n                                    </div>\n                                    <div style={{marginTop: '20px'}}>\n                                        {this.state.legend.map(value => <div style={{ display: 'flex', alignItems: 'center', marginRight: '20px', marginLeft: '10px' }}><div style={{ height: '10px', width: '10px', background: value.color }} /><span style={{  marginLeft: '5px' }}>{value.name}</span></div>)}\n                                    </div>\n                                </Board>\n                            </Col>\n                            <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n                                <Board>\n                                    <Divider orientation=\"left\"><h3 style={{ color: '#618833' }}>Resíduos coletados durante o ano</h3></Divider>\n\n                                    <div style={{ height: `${window.innerHeight * 0.45}px` }}>\n                                        <ResponsiveCalendar\n                                            margin={{\n                                                top: 50,\n                                                right: 10,\n                                                bottom: 10,\n                                                left: 50\n                                            }}\n                                            from=\"2018-01-01T03:00:00.000Z\"\n                                            to=\"2018-12-31T03:00:00.000Z\"\n                                            data={this.state.timeLine}\n\n                                            emptyColor=\"#eeeeee\"\n                                            yearSpacing={40}\n                                            monthBorderColor=\"#ffffff\"\n                                            monthLegendOffset={10}\n                                            dayBorderWidth={2}\n                                            dayBorderColor=\"#ffffff\"\n                                            legends={[\n                                                {\n                                                    \"anchor\": \"bottom-right\",\n                                                    \"direction\": \"row\",\n                                                    \"translateY\": -40,\n                                                    \"itemCount\": 4,\n                                                    \"itemWidth\": 34,\n                                                    \"itemHeight\": 36,\n                                                    \"itemDirection\": \"top-to-bottom\"\n                                                }\n                                            ]}\n                                            colors={[\n                                                // \"#ebecef\",\n                                                \"#c3e68d\",\n                                                \"#7cca71\",\n                                                \"#309b40\",\n                                                \"#23632d\"\n                                            ]}\n                                        />\n                                    </div>\n                                </Board>\n                            </Col>\n                        </Row>\n                    </>\n                }\n            </>\n        );\n    }\n}\n\nexport default Form.create()(AnalyzeCollectedWastesPage);","const toSolidWasteCollectedData = (value) =>  {\n    const result = [];\n    result.push(value.typeWasted);\n    result.push(value.quantityCollected);\n    result.push(value.collectionDate);\n    return result;\n};\n\nexport default {\n    toSolidWasteCollectedData,\n}","export default (data) => ({\n    content: [\n        {\n            text: `Coletas realizadas entre ${data.startDate} - ${data.endDate}\\n\\n`,\n            style: 'header'\n        },\n        {\n            text: `Total coletado: ${data.total.toFixed(2)} Kg`,\n            fontSize: 14, bold: true\n        },\n        {\n\t\t\tstyle: 'table',\n\t\t\ttable: {\n                widths: [200, '*', 100],\n\t\t\t\tbody: [\n\t\t\t\t\t['Tipo de resíduo coletado', 'Total coletado', 'Data'],\n\t\t\t\t\t...data.datas\n\t\t\t\t]\n\t\t\t}\n\t\t}\n    ],\n\n    styles: {\n        header: {\n            fontSize: 18,\n            bold: true\n        },\n        table: {\n\t\t\tmargin: [0, 5, 0, 15]\n\t\t},\n    }\n});","import React from 'react';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport vfsFonts from 'pdfmake/build/vfs_fonts';\n\nimport { Table, Row, Col, Button, Form, Select, DatePicker } from 'antd';\n\nimport TypeSolidWasteClient from '../api/TypeSolidWasteClient';\nimport DataClient from '../api/DataClient';\n\nimport DataList from '../helpers/DataList';\n\nimport DataDoc from '../helpers/DataDoc';\n\nimport CollectionReport from '../docs/templates/CollectionReport';\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\nclass ReportPage extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.typeSolidWasteClient = new TypeSolidWasteClient('https://betatcc.herokuapp.com/types-solid-waste');\n        this.dataClient = new DataClient('https://betatcc.herokuapp.com/datas');\n        this.state = {\n            typesSolidWaste: [],\n            dataTypesSolidWaste: [],\n            dataTables: [],\n            total: 0,\n            dataDoc: {},\n            filteredInfo: {},\n            sortedInfo: {}\n        };\n    }\n\n    async componentWillMount() {\n        const response = await this.typeSolidWasteClient.getAll();\n        this.setState({\n            typesSolidWaste: response.data,\n            dataTypesSolidWaste: response ? DataList.toTypesSolidWasteData(response.data) : [],\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                const {\n                    type,\n                    endDate,\n                    startDate,\n                } = values;\n\n                if (endDate && startDate) {\n                    const start = new Date(startDate);\n                    start.setHours(0)\n                    start.setMinutes(0);\n                    start.setSeconds(0);\n\n                    const end = new Date(endDate);\n                    end.setHours(23)\n                    end.setMinutes(59);\n                    end.setSeconds(59);\n\n                    const response = await this.dataClient.getWastesByPeriodFull(start, end, type);\n\n                    const result = response.data.map((value) => DataList.toSolidWasteCollectedData(value.data)).reduce((acc, current) => [...acc, ...current]);\n\n                    const result2 = result.map((value) => {\n                        return DataDoc.toSolidWasteCollectedData(value);\n                    });\n\n                    const total = result2.reduce((acc, current) => acc + current[1], 0);\n\n                    this.setState({\n                        dataTables: result,\n                        dataDoc: {\n                            datas: result2,\n                            total: total,\n                            startDate: startDate.format('DD/MM/YYYY'),\n                            endDate: endDate.format('DD/MM/YYYY'),\n                        },\n                        total: total,\n                    });\n                }\n            }\n        });\n    }\n\n    handleChangeTable = (pagination, filters, sorter) => {\n        this.setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    }\n\n    render = () => {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'color',\n                key: 'color',\n                width: 20,\n                render: color => (\n                    <div style={{ width: '10px', height: '10px', background: color }}></div>\n                )\n            }, {\n            title: 'Data',\n            dataIndex: 'collectionDate',\n            key: 'collectionDate',\n            width: 150,\n            sorter: (a, b) => {\n                const firstSplit = a.collectionDate.split('/');\n                const secondSplit = b.collectionDate.split('/');\n\n                const first = new Date(parseInt(firstSplit[2]), parseInt(firstSplit[1]) - 1, parseInt(firstSplit[0]));\n                const second = new Date(parseInt(secondSplit[2]), parseInt(secondSplit[1]) - 1, parseInt(secondSplit[0]));\n\n                return first - second;\n            },\n            sortOrder: this.state.sortedInfo.columnKey === 'collectionDate' && this.state.sortedInfo.order,\n        }, {\n            title: 'Total coletado',\n            dataIndex: 'quantityCollected',\n            key: 'quantityCollected',\n            width: 200,\n            render: (text, record) => (\n                `${text} Kg`\n            ),\n            sorter: (a, b) => a.quantityCollected - b.quantityCollected,\n            sortOrder: this.state.sortedInfo.columnKey === 'quantityCollected' && this.state.sortedInfo.order,\n        }, {\n            title: 'Tipo',\n            dataIndex: 'typeWasted',\n            key: 'typeWasted'\n        }];\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n            },\n        };\n\n\n        return (\n            <>\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                    <Col xs={{ span: 24 }} lg={{ span: 24 }}>\n\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '0px' }}>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 4 }} style={{ padding: '0px' }}>\n\n                                    <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                        {getFieldDecorator('type', {\n                                            rules: [{ required: false }],\n                                            initialValue: ''\n                                        })(\n                                            <Select style={{ width: '100%' }}>\n                                                <Option value=\"\">Todos</Option>\n                                                {this.state.typesSolidWaste.map((value) => <Option value={value._id} key={value._id}>{value.name}</Option>)}\n                                            </Select>\n                                        )}\n                                    </FormItem>\n                                </Col>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 10 }} style={{ padding: '0px' }}>\n                                    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 9 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('startDate', {\n                                                    rules: [{\n                                                        required: false,\n                                                    }]\n                                                })(\n                                                    <DatePicker style={{ width: '100%' }} placeholder=\"Inicio\" />\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 9 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                {getFieldDecorator('endDate', {\n                                                    rules: [{\n                                                        required: false,\n                                                    }],\n                                                })(\n                                                    <DatePicker style={{ width: '100%' }} placeholder=\"fim\" />\n                                                )}\n                                            </FormItem>\n                                        </Col>\n\n                                        <Col xs={{ span: 24 }} lg={{ span: 2 }} style={{ padding: '0px' }}>\n                                            <FormItem {...formItemLayout} style={{ width: '100%' }}>\n                                                <Button\n                                                    type=\"primary\"\n                                                    htmlType=\"submit\"\n                                                    style={{ width: '100%' }}\n                                                    icon=\"search\"\n                                                >\n                                                </Button>\n                                            </FormItem>\n                                        </Col>\n                                    </Row>\n\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n                {this.state.dataTables.length > 0 &&\n                    <div>\n                        <div style={{\n                            padding: '10px',\n                            background: 'white',\n                            margin: '16px 0px'\n                        }}>\n                            <Row type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={24} style={{ background: 'white', margin: '0px', padding: '10px 0px' }}>\n                                <Col xs={{ span: 24 }} lg={{ span: 6 }} style={{ padding: '0px' }}>\n                                    <h3 style={{ margin: '0px' }}>Total Coletado {this.state.dataTables.reduce((acc, current) => acc + current.quantityCollected, 0).toFixed(2)} Kg</h3>\n                                </Col>\n\n                                <Col xs={{ span: 24 }} lg={{ span: 3 }} style={{ padding: '0px' }}>\n                                    <Button ype=\"primary\"\n                                        htmlType=\"button\"\n                                        style={{ width: '100%' }}\n                                        icon=\"file-pdf\"\n                                        onClick={() => {\n                                            const { vfs } = vfsFonts.pdfMake;\n                                            pdfMake.vfs = vfs;\n                                            pdfMake.createPdf(CollectionReport(this.state.dataDoc)).download('report.pdf')\n                                        }}>PDF</Button>\n                                </Col>\n                            </Row>\n                        </div>\n                        <Table columns={columns} onChange={this.handleChangeTable} bordered dataSource={this.state.dataTables} scroll={window.innerWidth <= 600 ? { x: 700 } : undefined} style={{ background: \"white\", marginBottom: '20px' }} />\n                    </div>\n                }\n\n            </>\n        );\n    }\n}\n\nexport default Form.create()(ReportPage);","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect, withRouter } from \"react-router-dom\";\n\nimport { Icon, Menu } from 'antd';\n\nimport { isAuthenticated, login } from \"./services/auth\";\n\nimport BasePage from './pages/BasePage';\nimport GeneralPage from './pages/GeneralPage';\nimport UsersPage from './pages/UsersPage';\nimport TypesSolidWastePage from './pages/TypesSolidWastePage';\nimport SolidWasteCollectedPage from './pages/SolidWasteCollectedPage';\nimport AnalyzeCollectedWastesPage from './pages/AnalyzeCollectedWastesPage';\nimport ReportPage from './pages/ReportPage';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                    <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n                )\n        }\n    />\n);\n\nexport default class Routes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            titlePage: 'Visão Geral',\n            // email: '',\n            // password: '',\n        }\n    }\n\n    handleSignIn = async e => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        if (!email || !password) {\n            this.setState({ error: \"Preencha e-mail e senha para continuar!\" });\n        } else {\n            try {\n                login('ok');\n                this.props.history.push(\"/home\");\n            } catch (err) {\n                this.setState({\n                    error:\n                        \"Houve um problema com o login, verifique suas credenciais. T.T\"\n                });\n            }\n        }\n    };\n\n    render = () => (\n        <Router>\n            <Switch>\n\n                <BasePage\n                    menu={\n                        <Menu mode=\"inline\" style={{ zIndex: '999' }}>\n                            <Menu.Item key=\"1\" onClick={() => { this.setState({ titlePage: 'Visão Geral' }) }}>\n                                <Icon type=\"home\" />\n                                <Link to=\"/\" className=\"nav-text\">Visão Geral</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\" onClick={() => { this.setState({ titlePage: 'Usuários' }) }}>\n                                <Icon type=\"user\" />\n                                <Link to=\"/usuarios\" className=\"nav-text\">Usuários</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"3\" onClick={() => { this.setState({ titlePage: 'Tipos de Resíduos Sólidos' }) }}>\n                                <Icon type=\"tag\" />\n                                <Link to=\"/tipos-residuos-solidos\" className=\"nav-text\">Tipos de Resíduos Sólidos</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"4\" onClick={() => { this.setState({ titlePage: 'Coletas' }) }}>\n                                <Icon type=\"delete\" />\n                                <Link to=\"/coletas\" className=\"nav-text\">Coletas</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"5\" onClick={() => { this.setState({ titlePage: 'Análises' }) }}>\n                                <Icon type=\"line-chart\" />\n                                <Link to=\"/analises\" className=\"nav-text\">Análises</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"6\" onClick={() => { this.setState({ titlePage: 'Relatórios' }) }}>\n                                <Icon type=\"file-text\" />\n                                <Link to=\"/relatorios\" className=\"nav-text\">Relatórios</Link>\n                            </Menu.Item>\n                        </Menu>\n                    }\n\n                    content={\n                        <>\n                            <Route exact path=\"/\" component={withRouter(() => {\n                                return (\n                                    <div style={{ height: '100vh', width: '100vw', zIndex: '99999999', background: '#ededed', position: 'fixed', top: '0px', left: '0px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                        <div style={{ minWidth: '250px', background: 'rgb(139, 195, 74)', borderRadius: '5px', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.2)', padding: '25px 10px', textAlign: 'center' }}>\n                                            <h3 style={{ color: '#fff', opacity: '0.8', fontFamily: 'sans-serif', marginBottom: '10px', marginTop: '10px' }}>SolidWM</h3>\n                                            <input value={this.state.email} onChange={e => { this.setState({ email: e.target.value }) }} type=\"text\" style={{ width: '100%', padding: '10px', border: 'none', borderRadius: '3px', marginBottom: '10px' }} placeholder=\"Usuário\" />\n                                            <input value={this.state.password} onChange={e => this.setState({ password: e.target.value })} type=\"text\" style={{ width: '100%', padding: '10px', border: 'none', borderRadius: '3px' }} placeholder=\"Senha\" />\n                                            <button onClick={this.handleSignIn} style={{ width: '100%', padding: '10px', border: 'none', borderRadius: '3px', background: '#4d74fc', color: 'white', marginTop: '10px' }}>Entrar</button>\n                                        </div>\n                                    </div>\n                                )\n                            })} />\n                            {/* <PrivateRoute path=\"/home\" component={GeneralPage} /> */}\n                            <Route exact path=\"/home\" component={GeneralPage} />\n                            {/* <PrivateRoute path=\"/usuarios\" component={UsersPage} /> */}\n                            <Route exact path=\"/usuarios\" component={UsersPage} />\n                            {/* <PrivateRoute path=\"/tipos-residuos-solidos\" component={TypesSolidWastePage} /> */}\n                            <Route exact path=\"/tipos-residuos-solidos\" component={TypesSolidWastePage} />\n                            {/* <PrivateRoute path=\"/coletas\" component={SolidWasteCollectedPage} /> */}\n                            <Route exact path=\"/coletas\" component={SolidWasteCollectedPage} />\n                            {/* <PrivateRoute path=\"/analises\" component={AnalyzeCollectedWastesPage} /> */}\n                            <Route exact path=\"/analises\" component={AnalyzeCollectedWastesPage} />\n                            {/* <PrivateRoute path=\"/relatorios\" component={ReportPage} /> */}\n                            <Route exact path=\"/relatorios\" component={ReportPage} />\n                            {/* <Route exact path=\"/analises/s\" component={AnalyzeCollectedWastesPage} /> */}\n                        </>\n                    }\n\n                    titlePage={this.state.titlePage}\n                />\n            </Switch>\n        </Router>\n    );\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Routes from './Routes';\n\nimport 'antd/es/grid/style/index.css';\nimport 'antd/es/button/style/index.css';\nimport 'antd/es/form/style/index.css';\nimport 'antd/es/select/style/index.css';\nimport 'antd/es/input-number/style/index.css';\nimport 'antd/es/input/style/index.css';\nimport 'antd/es/date-picker/style/index.css';\nimport 'antd/es/divider/style/index.css';\nimport 'antd/es/layout/style/index.css';\nimport 'antd/es/icon/style/index.css';\nimport 'antd/es/drawer/style/index.css';\nimport 'antd/es/table/style/index.css';\nimport 'antd/es/modal/style/index.css';\nimport 'antd/es/checkbox/style/index.css';\nimport 'antd/es/tag/style/index.css';\nimport 'antd/es/menu/style/index.css';\nimport 'antd/es/pagination/style/index.css';\nimport 'antd/es/dropdown/style/index.css';\n// import 'antd/es/style/index.css'\n\nimport './theme/index.css';\nimport './App.css';\n\nexport default class App extends Component {\n    render = () => (\n        <Routes />\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}